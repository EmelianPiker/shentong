{-# LANGUAGE BangPatterns #-}
{-# LANGUAGE OverloadedStrings #-}

{-
Copyright (c) 2015, Mark Tarver

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.
3. The name of Mark Tarver may not be used to endorse or promote products
   derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY Mark Tarver ''AS IS'' AND ANY
EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL Mark Tarver BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-}

module Reader where

import Control.Monad.Except
import Control.Parallel
import Environment
import Primitives
import SourceUtils
import Types
import Utils
import Wrap
import Toplevel
import Core
import Sys
import Sequent
import Yacc

kl_read_file_as_bytelist :: Types.KLValue ->
                            Types.KLContext Types.Env Types.KLValue
kl_read_file_as_bytelist (!kl_V1216) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_Stream) -> do let !appl_1 = ApplC (Func "lambda" (Context (\(!kl_Byte) -> do let !appl_2 = ApplC (Func "lambda" (Context (\(!kl_Bytes) -> do let !appl_3 = ApplC (Func "lambda" (Context (\(!kl_Close) -> do kl_Bytes `pseq` kl_reverse kl_Bytes)))
                                                                                                                                                                                                                                          !appl_4 <- kl_Stream `pseq` closeStream kl_Stream
                                                                                                                                                                                                                                          appl_4 `pseq` applyWrapper appl_3 [appl_4])))
                                                                                                                                                                          let !appl_5 = List []
                                                                                                                                                                          !appl_6 <- kl_Stream `pseq` (kl_Byte `pseq` (appl_5 `pseq` kl_shen_read_file_as_bytelist_help kl_Stream kl_Byte appl_5))
                                                                                                                                                                          appl_6 `pseq` applyWrapper appl_2 [appl_6])))
                                                                                                           !appl_7 <- kl_Stream `pseq` readByte kl_Stream
                                                                                                           appl_7 `pseq` applyWrapper appl_1 [appl_7])))
                                          !appl_8 <- kl_V1216 `pseq` openStream kl_V1216 (Types.Atom (Types.UnboundSym "in"))
                                          appl_8 `pseq` applyWrapper appl_0 [appl_8]

kl_shen_read_file_as_bytelist_help :: Types.KLValue ->
                                      Types.KLValue ->
                                      Types.KLValue -> Types.KLContext Types.Env Types.KLValue
kl_shen_read_file_as_bytelist_help (!kl_V1217) (!kl_V1218) (!kl_V1219) = do !kl_if_0 <- kl_V1218 `pseq` eq (Types.Atom (Types.N (Types.KI (-1)))) kl_V1218
                                                                            klIf kl_if_0 (do return kl_V1219) (do klIf (Atom (B True)) (do !appl_1 <- kl_V1217 `pseq` readByte kl_V1217
                                                                                                                                           !appl_2 <- kl_V1218 `pseq` (kl_V1219 `pseq` klCons kl_V1218 kl_V1219)
                                                                                                                                           kl_V1217 `pseq` (appl_1 `pseq` (appl_2 `pseq` kl_shen_read_file_as_bytelist_help kl_V1217 appl_1 appl_2))) (do return (List [])))

kl_read_file_as_string :: Types.KLValue ->
                          Types.KLContext Types.Env Types.KLValue
kl_read_file_as_string (!kl_V1220) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_Stream) -> do !appl_1 <- kl_Stream `pseq` readByte kl_Stream
                                                                                                         kl_Stream `pseq` (appl_1 `pseq` kl_shen_rfas_h kl_Stream appl_1 (Types.Atom (Types.Str ""))))))
                                        !appl_2 <- kl_V1220 `pseq` openStream kl_V1220 (Types.Atom (Types.UnboundSym "in"))
                                        appl_2 `pseq` applyWrapper appl_0 [appl_2]

kl_shen_rfas_h :: Types.KLValue ->
                  Types.KLValue ->
                  Types.KLValue -> Types.KLContext Types.Env Types.KLValue
kl_shen_rfas_h (!kl_V1221) (!kl_V1222) (!kl_V1223) = do !kl_if_0 <- kl_V1222 `pseq` eq (Types.Atom (Types.N (Types.KI (-1)))) kl_V1222
                                                        klIf kl_if_0 (do !appl_1 <- kl_V1221 `pseq` closeStream kl_V1221
                                                                         appl_1 `pseq` (kl_V1223 `pseq` kl_do appl_1 kl_V1223)) (do klIf (Atom (B True)) (do !appl_2 <- kl_V1221 `pseq` readByte kl_V1221
                                                                                                                                                             !appl_3 <- kl_V1222 `pseq` nToString kl_V1222
                                                                                                                                                             !appl_4 <- kl_V1223 `pseq` (appl_3 `pseq` cn kl_V1223 appl_3)
                                                                                                                                                             kl_V1221 `pseq` (appl_2 `pseq` (appl_4 `pseq` kl_shen_rfas_h kl_V1221 appl_2 appl_4))) (do return (List [])))

kl_input :: Types.KLValue ->
            Types.KLContext Types.Env Types.KLValue
kl_input (!kl_V1224) = do !appl_0 <- kl_V1224 `pseq` kl_read kl_V1224
                          appl_0 `pseq` evalKL appl_0

kl_inputPlus :: Types.KLValue ->
                Types.KLValue -> Types.KLContext Types.Env Types.KLValue
kl_inputPlus (!kl_V1225) (!kl_V1226) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_MonoP) -> do let !appl_1 = ApplC (Func "lambda" (Context (\(!kl_Input) -> do let !aw_2 = Types.Atom (Types.UnboundSym "shen.demodulate")
                                                                                                                                                                          !appl_3 <- kl_V1225 `pseq` applyWrapper aw_2 [kl_V1225]
                                                                                                                                                                          let !aw_4 = Types.Atom (Types.UnboundSym "shen.typecheck")
                                                                                                                                                                          !appl_5 <- kl_Input `pseq` (appl_3 `pseq` applyWrapper aw_4 [kl_Input,
                                                                                                                                                                                                                                       appl_3])
                                                                                                                                                                          !kl_if_6 <- appl_5 `pseq` eq (Atom (B False)) appl_5
                                                                                                                                                                          klIf kl_if_6 (do let !aw_7 = Types.Atom (Types.UnboundSym "shen.app")
                                                                                                                                                                                           !appl_8 <- kl_V1225 `pseq` applyWrapper aw_7 [kl_V1225,
                                                                                                                                                                                                                                         Types.Atom (Types.Str "\n"),
                                                                                                                                                                                                                                         Types.Atom (Types.UnboundSym "shen.r")]
                                                                                                                                                                                           !appl_9 <- appl_8 `pseq` cn (Types.Atom (Types.Str " is not of type ")) appl_8
                                                                                                                                                                                           let !aw_10 = Types.Atom (Types.UnboundSym "shen.app")
                                                                                                                                                                                           !appl_11 <- kl_Input `pseq` (appl_9 `pseq` applyWrapper aw_10 [kl_Input,
                                                                                                                                                                                                                                                          appl_9,
                                                                                                                                                                                                                                                          Types.Atom (Types.UnboundSym "shen.r")])
                                                                                                                                                                                           !appl_12 <- appl_11 `pseq` cn (Types.Atom (Types.Str "type error: ")) appl_11
                                                                                                                                                                                           appl_12 `pseq` simpleError appl_12) (do kl_Input `pseq` evalKL kl_Input))))
                                                                                                          !appl_13 <- kl_V1226 `pseq` kl_read kl_V1226
                                                                                                          appl_13 `pseq` applyWrapper appl_1 [appl_13])))
                                          !appl_14 <- kl_V1225 `pseq` kl_shen_monotype kl_V1225
                                          appl_14 `pseq` applyWrapper appl_0 [appl_14]

kl_shen_monotype :: Types.KLValue ->
                    Types.KLContext Types.Env Types.KLValue
kl_shen_monotype (!kl_V1227) = do !kl_if_0 <- kl_V1227 `pseq` consP kl_V1227
                                  klIf kl_if_0 (do let !appl_1 = ApplC (Func "lambda" (Context (\(!kl_V1205) -> do kl_V1205 `pseq` kl_shen_monotype kl_V1205)))
                                                   appl_1 `pseq` (kl_V1227 `pseq` kl_map appl_1 kl_V1227)) (do klIf (Atom (B True)) (do !kl_if_2 <- kl_V1227 `pseq` kl_variableP kl_V1227
                                                                                                                                        klIf kl_if_2 (do let !aw_3 = Types.Atom (Types.UnboundSym "shen.app")
                                                                                                                                                         !appl_4 <- kl_V1227 `pseq` applyWrapper aw_3 [kl_V1227,
                                                                                                                                                                                                       Types.Atom (Types.Str "\n"),
                                                                                                                                                                                                       Types.Atom (Types.UnboundSym "shen.a")]
                                                                                                                                                         !appl_5 <- appl_4 `pseq` cn (Types.Atom (Types.Str "input+ expects a monotype: not ")) appl_4
                                                                                                                                                         appl_5 `pseq` simpleError appl_5) (do return kl_V1227)) (do return (List [])))

kl_read :: Types.KLValue -> Types.KLContext Types.Env Types.KLValue
kl_read (!kl_V1228) = do !appl_0 <- kl_V1228 `pseq` readByte kl_V1228
                         let !appl_1 = List []
                         !appl_2 <- kl_V1228 `pseq` (appl_0 `pseq` (appl_1 `pseq` kl_shen_read_loop kl_V1228 appl_0 appl_1))
                         appl_2 `pseq` hd appl_2

kl_it :: Types.KLContext Types.Env Types.KLValue
kl_it = do value (Types.Atom (Types.UnboundSym "shen.*it*"))

kl_shen_read_loop :: Types.KLValue ->
                     Types.KLValue ->
                     Types.KLValue -> Types.KLContext Types.Env Types.KLValue
kl_shen_read_loop (!kl_V1233) (!kl_V1234) (!kl_V1235) = do !kl_if_0 <- kl_V1234 `pseq` eq (Types.Atom (Types.N (Types.KI 94))) kl_V1234
                                                           klIf kl_if_0 (do simpleError (Types.Atom (Types.Str "read aborted"))) (do !kl_if_1 <- kl_V1234 `pseq` eq (Types.Atom (Types.N (Types.KI (-1)))) kl_V1234
                                                                                                                                     klIf kl_if_1 (do !kl_if_2 <- kl_V1235 `pseq` kl_emptyP kl_V1235
                                                                                                                                                      klIf kl_if_2 (do simpleError (Types.Atom (Types.Str "error: empty stream"))) (do let !appl_3 = ApplC (Func "lambda" (Context (\(!kl_V1206) -> do kl_V1206 `pseq` kl_shen_LBst_inputRB kl_V1206)))
                                                                                                                                                                                                                                       let !appl_4 = ApplC (Func "lambda" (Context (\(!kl_E) -> do return kl_E)))
                                                                                                                                                                                                                                       appl_3 `pseq` (kl_V1235 `pseq` (appl_4 `pseq` kl_compile appl_3 kl_V1235 appl_4)))) (do !kl_if_5 <- kl_V1234 `pseq` kl_shen_terminatorP kl_V1234
                                                                                                                                                                                                                                                                                                                               klIf kl_if_5 (do let !appl_6 = ApplC (Func "lambda" (Context (\(!kl_AllBytes) -> do let !appl_7 = ApplC (Func "lambda" (Context (\(!kl_It) -> do let !appl_8 = ApplC (Func "lambda" (Context (\(!kl_Read) -> do !kl_if_9 <- kl_Read `pseq` eq kl_Read (Types.Atom (Types.UnboundSym "shen.nextbyte"))
kl_if_10 <- klIf kl_if_9 (do return (Atom (B True))) (do kl_Read `pseq` kl_emptyP kl_Read)
klIf kl_if_10 (do !appl_11 <- kl_V1233 `pseq` readByte kl_V1233
kl_V1233 `pseq` (appl_11 `pseq` (kl_AllBytes `pseq` kl_shen_read_loop kl_V1233 appl_11 kl_AllBytes))) (do return kl_Read))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                let !appl_12 = ApplC (Func "lambda" (Context (\(!kl_V1207) -> do kl_V1207 `pseq` kl_shen_LBst_inputRB kl_V1207)))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                let !appl_13 = ApplC (Func "lambda" (Context (\(!kl_E) -> do return (Types.Atom (Types.UnboundSym "shen.nextbyte")))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                !appl_14 <- appl_12 `pseq` (kl_AllBytes `pseq` (appl_13 `pseq` kl_compile appl_12 kl_AllBytes appl_13))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                appl_14 `pseq` applyWrapper appl_8 [appl_14])))
                                                                                                                                                                                                                                                                                                                                                                                                                   !appl_15 <- kl_AllBytes `pseq` kl_shen_record_it kl_AllBytes
                                                                                                                                                                                                                                                                                                                                                                                                                   appl_15 `pseq` applyWrapper appl_7 [appl_15])))
                                                                                                                                                                                                                                                                                                                                                let !appl_16 = List []
                                                                                                                                                                                                                                                                                                                                                !appl_17 <- kl_V1234 `pseq` (appl_16 `pseq` klCons kl_V1234 appl_16)
                                                                                                                                                                                                                                                                                                                                                !appl_18 <- kl_V1235 `pseq` (appl_17 `pseq` kl_append kl_V1235 appl_17)
                                                                                                                                                                                                                                                                                                                                                appl_18 `pseq` applyWrapper appl_6 [appl_18]) (do klIf (Atom (B True)) (do !appl_19 <- kl_V1233 `pseq` readByte kl_V1233
                                                                                                                                                                                                                                                                                                                                                                                                                           let !appl_20 = List []
                                                                                                                                                                                                                                                                                                                                                                                                                           !appl_21 <- kl_V1234 `pseq` (appl_20 `pseq` klCons kl_V1234 appl_20)
                                                                                                                                                                                                                                                                                                                                                                                                                           !appl_22 <- kl_V1235 `pseq` (appl_21 `pseq` kl_append kl_V1235 appl_21)
                                                                                                                                                                                                                                                                                                                                                                                                                           kl_V1233 `pseq` (appl_19 `pseq` (appl_22 `pseq` kl_shen_read_loop kl_V1233 appl_19 appl_22))) (do return (List [])))))

kl_shen_terminatorP :: Types.KLValue ->
                       Types.KLContext Types.Env Types.KLValue
kl_shen_terminatorP (!kl_V1236) = do let !appl_0 = List []
                                     !appl_1 <- appl_0 `pseq` klCons (Types.Atom (Types.N (Types.KI 93))) appl_0
                                     !appl_2 <- appl_1 `pseq` klCons (Types.Atom (Types.N (Types.KI 41))) appl_1
                                     !appl_3 <- appl_2 `pseq` klCons (Types.Atom (Types.N (Types.KI 34))) appl_2
                                     !appl_4 <- appl_3 `pseq` klCons (Types.Atom (Types.N (Types.KI 32))) appl_3
                                     !appl_5 <- appl_4 `pseq` klCons (Types.Atom (Types.N (Types.KI 13))) appl_4
                                     !appl_6 <- appl_5 `pseq` klCons (Types.Atom (Types.N (Types.KI 10))) appl_5
                                     !appl_7 <- appl_6 `pseq` klCons (Types.Atom (Types.N (Types.KI 9))) appl_6
                                     kl_V1236 `pseq` (appl_7 `pseq` kl_elementP kl_V1236 appl_7)

kl_lineread :: Types.KLValue ->
               Types.KLContext Types.Env Types.KLValue
kl_lineread (!kl_V1237) = do !appl_0 <- kl_V1237 `pseq` readByte kl_V1237
                             let !appl_1 = List []
                             appl_0 `pseq` (appl_1 `pseq` (kl_V1237 `pseq` kl_shen_lineread_loop appl_0 appl_1 kl_V1237))

kl_shen_lineread_loop :: Types.KLValue ->
                         Types.KLValue ->
                         Types.KLValue -> Types.KLContext Types.Env Types.KLValue
kl_shen_lineread_loop (!kl_V1239) (!kl_V1240) (!kl_V1241) = do !kl_if_0 <- kl_V1239 `pseq` eq (Types.Atom (Types.N (Types.KI (-1)))) kl_V1239
                                                               klIf kl_if_0 (do !kl_if_1 <- kl_V1240 `pseq` kl_emptyP kl_V1240
                                                                                klIf kl_if_1 (do simpleError (Types.Atom (Types.Str "empty stream"))) (do let !appl_2 = ApplC (Func "lambda" (Context (\(!kl_V1208) -> do kl_V1208 `pseq` kl_shen_LBst_inputRB kl_V1208)))
                                                                                                                                                          let !appl_3 = ApplC (Func "lambda" (Context (\(!kl_E) -> do return kl_E)))
                                                                                                                                                          appl_2 `pseq` (kl_V1240 `pseq` (appl_3 `pseq` kl_compile appl_2 kl_V1240 appl_3)))) (do !appl_4 <- kl_shen_hat
                                                                                                                                                                                                                                                  !kl_if_5 <- kl_V1239 `pseq` (appl_4 `pseq` eq kl_V1239 appl_4)
                                                                                                                                                                                                                                                  klIf kl_if_5 (do simpleError (Types.Atom (Types.Str "line read aborted"))) (do !appl_6 <- kl_shen_newline
                                                                                                                                                                                                                                                                                                                                 !appl_7 <- kl_shen_carriage_return
                                                                                                                                                                                                                                                                                                                                 let !appl_8 = List []
                                                                                                                                                                                                                                                                                                                                 !appl_9 <- appl_7 `pseq` (appl_8 `pseq` klCons appl_7 appl_8)
                                                                                                                                                                                                                                                                                                                                 !appl_10 <- appl_6 `pseq` (appl_9 `pseq` klCons appl_6 appl_9)
                                                                                                                                                                                                                                                                                                                                 !kl_if_11 <- kl_V1239 `pseq` (appl_10 `pseq` kl_elementP kl_V1239 appl_10)
                                                                                                                                                                                                                                                                                                                                 klIf kl_if_11 (do let !appl_12 = ApplC (Func "lambda" (Context (\(!kl_Line) -> do let !appl_13 = ApplC (Func "lambda" (Context (\(!kl_It) -> do !kl_if_14 <- kl_Line `pseq` eq kl_Line (Types.Atom (Types.UnboundSym "shen.nextline"))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 !kl_if_15 <- klIf kl_if_14 (do return (Atom (B True))) (do kl_Line `pseq` kl_emptyP kl_Line)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 klIf kl_if_15 (do !appl_16 <- kl_V1241 `pseq` readByte kl_V1241
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   let !appl_17 = List []
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   !appl_18 <- kl_V1239 `pseq` (appl_17 `pseq` klCons kl_V1239 appl_17)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   !appl_19 <- kl_V1240 `pseq` (appl_18 `pseq` kl_append kl_V1240 appl_18)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   appl_16 `pseq` (appl_19 `pseq` (kl_V1241 `pseq` kl_shen_lineread_loop appl_16 appl_19 kl_V1241))) (do return kl_Line))))
                                                                                                                                                                                                                                                                                                                                                                                                                   !appl_20 <- kl_V1240 `pseq` kl_shen_record_it kl_V1240
                                                                                                                                                                                                                                                                                                                                                                                                                   appl_20 `pseq` applyWrapper appl_13 [appl_20])))
                                                                                                                                                                                                                                                                                                                                                   let !appl_21 = ApplC (Func "lambda" (Context (\(!kl_V1209) -> do kl_V1209 `pseq` kl_shen_LBst_inputRB kl_V1209)))
                                                                                                                                                                                                                                                                                                                                                   let !appl_22 = ApplC (Func "lambda" (Context (\(!kl_E) -> do return (Types.Atom (Types.UnboundSym "shen.nextline")))))
                                                                                                                                                                                                                                                                                                                                                   !appl_23 <- appl_21 `pseq` (kl_V1240 `pseq` (appl_22 `pseq` kl_compile appl_21 kl_V1240 appl_22))
                                                                                                                                                                                                                                                                                                                                                   appl_23 `pseq` applyWrapper appl_12 [appl_23]) (do klIf (Atom (B True)) (do !appl_24 <- kl_V1241 `pseq` readByte kl_V1241
                                                                                                                                                                                                                                                                                                                                                                                                                               let !appl_25 = List []
                                                                                                                                                                                                                                                                                                                                                                                                                               !appl_26 <- kl_V1239 `pseq` (appl_25 `pseq` klCons kl_V1239 appl_25)
                                                                                                                                                                                                                                                                                                                                                                                                                               !appl_27 <- kl_V1240 `pseq` (appl_26 `pseq` kl_append kl_V1240 appl_26)
                                                                                                                                                                                                                                                                                                                                                                                                                               appl_24 `pseq` (appl_27 `pseq` (kl_V1241 `pseq` kl_shen_lineread_loop appl_24 appl_27 kl_V1241))) (do return (List [])))))

kl_shen_record_it :: Types.KLValue ->
                     Types.KLContext Types.Env Types.KLValue
kl_shen_record_it (!kl_V1242) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_TrimLeft) -> do let !appl_1 = ApplC (Func "lambda" (Context (\(!kl_TrimRight) -> do let !appl_2 = ApplC (Func "lambda" (Context (\(!kl_Trimmed) -> do kl_Trimmed `pseq` kl_shen_record_it_h kl_Trimmed)))
                                                                                                                                                                          !appl_3 <- kl_TrimRight `pseq` kl_reverse kl_TrimRight
                                                                                                                                                                          appl_3 `pseq` applyWrapper appl_2 [appl_3])))
                                                                                                      !appl_4 <- kl_TrimLeft `pseq` kl_reverse kl_TrimLeft
                                                                                                      !appl_5 <- appl_4 `pseq` kl_shen_trim_whitespace appl_4
                                                                                                      appl_5 `pseq` applyWrapper appl_1 [appl_5])))
                                   !appl_6 <- kl_V1242 `pseq` kl_shen_trim_whitespace kl_V1242
                                   appl_6 `pseq` applyWrapper appl_0 [appl_6]

kl_shen_trim_whitespace :: Types.KLValue ->
                           Types.KLContext Types.Env Types.KLValue
kl_shen_trim_whitespace (!kl_V1243) = do !kl_if_0 <- kl_V1243 `pseq` consP kl_V1243
                                         !kl_if_1 <- klIf kl_if_0 (do !appl_2 <- kl_V1243 `pseq` hd kl_V1243
                                                                      let !appl_3 = List []
                                                                      !appl_4 <- appl_3 `pseq` klCons (Types.Atom (Types.N (Types.KI 32))) appl_3
                                                                      !appl_5 <- appl_4 `pseq` klCons (Types.Atom (Types.N (Types.KI 13))) appl_4
                                                                      !appl_6 <- appl_5 `pseq` klCons (Types.Atom (Types.N (Types.KI 10))) appl_5
                                                                      !appl_7 <- appl_6 `pseq` klCons (Types.Atom (Types.N (Types.KI 9))) appl_6
                                                                      appl_2 `pseq` (appl_7 `pseq` kl_elementP appl_2 appl_7)) (do return (Atom (B False)))
                                         klIf kl_if_1 (do !appl_8 <- kl_V1243 `pseq` tl kl_V1243
                                                          appl_8 `pseq` kl_shen_trim_whitespace appl_8) (do klIf (Atom (B True)) (do return kl_V1243) (do return (List [])))

kl_shen_record_it_h :: Types.KLValue ->
                       Types.KLContext Types.Env Types.KLValue
kl_shen_record_it_h (!kl_V1244) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_V1210) -> do kl_V1210 `pseq` nToString kl_V1210)))
                                     !appl_1 <- appl_0 `pseq` (kl_V1244 `pseq` kl_map appl_0 kl_V1244)
                                     !appl_2 <- appl_1 `pseq` kl_shen_cn_all appl_1
                                     !appl_3 <- appl_2 `pseq` klSet (Types.Atom (Types.UnboundSym "shen.*it*")) appl_2
                                     appl_3 `pseq` (kl_V1244 `pseq` kl_do appl_3 kl_V1244)

kl_shen_cn_all :: Types.KLValue ->
                  Types.KLContext Types.Env Types.KLValue
kl_shen_cn_all (!kl_V1245) = do let !appl_0 = List []
                                !kl_if_1 <- appl_0 `pseq` (kl_V1245 `pseq` eq appl_0 kl_V1245)
                                klIf kl_if_1 (do return (Types.Atom (Types.Str ""))) (do !kl_if_2 <- kl_V1245 `pseq` consP kl_V1245
                                                                                         klIf kl_if_2 (do !appl_3 <- kl_V1245 `pseq` hd kl_V1245
                                                                                                          !appl_4 <- kl_V1245 `pseq` tl kl_V1245
                                                                                                          !appl_5 <- appl_4 `pseq` kl_shen_cn_all appl_4
                                                                                                          appl_3 `pseq` (appl_5 `pseq` cn appl_3 appl_5)) (do klIf (Atom (B True)) (do let !aw_6 = Types.Atom (Types.UnboundSym "shen.f_error")
                                                                                                                                                                                       applyWrapper aw_6 [ApplC (wrapNamed "shen.cn-all" kl_shen_cn_all)]) (do return (List []))))

kl_read_file :: Types.KLValue ->
                Types.KLContext Types.Env Types.KLValue
kl_read_file (!kl_V1246) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_Bytelist) -> do let !appl_1 = ApplC (Func "lambda" (Context (\(!kl_V1212) -> do kl_V1212 `pseq` kl_shen_LBst_inputRB kl_V1212)))
                                                                                                 let !appl_2 = ApplC (Func "lambda" (Context (\(!kl_V1211) -> do kl_V1211 `pseq` kl_shen_read_error kl_V1211)))
                                                                                                 appl_1 `pseq` (kl_Bytelist `pseq` (appl_2 `pseq` kl_compile appl_1 kl_Bytelist appl_2)))))
                              !appl_3 <- kl_V1246 `pseq` kl_read_file_as_bytelist kl_V1246
                              appl_3 `pseq` applyWrapper appl_0 [appl_3]

kl_read_from_string :: Types.KLValue ->
                       Types.KLContext Types.Env Types.KLValue
kl_read_from_string (!kl_V1247) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_Ns) -> do let !appl_1 = ApplC (Func "lambda" (Context (\(!kl_V1215) -> do kl_V1215 `pseq` kl_shen_LBst_inputRB kl_V1215)))
                                                                                                  let !appl_2 = ApplC (Func "lambda" (Context (\(!kl_V1214) -> do kl_V1214 `pseq` kl_shen_read_error kl_V1214)))
                                                                                                  appl_1 `pseq` (kl_Ns `pseq` (appl_2 `pseq` kl_compile appl_1 kl_Ns appl_2)))))
                                     let !appl_3 = ApplC (Func "lambda" (Context (\(!kl_V1213) -> do kl_V1213 `pseq` stringToN kl_V1213)))
                                     !appl_4 <- kl_V1247 `pseq` kl_explode kl_V1247
                                     !appl_5 <- appl_3 `pseq` (appl_4 `pseq` kl_map appl_3 appl_4)
                                     appl_5 `pseq` applyWrapper appl_0 [appl_5]

kl_shen_read_error :: Types.KLValue ->
                      Types.KLContext Types.Env Types.KLValue
kl_shen_read_error (!kl_V1254) = do !kl_if_0 <- kl_V1254 `pseq` consP kl_V1254
                                    !kl_if_1 <- klIf kl_if_0 (do !appl_2 <- kl_V1254 `pseq` hd kl_V1254
                                                                 !kl_if_3 <- appl_2 `pseq` consP appl_2
                                                                 klIf kl_if_3 (do !appl_4 <- kl_V1254 `pseq` tl kl_V1254
                                                                                  !kl_if_5 <- appl_4 `pseq` consP appl_4
                                                                                  klIf kl_if_5 (do let !appl_6 = List []
                                                                                                   !appl_7 <- kl_V1254 `pseq` tl kl_V1254
                                                                                                   !appl_8 <- appl_7 `pseq` tl appl_7
                                                                                                   appl_6 `pseq` (appl_8 `pseq` eq appl_6 appl_8)) (do return (Atom (B False)))) (do return (Atom (B False)))) (do return (Atom (B False)))
                                    klIf kl_if_1 (do !appl_9 <- kl_V1254 `pseq` hd kl_V1254
                                                     !appl_10 <- appl_9 `pseq` kl_shen_compress_50 (Types.Atom (Types.N (Types.KI 50))) appl_9
                                                     let !aw_11 = Types.Atom (Types.UnboundSym "shen.app")
                                                     !appl_12 <- appl_10 `pseq` applyWrapper aw_11 [appl_10,
                                                                                                    Types.Atom (Types.Str "\n"),
                                                                                                    Types.Atom (Types.UnboundSym "shen.a")]
                                                     !appl_13 <- appl_12 `pseq` cn (Types.Atom (Types.Str "read error here:\n\n ")) appl_12
                                                     appl_13 `pseq` simpleError appl_13) (do klIf (Atom (B True)) (do simpleError (Types.Atom (Types.Str "read error\n"))) (do return (List [])))

kl_shen_compress_50 :: Types.KLValue ->
                       Types.KLValue -> Types.KLContext Types.Env Types.KLValue
kl_shen_compress_50 (!kl_V1259) (!kl_V1260) = do let !appl_0 = List []
                                                 !kl_if_1 <- appl_0 `pseq` (kl_V1260 `pseq` eq appl_0 kl_V1260)
                                                 klIf kl_if_1 (do return (Types.Atom (Types.Str ""))) (do !kl_if_2 <- kl_V1259 `pseq` eq (Types.Atom (Types.N (Types.KI 0))) kl_V1259
                                                                                                          klIf kl_if_2 (do return (Types.Atom (Types.Str ""))) (do !kl_if_3 <- kl_V1260 `pseq` consP kl_V1260
                                                                                                                                                                   klIf kl_if_3 (do !appl_4 <- kl_V1260 `pseq` hd kl_V1260
                                                                                                                                                                                    !appl_5 <- appl_4 `pseq` nToString appl_4
                                                                                                                                                                                    !appl_6 <- kl_V1259 `pseq` Primitives.subtract kl_V1259 (Types.Atom (Types.N (Types.KI 1)))
                                                                                                                                                                                    !appl_7 <- kl_V1260 `pseq` tl kl_V1260
                                                                                                                                                                                    !appl_8 <- appl_6 `pseq` (appl_7 `pseq` kl_shen_compress_50 appl_6 appl_7)
                                                                                                                                                                                    appl_5 `pseq` (appl_8 `pseq` cn appl_5 appl_8)) (do klIf (Atom (B True)) (do let !aw_9 = Types.Atom (Types.UnboundSym "shen.f_error")
                                                                                                                                                                                                                                                                 applyWrapper aw_9 [ApplC (wrapNamed "shen.compress-50" kl_shen_compress_50)]) (do return (List [])))))

kl_shen_LBst_inputRB :: Types.KLValue ->
                        Types.KLContext Types.Env Types.KLValue
kl_shen_LBst_inputRB (!kl_V1261) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_1 <- kl_fail
                                                                                                          !kl_if_2 <- kl_YaccParse `pseq` (appl_1 `pseq` eq kl_YaccParse appl_1)
                                                                                                          klIf kl_if_2 (do let !appl_3 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_4 <- kl_fail
                                                                                                                                                                                               !kl_if_5 <- kl_YaccParse `pseq` (appl_4 `pseq` eq kl_YaccParse appl_4)
                                                                                                                                                                                               klIf kl_if_5 (do let !appl_6 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_7 <- kl_fail
                                                                                                                                                                                                                                                                                    !kl_if_8 <- kl_YaccParse `pseq` (appl_7 `pseq` eq kl_YaccParse appl_7)
                                                                                                                                                                                                                                                                                    klIf kl_if_8 (do let !appl_9 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_10 <- kl_fail
                                                                                                                                                                                                                                                                                                                                                                         !kl_if_11 <- kl_YaccParse `pseq` (appl_10 `pseq` eq kl_YaccParse appl_10)
                                                                                                                                                                                                                                                                                                                                                                         klIf kl_if_11 (do let !appl_12 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_13 <- kl_fail
                                                                                                                                                                                                                                                                                                                                                                                                                                                                !kl_if_14 <- kl_YaccParse `pseq` (appl_13 `pseq` eq kl_YaccParse appl_13)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                klIf kl_if_14 (do let !appl_15 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_16 <- kl_fail
kl_if_17 <- kl_YaccParse `pseq` (appl_16 `pseq` eq kl_YaccParse appl_16)
klIf kl_if_17 (do let !appl_18 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_19 <- kl_fail
kl_if_20 <- kl_YaccParse `pseq` (appl_19 `pseq` eq kl_YaccParse appl_19)
klIf kl_if_20 (do let !appl_21 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_22 <- kl_fail
kl_if_23 <- kl_YaccParse `pseq` (appl_22 `pseq` eq kl_YaccParse appl_22)
klIf kl_if_23 (do let !appl_24 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_25 <- kl_fail
kl_if_26 <- kl_YaccParse `pseq` (appl_25 `pseq` eq kl_YaccParse appl_25)
klIf kl_if_26 (do let !appl_27 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_28 <- kl_fail
kl_if_29 <- kl_YaccParse `pseq` (appl_28 `pseq` eq kl_YaccParse appl_28)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   klIf kl_if_29 (do let !appl_30 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_31 <- kl_fail
kl_if_32 <- kl_YaccParse `pseq` (appl_31 `pseq` eq kl_YaccParse appl_31)
klIf kl_if_32 (do let !appl_33 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_34 <- kl_fail
kl_if_35 <- kl_YaccParse `pseq` (appl_34 `pseq` eq kl_YaccParse appl_34)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 klIf kl_if_35 (do let !appl_36 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_37 <- kl_fail
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        !kl_if_38 <- kl_YaccParse `pseq` (appl_37 `pseq` eq kl_YaccParse appl_37)
klIf kl_if_38 (do let !appl_39 = ApplC (Func "lambda" (Context (\(!kl_Parse_LBeRB) -> do !appl_40 <- kl_fail
appl_41 <- appl_40 `pseq` (kl_Parse_LBeRB `pseq` eq appl_40 kl_Parse_LBeRB)
kl_if_42 <- appl_41 `pseq` kl_not appl_41
klIf kl_if_42 (do !appl_43 <- kl_Parse_LBeRB `pseq` hd kl_Parse_LBeRB
let !appl_44 = List []
appl_43 `pseq` (appl_44 `pseq` kl_shen_pair appl_43 appl_44)) (do kl_fail))))
appl_45 <- kl_V1261 `pseq` kl_LBeRB kl_V1261
appl_45 `pseq` applyWrapper appl_39 [appl_45]) (do return kl_YaccParse))))
let !appl_46 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBwhitespacesRB) -> do !appl_47 <- kl_fail
appl_48 <- appl_47 `pseq` (kl_Parse_shen_LBwhitespacesRB `pseq` eq appl_47 kl_Parse_shen_LBwhitespacesRB)
kl_if_49 <- appl_48 `pseq` kl_not appl_48
klIf kl_if_49 (do let !appl_50 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBst_inputRB) -> do !appl_51 <- kl_fail
appl_52 <- appl_51 `pseq` (kl_Parse_shen_LBst_inputRB `pseq` eq appl_51 kl_Parse_shen_LBst_inputRB)
kl_if_53 <- appl_52 `pseq` kl_not appl_52
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              klIf kl_if_53 (do !appl_54 <- kl_Parse_shen_LBst_inputRB `pseq` hd kl_Parse_shen_LBst_inputRB
appl_55 <- kl_Parse_shen_LBst_inputRB `pseq` kl_shen_hdtl kl_Parse_shen_LBst_inputRB
appl_54 `pseq` (appl_55 `pseq` kl_shen_pair appl_54 appl_55)) (do kl_fail))))
appl_56 <- kl_Parse_shen_LBwhitespacesRB `pseq` kl_shen_LBst_inputRB kl_Parse_shen_LBwhitespacesRB
appl_56 `pseq` applyWrapper appl_50 [appl_56]) (do kl_fail))))
appl_57 <- kl_V1261 `pseq` kl_shen_LBwhitespacesRB kl_V1261
appl_58 <- appl_57 `pseq` applyWrapper appl_46 [appl_57]
appl_58 `pseq` applyWrapper appl_36 [appl_58]) (do return kl_YaccParse))))
let !appl_59 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBatomRB) -> do !appl_60 <- kl_fail
appl_61 <- appl_60 `pseq` (kl_Parse_shen_LBatomRB `pseq` eq appl_60 kl_Parse_shen_LBatomRB)
kl_if_62 <- appl_61 `pseq` kl_not appl_61
klIf kl_if_62 (do let !appl_63 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBst_inputRB) -> do !appl_64 <- kl_fail
appl_65 <- appl_64 `pseq` (kl_Parse_shen_LBst_inputRB `pseq` eq appl_64 kl_Parse_shen_LBst_inputRB)
kl_if_66 <- appl_65 `pseq` kl_not appl_65
klIf kl_if_66 (do !appl_67 <- kl_Parse_shen_LBst_inputRB `pseq` hd kl_Parse_shen_LBst_inputRB
appl_68 <- kl_Parse_shen_LBatomRB `pseq` kl_shen_hdtl kl_Parse_shen_LBatomRB
let !aw_69 = Types.Atom (Types.UnboundSym "macroexpand")
appl_70 <- appl_68 `pseq` applyWrapper aw_69 [appl_68]
appl_71 <- kl_Parse_shen_LBst_inputRB `pseq` kl_shen_hdtl kl_Parse_shen_LBst_inputRB
appl_72 <- appl_70 `pseq` (appl_71 `pseq` klCons appl_70 appl_71)
appl_67 `pseq` (appl_72 `pseq` kl_shen_pair appl_67 appl_72)) (do kl_fail))))
appl_73 <- kl_Parse_shen_LBatomRB `pseq` kl_shen_LBst_inputRB kl_Parse_shen_LBatomRB
appl_73 `pseq` applyWrapper appl_63 [appl_73]) (do kl_fail))))
appl_74 <- kl_V1261 `pseq` kl_shen_LBatomRB kl_V1261
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            !appl_75 <- appl_74 `pseq` applyWrapper appl_59 [appl_74]
appl_75 `pseq` applyWrapper appl_33 [appl_75]) (do return kl_YaccParse))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     let !appl_76 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBcommentRB) -> do !appl_77 <- kl_fail
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       !appl_78 <- appl_77 `pseq` (kl_Parse_shen_LBcommentRB `pseq` eq appl_77 kl_Parse_shen_LBcommentRB)
kl_if_79 <- appl_78 `pseq` kl_not appl_78
klIf kl_if_79 (do let !appl_80 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBst_inputRB) -> do !appl_81 <- kl_fail
appl_82 <- appl_81 `pseq` (kl_Parse_shen_LBst_inputRB `pseq` eq appl_81 kl_Parse_shen_LBst_inputRB)
kl_if_83 <- appl_82 `pseq` kl_not appl_82
klIf kl_if_83 (do !appl_84 <- kl_Parse_shen_LBst_inputRB `pseq` hd kl_Parse_shen_LBst_inputRB
appl_85 <- kl_Parse_shen_LBst_inputRB `pseq` kl_shen_hdtl kl_Parse_shen_LBst_inputRB
appl_84 `pseq` (appl_85 `pseq` kl_shen_pair appl_84 appl_85)) (do kl_fail))))
appl_86 <- kl_Parse_shen_LBcommentRB `pseq` kl_shen_LBst_inputRB kl_Parse_shen_LBcommentRB
appl_86 `pseq` applyWrapper appl_80 [appl_86]) (do kl_fail))))
appl_87 <- kl_V1261 `pseq` kl_shen_LBcommentRB kl_V1261
appl_88 <- appl_87 `pseq` applyWrapper appl_76 [appl_87]
appl_88 `pseq` applyWrapper appl_30 [appl_88]) (do return kl_YaccParse))))
let !appl_89 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBcommaRB) -> do !appl_90 <- kl_fail
appl_91 <- appl_90 `pseq` (kl_Parse_shen_LBcommaRB `pseq` eq appl_90 kl_Parse_shen_LBcommaRB)
kl_if_92 <- appl_91 `pseq` kl_not appl_91
klIf kl_if_92 (do let !appl_93 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBst_inputRB) -> do !appl_94 <- kl_fail
appl_95 <- appl_94 `pseq` (kl_Parse_shen_LBst_inputRB `pseq` eq appl_94 kl_Parse_shen_LBst_inputRB)
kl_if_96 <- appl_95 `pseq` kl_not appl_95
klIf kl_if_96 (do !appl_97 <- kl_Parse_shen_LBst_inputRB `pseq` hd kl_Parse_shen_LBst_inputRB
appl_98 <- intern (Types.Atom (Types.Str ","))
appl_99 <- kl_Parse_shen_LBst_inputRB `pseq` kl_shen_hdtl kl_Parse_shen_LBst_inputRB
appl_100 <- appl_98 `pseq` (appl_99 `pseq` klCons appl_98 appl_99)
appl_97 `pseq` (appl_100 `pseq` kl_shen_pair appl_97 appl_100)) (do kl_fail))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                !appl_101 <- kl_Parse_shen_LBcommaRB `pseq` kl_shen_LBst_inputRB kl_Parse_shen_LBcommaRB
appl_101 `pseq` applyWrapper appl_93 [appl_101]) (do kl_fail))))
appl_102 <- kl_V1261 `pseq` kl_shen_LBcommaRB kl_V1261
appl_103 <- appl_102 `pseq` applyWrapper appl_89 [appl_102]
appl_103 `pseq` applyWrapper appl_27 [appl_103]) (do return kl_YaccParse))))
let !appl_104 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBcolonRB) -> do !appl_105 <- kl_fail
appl_106 <- appl_105 `pseq` (kl_Parse_shen_LBcolonRB `pseq` eq appl_105 kl_Parse_shen_LBcolonRB)
kl_if_107 <- appl_106 `pseq` kl_not appl_106
klIf kl_if_107 (do let !appl_108 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBst_inputRB) -> do !appl_109 <- kl_fail
appl_110 <- appl_109 `pseq` (kl_Parse_shen_LBst_inputRB `pseq` eq appl_109 kl_Parse_shen_LBst_inputRB)
kl_if_111 <- appl_110 `pseq` kl_not appl_110
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               klIf kl_if_111 (do !appl_112 <- kl_Parse_shen_LBst_inputRB `pseq` hd kl_Parse_shen_LBst_inputRB
appl_113 <- kl_Parse_shen_LBst_inputRB `pseq` kl_shen_hdtl kl_Parse_shen_LBst_inputRB
appl_114 <- appl_113 `pseq` klCons (Types.Atom (Types.UnboundSym ":")) appl_113
appl_112 `pseq` (appl_114 `pseq` kl_shen_pair appl_112 appl_114)) (do kl_fail))))
appl_115 <- kl_Parse_shen_LBcolonRB `pseq` kl_shen_LBst_inputRB kl_Parse_shen_LBcolonRB
appl_115 `pseq` applyWrapper appl_108 [appl_115]) (do kl_fail))))
appl_116 <- kl_V1261 `pseq` kl_shen_LBcolonRB kl_V1261
appl_117 <- appl_116 `pseq` applyWrapper appl_104 [appl_116]
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       appl_117 `pseq` applyWrapper appl_24 [appl_117]) (do return kl_YaccParse))))
let !appl_118 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBcolonRB) -> do !appl_119 <- kl_fail
appl_120 <- appl_119 `pseq` (kl_Parse_shen_LBcolonRB `pseq` eq appl_119 kl_Parse_shen_LBcolonRB)
kl_if_121 <- appl_120 `pseq` kl_not appl_120
klIf kl_if_121 (do let !appl_122 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBminusRB) -> do !appl_123 <- kl_fail
appl_124 <- appl_123 `pseq` (kl_Parse_shen_LBminusRB `pseq` eq appl_123 kl_Parse_shen_LBminusRB)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     !kl_if_125 <- appl_124 `pseq` kl_not appl_124
klIf kl_if_125 (do let !appl_126 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBst_inputRB) -> do !appl_127 <- kl_fail
appl_128 <- appl_127 `pseq` (kl_Parse_shen_LBst_inputRB `pseq` eq appl_127 kl_Parse_shen_LBst_inputRB)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            !kl_if_129 <- appl_128 `pseq` kl_not appl_128
klIf kl_if_129 (do !appl_130 <- kl_Parse_shen_LBst_inputRB `pseq` hd kl_Parse_shen_LBst_inputRB
appl_131 <- kl_Parse_shen_LBst_inputRB `pseq` kl_shen_hdtl kl_Parse_shen_LBst_inputRB
appl_132 <- appl_131 `pseq` klCons (Types.Atom (Types.UnboundSym ":-")) appl_131
appl_130 `pseq` (appl_132 `pseq` kl_shen_pair appl_130 appl_132)) (do kl_fail))))
appl_133 <- kl_Parse_shen_LBminusRB `pseq` kl_shen_LBst_inputRB kl_Parse_shen_LBminusRB
appl_133 `pseq` applyWrapper appl_126 [appl_133]) (do kl_fail))))
appl_134 <- kl_Parse_shen_LBcolonRB `pseq` kl_shen_LBminusRB kl_Parse_shen_LBcolonRB
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    appl_134 `pseq` applyWrapper appl_122 [appl_134]) (do kl_fail))))
appl_135 <- kl_V1261 `pseq` kl_shen_LBcolonRB kl_V1261
appl_136 <- appl_135 `pseq` applyWrapper appl_118 [appl_135]
appl_136 `pseq` applyWrapper appl_21 [appl_136]) (do return kl_YaccParse))))
let !appl_137 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBcolonRB) -> do !appl_138 <- kl_fail
appl_139 <- appl_138 `pseq` (kl_Parse_shen_LBcolonRB `pseq` eq appl_138 kl_Parse_shen_LBcolonRB)
kl_if_140 <- appl_139 `pseq` kl_not appl_139
klIf kl_if_140 (do let !appl_141 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBequalRB) -> do !appl_142 <- kl_fail
appl_143 <- appl_142 `pseq` (kl_Parse_shen_LBequalRB `pseq` eq appl_142 kl_Parse_shen_LBequalRB)
kl_if_144 <- appl_143 `pseq` kl_not appl_143
klIf kl_if_144 (do let !appl_145 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBst_inputRB) -> do !appl_146 <- kl_fail
appl_147 <- appl_146 `pseq` (kl_Parse_shen_LBst_inputRB `pseq` eq appl_146 kl_Parse_shen_LBst_inputRB)
kl_if_148 <- appl_147 `pseq` kl_not appl_147
klIf kl_if_148 (do !appl_149 <- kl_Parse_shen_LBst_inputRB `pseq` hd kl_Parse_shen_LBst_inputRB
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        !appl_150 <- kl_Parse_shen_LBst_inputRB `pseq` kl_shen_hdtl kl_Parse_shen_LBst_inputRB
appl_151 <- appl_150 `pseq` klCons (Types.Atom (Types.UnboundSym ":=")) appl_150
appl_149 `pseq` (appl_151 `pseq` kl_shen_pair appl_149 appl_151)) (do kl_fail))))
appl_152 <- kl_Parse_shen_LBequalRB `pseq` kl_shen_LBst_inputRB kl_Parse_shen_LBequalRB
appl_152 `pseq` applyWrapper appl_145 [appl_152]) (do kl_fail))))
appl_153 <- kl_Parse_shen_LBcolonRB `pseq` kl_shen_LBequalRB kl_Parse_shen_LBcolonRB
appl_153 `pseq` applyWrapper appl_141 [appl_153]) (do kl_fail))))
appl_154 <- kl_V1261 `pseq` kl_shen_LBcolonRB kl_V1261
appl_155 <- appl_154 `pseq` applyWrapper appl_137 [appl_154]
appl_155 `pseq` applyWrapper appl_18 [appl_155]) (do return kl_YaccParse))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  let !appl_156 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBsemicolonRB) -> do !appl_157 <- kl_fail
appl_158 <- appl_157 `pseq` (kl_Parse_shen_LBsemicolonRB `pseq` eq appl_157 kl_Parse_shen_LBsemicolonRB)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       !kl_if_159 <- appl_158 `pseq` kl_not appl_158
klIf kl_if_159 (do let !appl_160 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBst_inputRB) -> do !appl_161 <- kl_fail
appl_162 <- appl_161 `pseq` (kl_Parse_shen_LBst_inputRB `pseq` eq appl_161 kl_Parse_shen_LBst_inputRB)
kl_if_163 <- appl_162 `pseq` kl_not appl_162
klIf kl_if_163 (do !appl_164 <- kl_Parse_shen_LBst_inputRB `pseq` hd kl_Parse_shen_LBst_inputRB
appl_165 <- kl_Parse_shen_LBst_inputRB `pseq` kl_shen_hdtl kl_Parse_shen_LBst_inputRB
appl_166 <- appl_165 `pseq` klCons (Types.Atom (Types.UnboundSym ";")) appl_165
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 appl_164 `pseq` (appl_166 `pseq` kl_shen_pair appl_164 appl_166)) (do kl_fail))))
appl_167 <- kl_Parse_shen_LBsemicolonRB `pseq` kl_shen_LBst_inputRB kl_Parse_shen_LBsemicolonRB
appl_167 `pseq` applyWrapper appl_160 [appl_167]) (do kl_fail))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  !appl_168 <- kl_V1261 `pseq` kl_shen_LBsemicolonRB kl_V1261
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  !appl_169 <- appl_168 `pseq` applyWrapper appl_156 [appl_168]
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  appl_169 `pseq` applyWrapper appl_15 [appl_169]) (do return kl_YaccParse))))
                                                                                                                                                                                                                                                                                                                                                                                           let !appl_170 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBbarRB) -> do !appl_171 <- kl_fail
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          !appl_172 <- appl_171 `pseq` (kl_Parse_shen_LBbarRB `pseq` eq appl_171 kl_Parse_shen_LBbarRB)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          !kl_if_173 <- appl_172 `pseq` kl_not appl_172
                                                                                                                                                                                                                                                                                                                                                                                                                                                                          klIf kl_if_173 (do let !appl_174 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBst_inputRB) -> do !appl_175 <- kl_fail
appl_176 <- appl_175 `pseq` (kl_Parse_shen_LBst_inputRB `pseq` eq appl_175 kl_Parse_shen_LBst_inputRB)
kl_if_177 <- appl_176 `pseq` kl_not appl_176
klIf kl_if_177 (do !appl_178 <- kl_Parse_shen_LBst_inputRB `pseq` hd kl_Parse_shen_LBst_inputRB
appl_179 <- kl_Parse_shen_LBst_inputRB `pseq` kl_shen_hdtl kl_Parse_shen_LBst_inputRB
appl_180 <- appl_179 `pseq` klCons (Types.Atom (Types.UnboundSym "bar!")) appl_179
appl_178 `pseq` (appl_180 `pseq` kl_shen_pair appl_178 appl_180)) (do kl_fail))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             !appl_181 <- kl_Parse_shen_LBbarRB `pseq` kl_shen_LBst_inputRB kl_Parse_shen_LBbarRB
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             appl_181 `pseq` applyWrapper appl_174 [appl_181]) (do kl_fail))))
                                                                                                                                                                                                                                                                                                                                                                                           !appl_182 <- kl_V1261 `pseq` kl_shen_LBbarRB kl_V1261
                                                                                                                                                                                                                                                                                                                                                                                           !appl_183 <- appl_182 `pseq` applyWrapper appl_170 [appl_182]
                                                                                                                                                                                                                                                                                                                                                                                           appl_183 `pseq` applyWrapper appl_12 [appl_183]) (do return kl_YaccParse))))
                                                                                                                                                                                                                                                                                                     let !appl_184 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBrcurlyRB) -> do !appl_185 <- kl_fail
                                                                                                                                                                                                                                                                                                                                                                                       !appl_186 <- appl_185 `pseq` (kl_Parse_shen_LBrcurlyRB `pseq` eq appl_185 kl_Parse_shen_LBrcurlyRB)
                                                                                                                                                                                                                                                                                                                                                                                       !kl_if_187 <- appl_186 `pseq` kl_not appl_186
                                                                                                                                                                                                                                                                                                                                                                                       klIf kl_if_187 (do let !appl_188 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBst_inputRB) -> do !appl_189 <- kl_fail
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              !appl_190 <- appl_189 `pseq` (kl_Parse_shen_LBst_inputRB `pseq` eq appl_189 kl_Parse_shen_LBst_inputRB)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              !kl_if_191 <- appl_190 `pseq` kl_not appl_190
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              klIf kl_if_191 (do !appl_192 <- kl_Parse_shen_LBst_inputRB `pseq` hd kl_Parse_shen_LBst_inputRB
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 !appl_193 <- kl_Parse_shen_LBst_inputRB `pseq` kl_shen_hdtl kl_Parse_shen_LBst_inputRB
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 !appl_194 <- appl_193 `pseq` klCons (Types.Atom (Types.UnboundSym "}")) appl_193
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 appl_192 `pseq` (appl_194 `pseq` kl_shen_pair appl_192 appl_194)) (do kl_fail))))
                                                                                                                                                                                                                                                                                                                                                                                                          !appl_195 <- kl_Parse_shen_LBrcurlyRB `pseq` kl_shen_LBst_inputRB kl_Parse_shen_LBrcurlyRB
                                                                                                                                                                                                                                                                                                                                                                                                          appl_195 `pseq` applyWrapper appl_188 [appl_195]) (do kl_fail))))
                                                                                                                                                                                                                                                                                                     !appl_196 <- kl_V1261 `pseq` kl_shen_LBrcurlyRB kl_V1261
                                                                                                                                                                                                                                                                                                     !appl_197 <- appl_196 `pseq` applyWrapper appl_184 [appl_196]
                                                                                                                                                                                                                                                                                                     appl_197 `pseq` applyWrapper appl_9 [appl_197]) (do return kl_YaccParse))))
                                                                                                                                                                                                                let !appl_198 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBlcurlyRB) -> do !appl_199 <- kl_fail
                                                                                                                                                                                                                                                                                                  !appl_200 <- appl_199 `pseq` (kl_Parse_shen_LBlcurlyRB `pseq` eq appl_199 kl_Parse_shen_LBlcurlyRB)
                                                                                                                                                                                                                                                                                                  !kl_if_201 <- appl_200 `pseq` kl_not appl_200
                                                                                                                                                                                                                                                                                                  klIf kl_if_201 (do let !appl_202 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBst_inputRB) -> do !appl_203 <- kl_fail
                                                                                                                                                                                                                                                                                                                                                                                                         !appl_204 <- appl_203 `pseq` (kl_Parse_shen_LBst_inputRB `pseq` eq appl_203 kl_Parse_shen_LBst_inputRB)
                                                                                                                                                                                                                                                                                                                                                                                                         !kl_if_205 <- appl_204 `pseq` kl_not appl_204
                                                                                                                                                                                                                                                                                                                                                                                                         klIf kl_if_205 (do !appl_206 <- kl_Parse_shen_LBst_inputRB `pseq` hd kl_Parse_shen_LBst_inputRB
                                                                                                                                                                                                                                                                                                                                                                                                                            !appl_207 <- kl_Parse_shen_LBst_inputRB `pseq` kl_shen_hdtl kl_Parse_shen_LBst_inputRB
                                                                                                                                                                                                                                                                                                                                                                                                                            !appl_208 <- appl_207 `pseq` klCons (Types.Atom (Types.UnboundSym "{")) appl_207
                                                                                                                                                                                                                                                                                                                                                                                                                            appl_206 `pseq` (appl_208 `pseq` kl_shen_pair appl_206 appl_208)) (do kl_fail))))
                                                                                                                                                                                                                                                                                                                     !appl_209 <- kl_Parse_shen_LBlcurlyRB `pseq` kl_shen_LBst_inputRB kl_Parse_shen_LBlcurlyRB
                                                                                                                                                                                                                                                                                                                     appl_209 `pseq` applyWrapper appl_202 [appl_209]) (do kl_fail))))
                                                                                                                                                                                                                !appl_210 <- kl_V1261 `pseq` kl_shen_LBlcurlyRB kl_V1261
                                                                                                                                                                                                                !appl_211 <- appl_210 `pseq` applyWrapper appl_198 [appl_210]
                                                                                                                                                                                                                appl_211 `pseq` applyWrapper appl_6 [appl_211]) (do return kl_YaccParse))))
                                                                                                                           let !appl_212 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBlrbRB) -> do !appl_213 <- kl_fail
                                                                                                                                                                                                          !appl_214 <- appl_213 `pseq` (kl_Parse_shen_LBlrbRB `pseq` eq appl_213 kl_Parse_shen_LBlrbRB)
                                                                                                                                                                                                          !kl_if_215 <- appl_214 `pseq` kl_not appl_214
                                                                                                                                                                                                          klIf kl_if_215 (do let !appl_216 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBst_input1RB) -> do !appl_217 <- kl_fail
                                                                                                                                                                                                                                                                                                                  !appl_218 <- appl_217 `pseq` (kl_Parse_shen_LBst_input1RB `pseq` eq appl_217 kl_Parse_shen_LBst_input1RB)
                                                                                                                                                                                                                                                                                                                  !kl_if_219 <- appl_218 `pseq` kl_not appl_218
                                                                                                                                                                                                                                                                                                                  klIf kl_if_219 (do let !appl_220 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBrrbRB) -> do !appl_221 <- kl_fail
                                                                                                                                                                                                                                                                                                                                                                                                                    !appl_222 <- appl_221 `pseq` (kl_Parse_shen_LBrrbRB `pseq` eq appl_221 kl_Parse_shen_LBrrbRB)
                                                                                                                                                                                                                                                                                                                                                                                                                    !kl_if_223 <- appl_222 `pseq` kl_not appl_222
                                                                                                                                                                                                                                                                                                                                                                                                                    klIf kl_if_223 (do let !appl_224 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBst_input2RB) -> do !appl_225 <- kl_fail
appl_226 <- appl_225 `pseq` (kl_Parse_shen_LBst_input2RB `pseq` eq appl_225 kl_Parse_shen_LBst_input2RB)
kl_if_227 <- appl_226 `pseq` kl_not appl_226
klIf kl_if_227 (do !appl_228 <- kl_Parse_shen_LBst_input2RB `pseq` hd kl_Parse_shen_LBst_input2RB
appl_229 <- kl_Parse_shen_LBst_input1RB `pseq` kl_shen_hdtl kl_Parse_shen_LBst_input1RB
let !aw_230 = Types.Atom (Types.UnboundSym "macroexpand")
appl_231 <- appl_229 `pseq` applyWrapper aw_230 [appl_229]
appl_232 <- kl_Parse_shen_LBst_input2RB `pseq` kl_shen_hdtl kl_Parse_shen_LBst_input2RB
appl_233 <- appl_231 `pseq` (appl_232 `pseq` kl_shen_package_macro appl_231 appl_232)
appl_228 `pseq` (appl_233 `pseq` kl_shen_pair appl_228 appl_233)) (do kl_fail))))
                                                                                                                                                                                                                                                                                                                                                                                                                                       !appl_234 <- kl_Parse_shen_LBrrbRB `pseq` kl_shen_LBst_input2RB kl_Parse_shen_LBrrbRB
                                                                                                                                                                                                                                                                                                                                                                                                                                       appl_234 `pseq` applyWrapper appl_224 [appl_234]) (do kl_fail))))
                                                                                                                                                                                                                                                                                                                                     !appl_235 <- kl_Parse_shen_LBst_input1RB `pseq` kl_shen_LBrrbRB kl_Parse_shen_LBst_input1RB
                                                                                                                                                                                                                                                                                                                                     appl_235 `pseq` applyWrapper appl_220 [appl_235]) (do kl_fail))))
                                                                                                                                                                                                                             !appl_236 <- kl_Parse_shen_LBlrbRB `pseq` kl_shen_LBst_input1RB kl_Parse_shen_LBlrbRB
                                                                                                                                                                                                                             appl_236 `pseq` applyWrapper appl_216 [appl_236]) (do kl_fail))))
                                                                                                                           !appl_237 <- kl_V1261 `pseq` kl_shen_LBlrbRB kl_V1261
                                                                                                                           !appl_238 <- appl_237 `pseq` applyWrapper appl_212 [appl_237]
                                                                                                                           appl_238 `pseq` applyWrapper appl_3 [appl_238]) (do return kl_YaccParse))))
                                      let !appl_239 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBlsbRB) -> do !appl_240 <- kl_fail
                                                                                                                     !appl_241 <- appl_240 `pseq` (kl_Parse_shen_LBlsbRB `pseq` eq appl_240 kl_Parse_shen_LBlsbRB)
                                                                                                                     !kl_if_242 <- appl_241 `pseq` kl_not appl_241
                                                                                                                     klIf kl_if_242 (do let !appl_243 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBst_input1RB) -> do !appl_244 <- kl_fail
                                                                                                                                                                                                                             !appl_245 <- appl_244 `pseq` (kl_Parse_shen_LBst_input1RB `pseq` eq appl_244 kl_Parse_shen_LBst_input1RB)
                                                                                                                                                                                                                             !kl_if_246 <- appl_245 `pseq` kl_not appl_245
                                                                                                                                                                                                                             klIf kl_if_246 (do let !appl_247 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBrsbRB) -> do !appl_248 <- kl_fail
                                                                                                                                                                                                                                                                                                                               !appl_249 <- appl_248 `pseq` (kl_Parse_shen_LBrsbRB `pseq` eq appl_248 kl_Parse_shen_LBrsbRB)
                                                                                                                                                                                                                                                                                                                               !kl_if_250 <- appl_249 `pseq` kl_not appl_249
                                                                                                                                                                                                                                                                                                                               klIf kl_if_250 (do let !appl_251 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBst_input2RB) -> do !appl_252 <- kl_fail
                                                                                                                                                                                                                                                                                                                                                                                                                                       !appl_253 <- appl_252 `pseq` (kl_Parse_shen_LBst_input2RB `pseq` eq appl_252 kl_Parse_shen_LBst_input2RB)
                                                                                                                                                                                                                                                                                                                                                                                                                                       !kl_if_254 <- appl_253 `pseq` kl_not appl_253
                                                                                                                                                                                                                                                                                                                                                                                                                                       klIf kl_if_254 (do !appl_255 <- kl_Parse_shen_LBst_input2RB `pseq` hd kl_Parse_shen_LBst_input2RB
                                                                                                                                                                                                                                                                                                                                                                                                                                                          !appl_256 <- kl_Parse_shen_LBst_input1RB `pseq` kl_shen_hdtl kl_Parse_shen_LBst_input1RB
                                                                                                                                                                                                                                                                                                                                                                                                                                                          !appl_257 <- appl_256 `pseq` kl_shen_cons_form appl_256
                                                                                                                                                                                                                                                                                                                                                                                                                                                          let !aw_258 = Types.Atom (Types.UnboundSym "macroexpand")
                                                                                                                                                                                                                                                                                                                                                                                                                                                          !appl_259 <- appl_257 `pseq` applyWrapper aw_258 [appl_257]
                                                                                                                                                                                                                                                                                                                                                                                                                                                          !appl_260 <- kl_Parse_shen_LBst_input2RB `pseq` kl_shen_hdtl kl_Parse_shen_LBst_input2RB
                                                                                                                                                                                                                                                                                                                                                                                                                                                          !appl_261 <- appl_259 `pseq` (appl_260 `pseq` klCons appl_259 appl_260)
                                                                                                                                                                                                                                                                                                                                                                                                                                                          appl_255 `pseq` (appl_261 `pseq` kl_shen_pair appl_255 appl_261)) (do kl_fail))))
                                                                                                                                                                                                                                                                                                                                                  !appl_262 <- kl_Parse_shen_LBrsbRB `pseq` kl_shen_LBst_input2RB kl_Parse_shen_LBrsbRB
                                                                                                                                                                                                                                                                                                                                                  appl_262 `pseq` applyWrapper appl_251 [appl_262]) (do kl_fail))))
                                                                                                                                                                                                                                                !appl_263 <- kl_Parse_shen_LBst_input1RB `pseq` kl_shen_LBrsbRB kl_Parse_shen_LBst_input1RB
                                                                                                                                                                                                                                                appl_263 `pseq` applyWrapper appl_247 [appl_263]) (do kl_fail))))
                                                                                                                                        !appl_264 <- kl_Parse_shen_LBlsbRB `pseq` kl_shen_LBst_input1RB kl_Parse_shen_LBlsbRB
                                                                                                                                        appl_264 `pseq` applyWrapper appl_243 [appl_264]) (do kl_fail))))
                                      !appl_265 <- kl_V1261 `pseq` kl_shen_LBlsbRB kl_V1261
                                      !appl_266 <- appl_265 `pseq` applyWrapper appl_239 [appl_265]
                                      appl_266 `pseq` applyWrapper appl_0 [appl_266]

kl_shen_LBlsbRB :: Types.KLValue ->
                   Types.KLContext Types.Env Types.KLValue
kl_shen_LBlsbRB (!kl_V1262) = do !appl_0 <- kl_V1262 `pseq` hd kl_V1262
                                 !kl_if_1 <- appl_0 `pseq` consP appl_0
                                 !kl_if_2 <- klIf kl_if_1 (do !appl_3 <- kl_V1262 `pseq` hd kl_V1262
                                                              !appl_4 <- appl_3 `pseq` hd appl_3
                                                              appl_4 `pseq` eq (Types.Atom (Types.N (Types.KI 91))) appl_4) (do return (Atom (B False)))
                                 klIf kl_if_2 (do !appl_5 <- kl_V1262 `pseq` hd kl_V1262
                                                  !appl_6 <- appl_5 `pseq` tl appl_5
                                                  !appl_7 <- kl_V1262 `pseq` kl_shen_hdtl kl_V1262
                                                  !appl_8 <- appl_6 `pseq` (appl_7 `pseq` kl_shen_pair appl_6 appl_7)
                                                  !appl_9 <- appl_8 `pseq` hd appl_8
                                                  appl_9 `pseq` kl_shen_pair appl_9 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail)

kl_shen_LBrsbRB :: Types.KLValue ->
                   Types.KLContext Types.Env Types.KLValue
kl_shen_LBrsbRB (!kl_V1263) = do !appl_0 <- kl_V1263 `pseq` hd kl_V1263
                                 !kl_if_1 <- appl_0 `pseq` consP appl_0
                                 !kl_if_2 <- klIf kl_if_1 (do !appl_3 <- kl_V1263 `pseq` hd kl_V1263
                                                              !appl_4 <- appl_3 `pseq` hd appl_3
                                                              appl_4 `pseq` eq (Types.Atom (Types.N (Types.KI 93))) appl_4) (do return (Atom (B False)))
                                 klIf kl_if_2 (do !appl_5 <- kl_V1263 `pseq` hd kl_V1263
                                                  !appl_6 <- appl_5 `pseq` tl appl_5
                                                  !appl_7 <- kl_V1263 `pseq` kl_shen_hdtl kl_V1263
                                                  !appl_8 <- appl_6 `pseq` (appl_7 `pseq` kl_shen_pair appl_6 appl_7)
                                                  !appl_9 <- appl_8 `pseq` hd appl_8
                                                  appl_9 `pseq` kl_shen_pair appl_9 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail)

kl_shen_LBlcurlyRB :: Types.KLValue ->
                      Types.KLContext Types.Env Types.KLValue
kl_shen_LBlcurlyRB (!kl_V1264) = do !appl_0 <- kl_V1264 `pseq` hd kl_V1264
                                    !kl_if_1 <- appl_0 `pseq` consP appl_0
                                    !kl_if_2 <- klIf kl_if_1 (do !appl_3 <- kl_V1264 `pseq` hd kl_V1264
                                                                 !appl_4 <- appl_3 `pseq` hd appl_3
                                                                 appl_4 `pseq` eq (Types.Atom (Types.N (Types.KI 123))) appl_4) (do return (Atom (B False)))
                                    klIf kl_if_2 (do !appl_5 <- kl_V1264 `pseq` hd kl_V1264
                                                     !appl_6 <- appl_5 `pseq` tl appl_5
                                                     !appl_7 <- kl_V1264 `pseq` kl_shen_hdtl kl_V1264
                                                     !appl_8 <- appl_6 `pseq` (appl_7 `pseq` kl_shen_pair appl_6 appl_7)
                                                     !appl_9 <- appl_8 `pseq` hd appl_8
                                                     appl_9 `pseq` kl_shen_pair appl_9 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail)

kl_shen_LBrcurlyRB :: Types.KLValue ->
                      Types.KLContext Types.Env Types.KLValue
kl_shen_LBrcurlyRB (!kl_V1265) = do !appl_0 <- kl_V1265 `pseq` hd kl_V1265
                                    !kl_if_1 <- appl_0 `pseq` consP appl_0
                                    !kl_if_2 <- klIf kl_if_1 (do !appl_3 <- kl_V1265 `pseq` hd kl_V1265
                                                                 !appl_4 <- appl_3 `pseq` hd appl_3
                                                                 appl_4 `pseq` eq (Types.Atom (Types.N (Types.KI 125))) appl_4) (do return (Atom (B False)))
                                    klIf kl_if_2 (do !appl_5 <- kl_V1265 `pseq` hd kl_V1265
                                                     !appl_6 <- appl_5 `pseq` tl appl_5
                                                     !appl_7 <- kl_V1265 `pseq` kl_shen_hdtl kl_V1265
                                                     !appl_8 <- appl_6 `pseq` (appl_7 `pseq` kl_shen_pair appl_6 appl_7)
                                                     !appl_9 <- appl_8 `pseq` hd appl_8
                                                     appl_9 `pseq` kl_shen_pair appl_9 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail)

kl_shen_LBbarRB :: Types.KLValue ->
                   Types.KLContext Types.Env Types.KLValue
kl_shen_LBbarRB (!kl_V1266) = do !appl_0 <- kl_V1266 `pseq` hd kl_V1266
                                 !kl_if_1 <- appl_0 `pseq` consP appl_0
                                 !kl_if_2 <- klIf kl_if_1 (do !appl_3 <- kl_V1266 `pseq` hd kl_V1266
                                                              !appl_4 <- appl_3 `pseq` hd appl_3
                                                              appl_4 `pseq` eq (Types.Atom (Types.N (Types.KI 124))) appl_4) (do return (Atom (B False)))
                                 klIf kl_if_2 (do !appl_5 <- kl_V1266 `pseq` hd kl_V1266
                                                  !appl_6 <- appl_5 `pseq` tl appl_5
                                                  !appl_7 <- kl_V1266 `pseq` kl_shen_hdtl kl_V1266
                                                  !appl_8 <- appl_6 `pseq` (appl_7 `pseq` kl_shen_pair appl_6 appl_7)
                                                  !appl_9 <- appl_8 `pseq` hd appl_8
                                                  appl_9 `pseq` kl_shen_pair appl_9 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail)

kl_shen_LBsemicolonRB :: Types.KLValue ->
                         Types.KLContext Types.Env Types.KLValue
kl_shen_LBsemicolonRB (!kl_V1267) = do !appl_0 <- kl_V1267 `pseq` hd kl_V1267
                                       !kl_if_1 <- appl_0 `pseq` consP appl_0
                                       !kl_if_2 <- klIf kl_if_1 (do !appl_3 <- kl_V1267 `pseq` hd kl_V1267
                                                                    !appl_4 <- appl_3 `pseq` hd appl_3
                                                                    appl_4 `pseq` eq (Types.Atom (Types.N (Types.KI 59))) appl_4) (do return (Atom (B False)))
                                       klIf kl_if_2 (do !appl_5 <- kl_V1267 `pseq` hd kl_V1267
                                                        !appl_6 <- appl_5 `pseq` tl appl_5
                                                        !appl_7 <- kl_V1267 `pseq` kl_shen_hdtl kl_V1267
                                                        !appl_8 <- appl_6 `pseq` (appl_7 `pseq` kl_shen_pair appl_6 appl_7)
                                                        !appl_9 <- appl_8 `pseq` hd appl_8
                                                        appl_9 `pseq` kl_shen_pair appl_9 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail)

kl_shen_LBcolonRB :: Types.KLValue ->
                     Types.KLContext Types.Env Types.KLValue
kl_shen_LBcolonRB (!kl_V1268) = do !appl_0 <- kl_V1268 `pseq` hd kl_V1268
                                   !kl_if_1 <- appl_0 `pseq` consP appl_0
                                   !kl_if_2 <- klIf kl_if_1 (do !appl_3 <- kl_V1268 `pseq` hd kl_V1268
                                                                !appl_4 <- appl_3 `pseq` hd appl_3
                                                                appl_4 `pseq` eq (Types.Atom (Types.N (Types.KI 58))) appl_4) (do return (Atom (B False)))
                                   klIf kl_if_2 (do !appl_5 <- kl_V1268 `pseq` hd kl_V1268
                                                    !appl_6 <- appl_5 `pseq` tl appl_5
                                                    !appl_7 <- kl_V1268 `pseq` kl_shen_hdtl kl_V1268
                                                    !appl_8 <- appl_6 `pseq` (appl_7 `pseq` kl_shen_pair appl_6 appl_7)
                                                    !appl_9 <- appl_8 `pseq` hd appl_8
                                                    appl_9 `pseq` kl_shen_pair appl_9 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail)

kl_shen_LBcommaRB :: Types.KLValue ->
                     Types.KLContext Types.Env Types.KLValue
kl_shen_LBcommaRB (!kl_V1269) = do !appl_0 <- kl_V1269 `pseq` hd kl_V1269
                                   !kl_if_1 <- appl_0 `pseq` consP appl_0
                                   !kl_if_2 <- klIf kl_if_1 (do !appl_3 <- kl_V1269 `pseq` hd kl_V1269
                                                                !appl_4 <- appl_3 `pseq` hd appl_3
                                                                appl_4 `pseq` eq (Types.Atom (Types.N (Types.KI 44))) appl_4) (do return (Atom (B False)))
                                   klIf kl_if_2 (do !appl_5 <- kl_V1269 `pseq` hd kl_V1269
                                                    !appl_6 <- appl_5 `pseq` tl appl_5
                                                    !appl_7 <- kl_V1269 `pseq` kl_shen_hdtl kl_V1269
                                                    !appl_8 <- appl_6 `pseq` (appl_7 `pseq` kl_shen_pair appl_6 appl_7)
                                                    !appl_9 <- appl_8 `pseq` hd appl_8
                                                    appl_9 `pseq` kl_shen_pair appl_9 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail)

kl_shen_LBequalRB :: Types.KLValue ->
                     Types.KLContext Types.Env Types.KLValue
kl_shen_LBequalRB (!kl_V1270) = do !appl_0 <- kl_V1270 `pseq` hd kl_V1270
                                   !kl_if_1 <- appl_0 `pseq` consP appl_0
                                   !kl_if_2 <- klIf kl_if_1 (do !appl_3 <- kl_V1270 `pseq` hd kl_V1270
                                                                !appl_4 <- appl_3 `pseq` hd appl_3
                                                                appl_4 `pseq` eq (Types.Atom (Types.N (Types.KI 61))) appl_4) (do return (Atom (B False)))
                                   klIf kl_if_2 (do !appl_5 <- kl_V1270 `pseq` hd kl_V1270
                                                    !appl_6 <- appl_5 `pseq` tl appl_5
                                                    !appl_7 <- kl_V1270 `pseq` kl_shen_hdtl kl_V1270
                                                    !appl_8 <- appl_6 `pseq` (appl_7 `pseq` kl_shen_pair appl_6 appl_7)
                                                    !appl_9 <- appl_8 `pseq` hd appl_8
                                                    appl_9 `pseq` kl_shen_pair appl_9 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail)

kl_shen_LBminusRB :: Types.KLValue ->
                     Types.KLContext Types.Env Types.KLValue
kl_shen_LBminusRB (!kl_V1271) = do !appl_0 <- kl_V1271 `pseq` hd kl_V1271
                                   !kl_if_1 <- appl_0 `pseq` consP appl_0
                                   !kl_if_2 <- klIf kl_if_1 (do !appl_3 <- kl_V1271 `pseq` hd kl_V1271
                                                                !appl_4 <- appl_3 `pseq` hd appl_3
                                                                appl_4 `pseq` eq (Types.Atom (Types.N (Types.KI 45))) appl_4) (do return (Atom (B False)))
                                   klIf kl_if_2 (do !appl_5 <- kl_V1271 `pseq` hd kl_V1271
                                                    !appl_6 <- appl_5 `pseq` tl appl_5
                                                    !appl_7 <- kl_V1271 `pseq` kl_shen_hdtl kl_V1271
                                                    !appl_8 <- appl_6 `pseq` (appl_7 `pseq` kl_shen_pair appl_6 appl_7)
                                                    !appl_9 <- appl_8 `pseq` hd appl_8
                                                    appl_9 `pseq` kl_shen_pair appl_9 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail)

kl_shen_LBlrbRB :: Types.KLValue ->
                   Types.KLContext Types.Env Types.KLValue
kl_shen_LBlrbRB (!kl_V1272) = do !appl_0 <- kl_V1272 `pseq` hd kl_V1272
                                 !kl_if_1 <- appl_0 `pseq` consP appl_0
                                 !kl_if_2 <- klIf kl_if_1 (do !appl_3 <- kl_V1272 `pseq` hd kl_V1272
                                                              !appl_4 <- appl_3 `pseq` hd appl_3
                                                              appl_4 `pseq` eq (Types.Atom (Types.N (Types.KI 40))) appl_4) (do return (Atom (B False)))
                                 klIf kl_if_2 (do !appl_5 <- kl_V1272 `pseq` hd kl_V1272
                                                  !appl_6 <- appl_5 `pseq` tl appl_5
                                                  !appl_7 <- kl_V1272 `pseq` kl_shen_hdtl kl_V1272
                                                  !appl_8 <- appl_6 `pseq` (appl_7 `pseq` kl_shen_pair appl_6 appl_7)
                                                  !appl_9 <- appl_8 `pseq` hd appl_8
                                                  appl_9 `pseq` kl_shen_pair appl_9 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail)

kl_shen_LBrrbRB :: Types.KLValue ->
                   Types.KLContext Types.Env Types.KLValue
kl_shen_LBrrbRB (!kl_V1273) = do !appl_0 <- kl_V1273 `pseq` hd kl_V1273
                                 !kl_if_1 <- appl_0 `pseq` consP appl_0
                                 !kl_if_2 <- klIf kl_if_1 (do !appl_3 <- kl_V1273 `pseq` hd kl_V1273
                                                              !appl_4 <- appl_3 `pseq` hd appl_3
                                                              appl_4 `pseq` eq (Types.Atom (Types.N (Types.KI 41))) appl_4) (do return (Atom (B False)))
                                 klIf kl_if_2 (do !appl_5 <- kl_V1273 `pseq` hd kl_V1273
                                                  !appl_6 <- appl_5 `pseq` tl appl_5
                                                  !appl_7 <- kl_V1273 `pseq` kl_shen_hdtl kl_V1273
                                                  !appl_8 <- appl_6 `pseq` (appl_7 `pseq` kl_shen_pair appl_6 appl_7)
                                                  !appl_9 <- appl_8 `pseq` hd appl_8
                                                  appl_9 `pseq` kl_shen_pair appl_9 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail)

kl_shen_LBatomRB :: Types.KLValue ->
                    Types.KLContext Types.Env Types.KLValue
kl_shen_LBatomRB (!kl_V1274) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_1 <- kl_fail
                                                                                                      !kl_if_2 <- kl_YaccParse `pseq` (appl_1 `pseq` eq kl_YaccParse appl_1)
                                                                                                      klIf kl_if_2 (do let !appl_3 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_4 <- kl_fail
                                                                                                                                                                                           !kl_if_5 <- kl_YaccParse `pseq` (appl_4 `pseq` eq kl_YaccParse appl_4)
                                                                                                                                                                                           klIf kl_if_5 (do let !appl_6 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBsymRB) -> do !appl_7 <- kl_fail
                                                                                                                                                                                                                                                                                         !appl_8 <- appl_7 `pseq` (kl_Parse_shen_LBsymRB `pseq` eq appl_7 kl_Parse_shen_LBsymRB)
                                                                                                                                                                                                                                                                                         !kl_if_9 <- appl_8 `pseq` kl_not appl_8
                                                                                                                                                                                                                                                                                         klIf kl_if_9 (do !appl_10 <- kl_Parse_shen_LBsymRB `pseq` hd kl_Parse_shen_LBsymRB
                                                                                                                                                                                                                                                                                                          !appl_11 <- kl_Parse_shen_LBsymRB `pseq` kl_shen_hdtl kl_Parse_shen_LBsymRB
                                                                                                                                                                                                                                                                                                          !kl_if_12 <- appl_11 `pseq` eq appl_11 (Types.Atom (Types.Str "<>"))
                                                                                                                                                                                                                                                                                                          !appl_13 <- klIf kl_if_12 (do let !appl_14 = List []
                                                                                                                                                                                                                                                                                                                                        !appl_15 <- appl_14 `pseq` klCons (Types.Atom (Types.N (Types.KI 0))) appl_14
                                                                                                                                                                                                                                                                                                                                        appl_15 `pseq` klCons (ApplC (wrapNamed "vector" kl_vector)) appl_15) (do !appl_16 <- kl_Parse_shen_LBsymRB `pseq` kl_shen_hdtl kl_Parse_shen_LBsymRB
                                                                                                                                                                                                                                                                                                                                                                                                                  appl_16 `pseq` intern appl_16)
                                                                                                                                                                                                                                                                                                          appl_10 `pseq` (appl_13 `pseq` kl_shen_pair appl_10 appl_13)) (do kl_fail))))
                                                                                                                                                                                                            !appl_17 <- kl_V1274 `pseq` kl_shen_LBsymRB kl_V1274
                                                                                                                                                                                                            appl_17 `pseq` applyWrapper appl_6 [appl_17]) (do return kl_YaccParse))))
                                                                                                                       let !appl_18 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBnumberRB) -> do !appl_19 <- kl_fail
                                                                                                                                                                                                        !appl_20 <- appl_19 `pseq` (kl_Parse_shen_LBnumberRB `pseq` eq appl_19 kl_Parse_shen_LBnumberRB)
                                                                                                                                                                                                        !kl_if_21 <- appl_20 `pseq` kl_not appl_20
                                                                                                                                                                                                        klIf kl_if_21 (do !appl_22 <- kl_Parse_shen_LBnumberRB `pseq` hd kl_Parse_shen_LBnumberRB
                                                                                                                                                                                                                          !appl_23 <- kl_Parse_shen_LBnumberRB `pseq` kl_shen_hdtl kl_Parse_shen_LBnumberRB
                                                                                                                                                                                                                          appl_22 `pseq` (appl_23 `pseq` kl_shen_pair appl_22 appl_23)) (do kl_fail))))
                                                                                                                       !appl_24 <- kl_V1274 `pseq` kl_shen_LBnumberRB kl_V1274
                                                                                                                       !appl_25 <- appl_24 `pseq` applyWrapper appl_18 [appl_24]
                                                                                                                       appl_25 `pseq` applyWrapper appl_3 [appl_25]) (do return kl_YaccParse))))
                                  let !appl_26 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBstrRB) -> do !appl_27 <- kl_fail
                                                                                                                !appl_28 <- appl_27 `pseq` (kl_Parse_shen_LBstrRB `pseq` eq appl_27 kl_Parse_shen_LBstrRB)
                                                                                                                !kl_if_29 <- appl_28 `pseq` kl_not appl_28
                                                                                                                klIf kl_if_29 (do !appl_30 <- kl_Parse_shen_LBstrRB `pseq` hd kl_Parse_shen_LBstrRB
                                                                                                                                  !appl_31 <- kl_Parse_shen_LBstrRB `pseq` kl_shen_hdtl kl_Parse_shen_LBstrRB
                                                                                                                                  !appl_32 <- appl_31 `pseq` kl_shen_control_chars appl_31
                                                                                                                                  appl_30 `pseq` (appl_32 `pseq` kl_shen_pair appl_30 appl_32)) (do kl_fail))))
                                  !appl_33 <- kl_V1274 `pseq` kl_shen_LBstrRB kl_V1274
                                  !appl_34 <- appl_33 `pseq` applyWrapper appl_26 [appl_33]
                                  appl_34 `pseq` applyWrapper appl_0 [appl_34]

kl_shen_control_chars :: Types.KLValue ->
                         Types.KLContext Types.Env Types.KLValue
kl_shen_control_chars (!kl_V1275) = do let !appl_0 = List []
                                       !kl_if_1 <- appl_0 `pseq` (kl_V1275 `pseq` eq appl_0 kl_V1275)
                                       klIf kl_if_1 (do return (Types.Atom (Types.Str ""))) (do !kl_if_2 <- kl_V1275 `pseq` consP kl_V1275
                                                                                                !kl_if_3 <- klIf kl_if_2 (do !appl_4 <- kl_V1275 `pseq` hd kl_V1275
                                                                                                                             !kl_if_5 <- appl_4 `pseq` eq (Types.Atom (Types.Str "c")) appl_4
                                                                                                                             klIf kl_if_5 (do !appl_6 <- kl_V1275 `pseq` tl kl_V1275
                                                                                                                                              !kl_if_7 <- appl_6 `pseq` consP appl_6
                                                                                                                                              klIf kl_if_7 (do !appl_8 <- kl_V1275 `pseq` tl kl_V1275
                                                                                                                                                               !appl_9 <- appl_8 `pseq` hd appl_8
                                                                                                                                                               appl_9 `pseq` eq (Types.Atom (Types.Str "#")) appl_9) (do return (Atom (B False)))) (do return (Atom (B False)))) (do return (Atom (B False)))
                                                                                                klIf kl_if_3 (do let !appl_10 = ApplC (Func "lambda" (Context (\(!kl_CodePoint) -> do let !appl_11 = ApplC (Func "lambda" (Context (\(!kl_AfterCodePoint) -> do !appl_12 <- kl_CodePoint `pseq` kl_shen_decimalise kl_CodePoint
                                                                                                                                                                                                                                                                !appl_13 <- appl_12 `pseq` nToString appl_12
                                                                                                                                                                                                                                                                !appl_14 <- kl_AfterCodePoint `pseq` kl_shen_control_chars kl_AfterCodePoint
                                                                                                                                                                                                                                                                appl_13 `pseq` (appl_14 `pseq` kl_Ats appl_13 appl_14))))
                                                                                                                                                                                      !appl_15 <- kl_V1275 `pseq` tl kl_V1275
                                                                                                                                                                                      !appl_16 <- appl_15 `pseq` tl appl_15
                                                                                                                                                                                      !appl_17 <- appl_16 `pseq` kl_shen_after_codepoint appl_16
                                                                                                                                                                                      appl_17 `pseq` applyWrapper appl_11 [appl_17])))
                                                                                                                 !appl_18 <- kl_V1275 `pseq` tl kl_V1275
                                                                                                                 !appl_19 <- appl_18 `pseq` tl appl_18
                                                                                                                 !appl_20 <- appl_19 `pseq` kl_shen_code_point appl_19
                                                                                                                 appl_20 `pseq` applyWrapper appl_10 [appl_20]) (do !kl_if_21 <- kl_V1275 `pseq` consP kl_V1275
                                                                                                                                                                    klIf kl_if_21 (do !appl_22 <- kl_V1275 `pseq` hd kl_V1275
                                                                                                                                                                                      !appl_23 <- kl_V1275 `pseq` tl kl_V1275
                                                                                                                                                                                      !appl_24 <- appl_23 `pseq` kl_shen_control_chars appl_23
                                                                                                                                                                                      appl_22 `pseq` (appl_24 `pseq` kl_Ats appl_22 appl_24)) (do klIf (Atom (B True)) (do let !aw_25 = Types.Atom (Types.UnboundSym "shen.f_error")
                                                                                                                                                                                                                                                                           applyWrapper aw_25 [ApplC (wrapNamed "shen.control-chars" kl_shen_control_chars)]) (do return (List [])))))

kl_shen_code_point :: Types.KLValue ->
                      Types.KLContext Types.Env Types.KLValue
kl_shen_code_point (!kl_V1278) = do !kl_if_0 <- kl_V1278 `pseq` consP kl_V1278
                                    !kl_if_1 <- klIf kl_if_0 (do !appl_2 <- kl_V1278 `pseq` hd kl_V1278
                                                                 appl_2 `pseq` eq (Types.Atom (Types.Str ";")) appl_2) (do return (Atom (B False)))
                                    klIf kl_if_1 (do return (Types.Atom (Types.Str ""))) (do !kl_if_3 <- kl_V1278 `pseq` consP kl_V1278
                                                                                             !kl_if_4 <- klIf kl_if_3 (do !appl_5 <- kl_V1278 `pseq` hd kl_V1278
                                                                                                                          let !appl_6 = List []
                                                                                                                          !appl_7 <- appl_6 `pseq` klCons (Types.Atom (Types.Str "0")) appl_6
                                                                                                                          !appl_8 <- appl_7 `pseq` klCons (Types.Atom (Types.Str "9")) appl_7
                                                                                                                          !appl_9 <- appl_8 `pseq` klCons (Types.Atom (Types.Str "8")) appl_8
                                                                                                                          !appl_10 <- appl_9 `pseq` klCons (Types.Atom (Types.Str "7")) appl_9
                                                                                                                          !appl_11 <- appl_10 `pseq` klCons (Types.Atom (Types.Str "6")) appl_10
                                                                                                                          !appl_12 <- appl_11 `pseq` klCons (Types.Atom (Types.Str "5")) appl_11
                                                                                                                          !appl_13 <- appl_12 `pseq` klCons (Types.Atom (Types.Str "4")) appl_12
                                                                                                                          !appl_14 <- appl_13 `pseq` klCons (Types.Atom (Types.Str "3")) appl_13
                                                                                                                          !appl_15 <- appl_14 `pseq` klCons (Types.Atom (Types.Str "2")) appl_14
                                                                                                                          !appl_16 <- appl_15 `pseq` klCons (Types.Atom (Types.Str "1")) appl_15
                                                                                                                          !appl_17 <- appl_16 `pseq` klCons (Types.Atom (Types.Str "0")) appl_16
                                                                                                                          appl_5 `pseq` (appl_17 `pseq` kl_elementP appl_5 appl_17)) (do return (Atom (B False)))
                                                                                             klIf kl_if_4 (do !appl_18 <- kl_V1278 `pseq` hd kl_V1278
                                                                                                              !appl_19 <- kl_V1278 `pseq` tl kl_V1278
                                                                                                              !appl_20 <- appl_19 `pseq` kl_shen_code_point appl_19
                                                                                                              appl_18 `pseq` (appl_20 `pseq` klCons appl_18 appl_20)) (do klIf (Atom (B True)) (do let !aw_21 = Types.Atom (Types.UnboundSym "shen.app")
                                                                                                                                                                                                   !appl_22 <- kl_V1278 `pseq` applyWrapper aw_21 [kl_V1278,
                                                                                                                                                                                                                                                   Types.Atom (Types.Str "\n"),
                                                                                                                                                                                                                                                   Types.Atom (Types.UnboundSym "shen.a")]
                                                                                                                                                                                                   !appl_23 <- appl_22 `pseq` cn (Types.Atom (Types.Str "code point parse error ")) appl_22
                                                                                                                                                                                                   appl_23 `pseq` simpleError appl_23) (do return (List []))))

kl_shen_after_codepoint :: Types.KLValue ->
                           Types.KLContext Types.Env Types.KLValue
kl_shen_after_codepoint (!kl_V1283) = do let !appl_0 = List []
                                         !kl_if_1 <- appl_0 `pseq` (kl_V1283 `pseq` eq appl_0 kl_V1283)
                                         klIf kl_if_1 (do return (List [])) (do !kl_if_2 <- kl_V1283 `pseq` consP kl_V1283
                                                                                !kl_if_3 <- klIf kl_if_2 (do !appl_4 <- kl_V1283 `pseq` hd kl_V1283
                                                                                                             appl_4 `pseq` eq (Types.Atom (Types.Str ";")) appl_4) (do return (Atom (B False)))
                                                                                klIf kl_if_3 (do kl_V1283 `pseq` tl kl_V1283) (do !kl_if_5 <- kl_V1283 `pseq` consP kl_V1283
                                                                                                                                  klIf kl_if_5 (do !appl_6 <- kl_V1283 `pseq` tl kl_V1283
                                                                                                                                                   appl_6 `pseq` kl_shen_after_codepoint appl_6) (do klIf (Atom (B True)) (do let !aw_7 = Types.Atom (Types.UnboundSym "shen.f_error")
                                                                                                                                                                                                                              applyWrapper aw_7 [ApplC (wrapNamed "shen.after-codepoint" kl_shen_after_codepoint)]) (do return (List [])))))

kl_shen_decimalise :: Types.KLValue ->
                      Types.KLContext Types.Env Types.KLValue
kl_shen_decimalise (!kl_V1284) = do !appl_0 <- kl_V1284 `pseq` kl_shen_digits_RBintegers kl_V1284
                                    !appl_1 <- appl_0 `pseq` kl_reverse appl_0
                                    appl_1 `pseq` kl_shen_pre appl_1 (Types.Atom (Types.N (Types.KI 0)))

kl_shen_digits_RBintegers :: Types.KLValue ->
                             Types.KLContext Types.Env Types.KLValue
kl_shen_digits_RBintegers (!kl_V1289) = do !kl_if_0 <- kl_V1289 `pseq` consP kl_V1289
                                           !kl_if_1 <- klIf kl_if_0 (do !appl_2 <- kl_V1289 `pseq` hd kl_V1289
                                                                        appl_2 `pseq` eq (Types.Atom (Types.Str "0")) appl_2) (do return (Atom (B False)))
                                           klIf kl_if_1 (do !appl_3 <- kl_V1289 `pseq` tl kl_V1289
                                                            !appl_4 <- appl_3 `pseq` kl_shen_digits_RBintegers appl_3
                                                            appl_4 `pseq` klCons (Types.Atom (Types.N (Types.KI 0))) appl_4) (do !kl_if_5 <- kl_V1289 `pseq` consP kl_V1289
                                                                                                                                 !kl_if_6 <- klIf kl_if_5 (do !appl_7 <- kl_V1289 `pseq` hd kl_V1289
                                                                                                                                                              appl_7 `pseq` eq (Types.Atom (Types.Str "1")) appl_7) (do return (Atom (B False)))
                                                                                                                                 klIf kl_if_6 (do !appl_8 <- kl_V1289 `pseq` tl kl_V1289
                                                                                                                                                  !appl_9 <- appl_8 `pseq` kl_shen_digits_RBintegers appl_8
                                                                                                                                                  appl_9 `pseq` klCons (Types.Atom (Types.N (Types.KI 1))) appl_9) (do !kl_if_10 <- kl_V1289 `pseq` consP kl_V1289
                                                                                                                                                                                                                       !kl_if_11 <- klIf kl_if_10 (do !appl_12 <- kl_V1289 `pseq` hd kl_V1289
                                                                                                                                                                                                                                                      appl_12 `pseq` eq (Types.Atom (Types.Str "2")) appl_12) (do return (Atom (B False)))
                                                                                                                                                                                                                       klIf kl_if_11 (do !appl_13 <- kl_V1289 `pseq` tl kl_V1289
                                                                                                                                                                                                                                         !appl_14 <- appl_13 `pseq` kl_shen_digits_RBintegers appl_13
                                                                                                                                                                                                                                         appl_14 `pseq` klCons (Types.Atom (Types.N (Types.KI 2))) appl_14) (do !kl_if_15 <- kl_V1289 `pseq` consP kl_V1289
                                                                                                                                                                                                                                                                                                                !kl_if_16 <- klIf kl_if_15 (do !appl_17 <- kl_V1289 `pseq` hd kl_V1289
                                                                                                                                                                                                                                                                                                                                               appl_17 `pseq` eq (Types.Atom (Types.Str "3")) appl_17) (do return (Atom (B False)))
                                                                                                                                                                                                                                                                                                                klIf kl_if_16 (do !appl_18 <- kl_V1289 `pseq` tl kl_V1289
                                                                                                                                                                                                                                                                                                                                  !appl_19 <- appl_18 `pseq` kl_shen_digits_RBintegers appl_18
                                                                                                                                                                                                                                                                                                                                  appl_19 `pseq` klCons (Types.Atom (Types.N (Types.KI 3))) appl_19) (do !kl_if_20 <- kl_V1289 `pseq` consP kl_V1289
                                                                                                                                                                                                                                                                                                                                                                                                         !kl_if_21 <- klIf kl_if_20 (do !appl_22 <- kl_V1289 `pseq` hd kl_V1289
                                                                                                                                                                                                                                                                                                                                                                                                                                        appl_22 `pseq` eq (Types.Atom (Types.Str "4")) appl_22) (do return (Atom (B False)))
                                                                                                                                                                                                                                                                                                                                                                                                         klIf kl_if_21 (do !appl_23 <- kl_V1289 `pseq` tl kl_V1289
                                                                                                                                                                                                                                                                                                                                                                                                                           !appl_24 <- appl_23 `pseq` kl_shen_digits_RBintegers appl_23
                                                                                                                                                                                                                                                                                                                                                                                                                           appl_24 `pseq` klCons (Types.Atom (Types.N (Types.KI 4))) appl_24) (do !kl_if_25 <- kl_V1289 `pseq` consP kl_V1289
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  !kl_if_26 <- klIf kl_if_25 (do !appl_27 <- kl_V1289 `pseq` hd kl_V1289
appl_27 `pseq` eq (Types.Atom (Types.Str "5")) appl_27) (do return (Atom (B False)))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  klIf kl_if_26 (do !appl_28 <- kl_V1289 `pseq` tl kl_V1289
appl_29 <- appl_28 `pseq` kl_shen_digits_RBintegers appl_28
appl_29 `pseq` klCons (Types.Atom (Types.N (Types.KI 5))) appl_29) (do !kl_if_30 <- kl_V1289 `pseq` consP kl_V1289
kl_if_31 <- klIf kl_if_30 (do !appl_32 <- kl_V1289 `pseq` hd kl_V1289
appl_32 `pseq` eq (Types.Atom (Types.Str "6")) appl_32) (do return (Atom (B False)))
klIf kl_if_31 (do !appl_33 <- kl_V1289 `pseq` tl kl_V1289
appl_34 <- appl_33 `pseq` kl_shen_digits_RBintegers appl_33
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             appl_34 `pseq` klCons (Types.Atom (Types.N (Types.KI 6))) appl_34) (do !kl_if_35 <- kl_V1289 `pseq` consP kl_V1289
kl_if_36 <- klIf kl_if_35 (do !appl_37 <- kl_V1289 `pseq` hd kl_V1289
appl_37 `pseq` eq (Types.Atom (Types.Str "7")) appl_37) (do return (Atom (B False)))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    klIf kl_if_36 (do !appl_38 <- kl_V1289 `pseq` tl kl_V1289
appl_39 <- appl_38 `pseq` kl_shen_digits_RBintegers appl_38
appl_39 `pseq` klCons (Types.Atom (Types.N (Types.KI 7))) appl_39) (do !kl_if_40 <- kl_V1289 `pseq` consP kl_V1289
kl_if_41 <- klIf kl_if_40 (do !appl_42 <- kl_V1289 `pseq` hd kl_V1289
appl_42 `pseq` eq (Types.Atom (Types.Str "8")) appl_42) (do return (Atom (B False)))
klIf kl_if_41 (do !appl_43 <- kl_V1289 `pseq` tl kl_V1289
appl_44 <- appl_43 `pseq` kl_shen_digits_RBintegers appl_43
appl_44 `pseq` klCons (Types.Atom (Types.N (Types.KI 8))) appl_44) (do !kl_if_45 <- kl_V1289 `pseq` consP kl_V1289
kl_if_46 <- klIf kl_if_45 (do !appl_47 <- kl_V1289 `pseq` hd kl_V1289
appl_47 `pseq` eq (Types.Atom (Types.Str "9")) appl_47) (do return (Atom (B False)))
klIf kl_if_46 (do !appl_48 <- kl_V1289 `pseq` tl kl_V1289
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        !appl_49 <- appl_48 `pseq` kl_shen_digits_RBintegers appl_48
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        appl_49 `pseq` klCons (Types.Atom (Types.N (Types.KI 9))) appl_49) (do klIf (Atom (B True)) (do return (List [])) (do return (List []))))))))))))

kl_shen_LBsymRB :: Types.KLValue ->
                   Types.KLContext Types.Env Types.KLValue
kl_shen_LBsymRB (!kl_V1290) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBalphaRB) -> do !appl_1 <- kl_fail
                                                                                                                !appl_2 <- appl_1 `pseq` (kl_Parse_shen_LBalphaRB `pseq` eq appl_1 kl_Parse_shen_LBalphaRB)
                                                                                                                !kl_if_3 <- appl_2 `pseq` kl_not appl_2
                                                                                                                klIf kl_if_3 (do let !appl_4 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBalphanumsRB) -> do !appl_5 <- kl_fail
                                                                                                                                                                                                                    !appl_6 <- appl_5 `pseq` (kl_Parse_shen_LBalphanumsRB `pseq` eq appl_5 kl_Parse_shen_LBalphanumsRB)
                                                                                                                                                                                                                    !kl_if_7 <- appl_6 `pseq` kl_not appl_6
                                                                                                                                                                                                                    klIf kl_if_7 (do !appl_8 <- kl_Parse_shen_LBalphanumsRB `pseq` hd kl_Parse_shen_LBalphanumsRB
                                                                                                                                                                                                                                     !appl_9 <- kl_Parse_shen_LBalphaRB `pseq` kl_shen_hdtl kl_Parse_shen_LBalphaRB
                                                                                                                                                                                                                                     !appl_10 <- kl_Parse_shen_LBalphanumsRB `pseq` kl_shen_hdtl kl_Parse_shen_LBalphanumsRB
                                                                                                                                                                                                                                     !appl_11 <- appl_9 `pseq` (appl_10 `pseq` kl_Ats appl_9 appl_10)
                                                                                                                                                                                                                                     appl_8 `pseq` (appl_11 `pseq` kl_shen_pair appl_8 appl_11)) (do kl_fail))))
                                                                                                                                 !appl_12 <- kl_Parse_shen_LBalphaRB `pseq` kl_shen_LBalphanumsRB kl_Parse_shen_LBalphaRB
                                                                                                                                 appl_12 `pseq` applyWrapper appl_4 [appl_12]) (do kl_fail))))
                                 !appl_13 <- kl_V1290 `pseq` kl_shen_LBalphaRB kl_V1290
                                 appl_13 `pseq` applyWrapper appl_0 [appl_13]

kl_shen_LBalphanumsRB :: Types.KLValue ->
                         Types.KLContext Types.Env Types.KLValue
kl_shen_LBalphanumsRB (!kl_V1291) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_1 <- kl_fail
                                                                                                           !kl_if_2 <- kl_YaccParse `pseq` (appl_1 `pseq` eq kl_YaccParse appl_1)
                                                                                                           klIf kl_if_2 (do let !appl_3 = ApplC (Func "lambda" (Context (\(!kl_Parse_LBeRB) -> do !appl_4 <- kl_fail
                                                                                                                                                                                                  !appl_5 <- appl_4 `pseq` (kl_Parse_LBeRB `pseq` eq appl_4 kl_Parse_LBeRB)
                                                                                                                                                                                                  !kl_if_6 <- appl_5 `pseq` kl_not appl_5
                                                                                                                                                                                                  klIf kl_if_6 (do !appl_7 <- kl_Parse_LBeRB `pseq` hd kl_Parse_LBeRB
                                                                                                                                                                                                                   appl_7 `pseq` kl_shen_pair appl_7 (Types.Atom (Types.Str ""))) (do kl_fail))))
                                                                                                                            !appl_8 <- kl_V1291 `pseq` kl_LBeRB kl_V1291
                                                                                                                            appl_8 `pseq` applyWrapper appl_3 [appl_8]) (do return kl_YaccParse))))
                                       let !appl_9 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBalphanumRB) -> do !appl_10 <- kl_fail
                                                                                                                         !appl_11 <- appl_10 `pseq` (kl_Parse_shen_LBalphanumRB `pseq` eq appl_10 kl_Parse_shen_LBalphanumRB)
                                                                                                                         !kl_if_12 <- appl_11 `pseq` kl_not appl_11
                                                                                                                         klIf kl_if_12 (do let !appl_13 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBalphanumsRB) -> do !appl_14 <- kl_fail
                                                                                                                                                                                                                               !appl_15 <- appl_14 `pseq` (kl_Parse_shen_LBalphanumsRB `pseq` eq appl_14 kl_Parse_shen_LBalphanumsRB)
                                                                                                                                                                                                                               !kl_if_16 <- appl_15 `pseq` kl_not appl_15
                                                                                                                                                                                                                               klIf kl_if_16 (do !appl_17 <- kl_Parse_shen_LBalphanumsRB `pseq` hd kl_Parse_shen_LBalphanumsRB
                                                                                                                                                                                                                                                 !appl_18 <- kl_Parse_shen_LBalphanumRB `pseq` kl_shen_hdtl kl_Parse_shen_LBalphanumRB
                                                                                                                                                                                                                                                 !appl_19 <- kl_Parse_shen_LBalphanumsRB `pseq` kl_shen_hdtl kl_Parse_shen_LBalphanumsRB
                                                                                                                                                                                                                                                 !appl_20 <- appl_18 `pseq` (appl_19 `pseq` kl_Ats appl_18 appl_19)
                                                                                                                                                                                                                                                 appl_17 `pseq` (appl_20 `pseq` kl_shen_pair appl_17 appl_20)) (do kl_fail))))
                                                                                                                                           !appl_21 <- kl_Parse_shen_LBalphanumRB `pseq` kl_shen_LBalphanumsRB kl_Parse_shen_LBalphanumRB
                                                                                                                                           appl_21 `pseq` applyWrapper appl_13 [appl_21]) (do kl_fail))))
                                       !appl_22 <- kl_V1291 `pseq` kl_shen_LBalphanumRB kl_V1291
                                       !appl_23 <- appl_22 `pseq` applyWrapper appl_9 [appl_22]
                                       appl_23 `pseq` applyWrapper appl_0 [appl_23]

kl_shen_LBalphanumRB :: Types.KLValue ->
                        Types.KLContext Types.Env Types.KLValue
kl_shen_LBalphanumRB (!kl_V1292) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_1 <- kl_fail
                                                                                                          !kl_if_2 <- kl_YaccParse `pseq` (appl_1 `pseq` eq kl_YaccParse appl_1)
                                                                                                          klIf kl_if_2 (do let !appl_3 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBnumRB) -> do !appl_4 <- kl_fail
                                                                                                                                                                                                        !appl_5 <- appl_4 `pseq` (kl_Parse_shen_LBnumRB `pseq` eq appl_4 kl_Parse_shen_LBnumRB)
                                                                                                                                                                                                        !kl_if_6 <- appl_5 `pseq` kl_not appl_5
                                                                                                                                                                                                        klIf kl_if_6 (do !appl_7 <- kl_Parse_shen_LBnumRB `pseq` hd kl_Parse_shen_LBnumRB
                                                                                                                                                                                                                         !appl_8 <- kl_Parse_shen_LBnumRB `pseq` kl_shen_hdtl kl_Parse_shen_LBnumRB
                                                                                                                                                                                                                         appl_7 `pseq` (appl_8 `pseq` kl_shen_pair appl_7 appl_8)) (do kl_fail))))
                                                                                                                           !appl_9 <- kl_V1292 `pseq` kl_shen_LBnumRB kl_V1292
                                                                                                                           appl_9 `pseq` applyWrapper appl_3 [appl_9]) (do return kl_YaccParse))))
                                      let !appl_10 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBalphaRB) -> do !appl_11 <- kl_fail
                                                                                                                      !appl_12 <- appl_11 `pseq` (kl_Parse_shen_LBalphaRB `pseq` eq appl_11 kl_Parse_shen_LBalphaRB)
                                                                                                                      !kl_if_13 <- appl_12 `pseq` kl_not appl_12
                                                                                                                      klIf kl_if_13 (do !appl_14 <- kl_Parse_shen_LBalphaRB `pseq` hd kl_Parse_shen_LBalphaRB
                                                                                                                                        !appl_15 <- kl_Parse_shen_LBalphaRB `pseq` kl_shen_hdtl kl_Parse_shen_LBalphaRB
                                                                                                                                        appl_14 `pseq` (appl_15 `pseq` kl_shen_pair appl_14 appl_15)) (do kl_fail))))
                                      !appl_16 <- kl_V1292 `pseq` kl_shen_LBalphaRB kl_V1292
                                      !appl_17 <- appl_16 `pseq` applyWrapper appl_10 [appl_16]
                                      appl_17 `pseq` applyWrapper appl_0 [appl_17]

kl_shen_LBnumRB :: Types.KLValue ->
                   Types.KLContext Types.Env Types.KLValue
kl_shen_LBnumRB (!kl_V1293) = do !appl_0 <- kl_V1293 `pseq` hd kl_V1293
                                 !kl_if_1 <- appl_0 `pseq` consP appl_0
                                 klIf kl_if_1 (do let !appl_2 = ApplC (Func "lambda" (Context (\(!kl_Parse_Byte) -> do !kl_if_3 <- kl_Parse_Byte `pseq` kl_shen_numbyteP kl_Parse_Byte
                                                                                                                       klIf kl_if_3 (do !appl_4 <- kl_V1293 `pseq` hd kl_V1293
                                                                                                                                        !appl_5 <- appl_4 `pseq` tl appl_4
                                                                                                                                        !appl_6 <- kl_V1293 `pseq` kl_shen_hdtl kl_V1293
                                                                                                                                        !appl_7 <- appl_5 `pseq` (appl_6 `pseq` kl_shen_pair appl_5 appl_6)
                                                                                                                                        !appl_8 <- appl_7 `pseq` hd appl_7
                                                                                                                                        !appl_9 <- kl_Parse_Byte `pseq` nToString kl_Parse_Byte
                                                                                                                                        appl_8 `pseq` (appl_9 `pseq` kl_shen_pair appl_8 appl_9)) (do kl_fail))))
                                                  !appl_10 <- kl_V1293 `pseq` hd kl_V1293
                                                  !appl_11 <- appl_10 `pseq` hd appl_10
                                                  appl_11 `pseq` applyWrapper appl_2 [appl_11]) (do kl_fail)

kl_shen_numbyteP :: Types.KLValue ->
                    Types.KLContext Types.Env Types.KLValue
kl_shen_numbyteP (!kl_V1298) = do !kl_if_0 <- kl_V1298 `pseq` eq (Types.Atom (Types.N (Types.KI 48))) kl_V1298
                                  klIf kl_if_0 (do return (Atom (B True))) (do !kl_if_1 <- kl_V1298 `pseq` eq (Types.Atom (Types.N (Types.KI 49))) kl_V1298
                                                                               klIf kl_if_1 (do return (Atom (B True))) (do !kl_if_2 <- kl_V1298 `pseq` eq (Types.Atom (Types.N (Types.KI 50))) kl_V1298
                                                                                                                            klIf kl_if_2 (do return (Atom (B True))) (do !kl_if_3 <- kl_V1298 `pseq` eq (Types.Atom (Types.N (Types.KI 51))) kl_V1298
                                                                                                                                                                         klIf kl_if_3 (do return (Atom (B True))) (do !kl_if_4 <- kl_V1298 `pseq` eq (Types.Atom (Types.N (Types.KI 52))) kl_V1298
                                                                                                                                                                                                                      klIf kl_if_4 (do return (Atom (B True))) (do !kl_if_5 <- kl_V1298 `pseq` eq (Types.Atom (Types.N (Types.KI 53))) kl_V1298
                                                                                                                                                                                                                                                                   klIf kl_if_5 (do return (Atom (B True))) (do !kl_if_6 <- kl_V1298 `pseq` eq (Types.Atom (Types.N (Types.KI 54))) kl_V1298
                                                                                                                                                                                                                                                                                                                klIf kl_if_6 (do return (Atom (B True))) (do !kl_if_7 <- kl_V1298 `pseq` eq (Types.Atom (Types.N (Types.KI 55))) kl_V1298
                                                                                                                                                                                                                                                                                                                                                             klIf kl_if_7 (do return (Atom (B True))) (do !kl_if_8 <- kl_V1298 `pseq` eq (Types.Atom (Types.N (Types.KI 56))) kl_V1298
                                                                                                                                                                                                                                                                                                                                                                                                          klIf kl_if_8 (do return (Atom (B True))) (do !kl_if_9 <- kl_V1298 `pseq` eq (Types.Atom (Types.N (Types.KI 57))) kl_V1298
                                                                                                                                                                                                                                                                                                                                                                                                                                                       klIf kl_if_9 (do return (Atom (B True))) (do klIf (Atom (B True)) (do return (Atom (B False))) (do return (List []))))))))))))

kl_shen_LBalphaRB :: Types.KLValue ->
                     Types.KLContext Types.Env Types.KLValue
kl_shen_LBalphaRB (!kl_V1299) = do !appl_0 <- kl_V1299 `pseq` hd kl_V1299
                                   !kl_if_1 <- appl_0 `pseq` consP appl_0
                                   klIf kl_if_1 (do let !appl_2 = ApplC (Func "lambda" (Context (\(!kl_Parse_Byte) -> do !kl_if_3 <- kl_Parse_Byte `pseq` kl_shen_symbol_codeP kl_Parse_Byte
                                                                                                                         klIf kl_if_3 (do !appl_4 <- kl_V1299 `pseq` hd kl_V1299
                                                                                                                                          !appl_5 <- appl_4 `pseq` tl appl_4
                                                                                                                                          !appl_6 <- kl_V1299 `pseq` kl_shen_hdtl kl_V1299
                                                                                                                                          !appl_7 <- appl_5 `pseq` (appl_6 `pseq` kl_shen_pair appl_5 appl_6)
                                                                                                                                          !appl_8 <- appl_7 `pseq` hd appl_7
                                                                                                                                          !appl_9 <- kl_Parse_Byte `pseq` nToString kl_Parse_Byte
                                                                                                                                          appl_8 `pseq` (appl_9 `pseq` kl_shen_pair appl_8 appl_9)) (do kl_fail))))
                                                    !appl_10 <- kl_V1299 `pseq` hd kl_V1299
                                                    !appl_11 <- appl_10 `pseq` hd appl_10
                                                    appl_11 `pseq` applyWrapper appl_2 [appl_11]) (do kl_fail)

kl_shen_symbol_codeP :: Types.KLValue ->
                        Types.KLContext Types.Env Types.KLValue
kl_shen_symbol_codeP (!kl_V1300) = do !kl_if_0 <- kl_V1300 `pseq` eq kl_V1300 (Types.Atom (Types.N (Types.KI 126)))
                                      klIf kl_if_0 (do return (Atom (B True))) (do !kl_if_1 <- kl_V1300 `pseq` greaterThan kl_V1300 (Types.Atom (Types.N (Types.KI 94)))
                                                                                   !kl_if_2 <- klIf kl_if_1 (do kl_V1300 `pseq` lessThan kl_V1300 (Types.Atom (Types.N (Types.KI 123)))) (do return (Atom (B False)))
                                                                                   klIf kl_if_2 (do return (Atom (B True))) (do !kl_if_3 <- kl_V1300 `pseq` greaterThan kl_V1300 (Types.Atom (Types.N (Types.KI 59)))
                                                                                                                                !kl_if_4 <- klIf kl_if_3 (do kl_V1300 `pseq` lessThan kl_V1300 (Types.Atom (Types.N (Types.KI 91)))) (do return (Atom (B False)))
                                                                                                                                klIf kl_if_4 (do return (Atom (B True))) (do !kl_if_5 <- kl_V1300 `pseq` greaterThan kl_V1300 (Types.Atom (Types.N (Types.KI 41)))
                                                                                                                                                                             !kl_if_6 <- klIf kl_if_5 (do !kl_if_7 <- kl_V1300 `pseq` lessThan kl_V1300 (Types.Atom (Types.N (Types.KI 58)))
                                                                                                                                                                                                          klIf kl_if_7 (do !appl_8 <- kl_V1300 `pseq` eq kl_V1300 (Types.Atom (Types.N (Types.KI 44)))
                                                                                                                                                                                                                           appl_8 `pseq` kl_not appl_8) (do return (Atom (B False)))) (do return (Atom (B False)))
                                                                                                                                                                             klIf kl_if_6 (do return (Atom (B True))) (do !kl_if_9 <- kl_V1300 `pseq` greaterThan kl_V1300 (Types.Atom (Types.N (Types.KI 34)))
                                                                                                                                                                                                                          !kl_if_10 <- klIf kl_if_9 (do kl_V1300 `pseq` lessThan kl_V1300 (Types.Atom (Types.N (Types.KI 40)))) (do return (Atom (B False)))
                                                                                                                                                                                                                          klIf kl_if_10 (do return (Atom (B True))) (do kl_V1300 `pseq` eq kl_V1300 (Types.Atom (Types.N (Types.KI 33))))))))

kl_shen_LBstrRB :: Types.KLValue ->
                   Types.KLContext Types.Env Types.KLValue
kl_shen_LBstrRB (!kl_V1301) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBdbqRB) -> do !appl_1 <- kl_fail
                                                                                                              !appl_2 <- appl_1 `pseq` (kl_Parse_shen_LBdbqRB `pseq` eq appl_1 kl_Parse_shen_LBdbqRB)
                                                                                                              !kl_if_3 <- appl_2 `pseq` kl_not appl_2
                                                                                                              klIf kl_if_3 (do let !appl_4 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBstrcontentsRB) -> do !appl_5 <- kl_fail
                                                                                                                                                                                                                    !appl_6 <- appl_5 `pseq` (kl_Parse_shen_LBstrcontentsRB `pseq` eq appl_5 kl_Parse_shen_LBstrcontentsRB)
                                                                                                                                                                                                                    !kl_if_7 <- appl_6 `pseq` kl_not appl_6
                                                                                                                                                                                                                    klIf kl_if_7 (do let !appl_8 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBdbqRB) -> do !appl_9 <- kl_fail
                                                                                                                                                                                                                                                                                                                  !appl_10 <- appl_9 `pseq` (kl_Parse_shen_LBdbqRB `pseq` eq appl_9 kl_Parse_shen_LBdbqRB)
                                                                                                                                                                                                                                                                                                                  !kl_if_11 <- appl_10 `pseq` kl_not appl_10
                                                                                                                                                                                                                                                                                                                  klIf kl_if_11 (do !appl_12 <- kl_Parse_shen_LBdbqRB `pseq` hd kl_Parse_shen_LBdbqRB
                                                                                                                                                                                                                                                                                                                                    !appl_13 <- kl_Parse_shen_LBstrcontentsRB `pseq` kl_shen_hdtl kl_Parse_shen_LBstrcontentsRB
                                                                                                                                                                                                                                                                                                                                    appl_12 `pseq` (appl_13 `pseq` kl_shen_pair appl_12 appl_13)) (do kl_fail))))
                                                                                                                                                                                                                                     !appl_14 <- kl_Parse_shen_LBstrcontentsRB `pseq` kl_shen_LBdbqRB kl_Parse_shen_LBstrcontentsRB
                                                                                                                                                                                                                                     appl_14 `pseq` applyWrapper appl_8 [appl_14]) (do kl_fail))))
                                                                                                                               !appl_15 <- kl_Parse_shen_LBdbqRB `pseq` kl_shen_LBstrcontentsRB kl_Parse_shen_LBdbqRB
                                                                                                                               appl_15 `pseq` applyWrapper appl_4 [appl_15]) (do kl_fail))))
                                 !appl_16 <- kl_V1301 `pseq` kl_shen_LBdbqRB kl_V1301
                                 appl_16 `pseq` applyWrapper appl_0 [appl_16]

kl_shen_LBdbqRB :: Types.KLValue ->
                   Types.KLContext Types.Env Types.KLValue
kl_shen_LBdbqRB (!kl_V1302) = do !appl_0 <- kl_V1302 `pseq` hd kl_V1302
                                 !kl_if_1 <- appl_0 `pseq` consP appl_0
                                 klIf kl_if_1 (do let !appl_2 = ApplC (Func "lambda" (Context (\(!kl_Parse_Byte) -> do !kl_if_3 <- kl_Parse_Byte `pseq` eq kl_Parse_Byte (Types.Atom (Types.N (Types.KI 34)))
                                                                                                                       klIf kl_if_3 (do !appl_4 <- kl_V1302 `pseq` hd kl_V1302
                                                                                                                                        !appl_5 <- appl_4 `pseq` tl appl_4
                                                                                                                                        !appl_6 <- kl_V1302 `pseq` kl_shen_hdtl kl_V1302
                                                                                                                                        !appl_7 <- appl_5 `pseq` (appl_6 `pseq` kl_shen_pair appl_5 appl_6)
                                                                                                                                        !appl_8 <- appl_7 `pseq` hd appl_7
                                                                                                                                        appl_8 `pseq` (kl_Parse_Byte `pseq` kl_shen_pair appl_8 kl_Parse_Byte)) (do kl_fail))))
                                                  !appl_9 <- kl_V1302 `pseq` hd kl_V1302
                                                  !appl_10 <- appl_9 `pseq` hd appl_9
                                                  appl_10 `pseq` applyWrapper appl_2 [appl_10]) (do kl_fail)

kl_shen_LBstrcontentsRB :: Types.KLValue ->
                           Types.KLContext Types.Env Types.KLValue
kl_shen_LBstrcontentsRB (!kl_V1303) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_1 <- kl_fail
                                                                                                             !kl_if_2 <- kl_YaccParse `pseq` (appl_1 `pseq` eq kl_YaccParse appl_1)
                                                                                                             klIf kl_if_2 (do let !appl_3 = ApplC (Func "lambda" (Context (\(!kl_Parse_LBeRB) -> do !appl_4 <- kl_fail
                                                                                                                                                                                                    !appl_5 <- appl_4 `pseq` (kl_Parse_LBeRB `pseq` eq appl_4 kl_Parse_LBeRB)
                                                                                                                                                                                                    !kl_if_6 <- appl_5 `pseq` kl_not appl_5
                                                                                                                                                                                                    klIf kl_if_6 (do !appl_7 <- kl_Parse_LBeRB `pseq` hd kl_Parse_LBeRB
                                                                                                                                                                                                                     let !appl_8 = List []
                                                                                                                                                                                                                     appl_7 `pseq` (appl_8 `pseq` kl_shen_pair appl_7 appl_8)) (do kl_fail))))
                                                                                                                              !appl_9 <- kl_V1303 `pseq` kl_LBeRB kl_V1303
                                                                                                                              appl_9 `pseq` applyWrapper appl_3 [appl_9]) (do return kl_YaccParse))))
                                         let !appl_10 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBstrcRB) -> do !appl_11 <- kl_fail
                                                                                                                        !appl_12 <- appl_11 `pseq` (kl_Parse_shen_LBstrcRB `pseq` eq appl_11 kl_Parse_shen_LBstrcRB)
                                                                                                                        !kl_if_13 <- appl_12 `pseq` kl_not appl_12
                                                                                                                        klIf kl_if_13 (do let !appl_14 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBstrcontentsRB) -> do !appl_15 <- kl_fail
                                                                                                                                                                                                                                !appl_16 <- appl_15 `pseq` (kl_Parse_shen_LBstrcontentsRB `pseq` eq appl_15 kl_Parse_shen_LBstrcontentsRB)
                                                                                                                                                                                                                                !kl_if_17 <- appl_16 `pseq` kl_not appl_16
                                                                                                                                                                                                                                klIf kl_if_17 (do !appl_18 <- kl_Parse_shen_LBstrcontentsRB `pseq` hd kl_Parse_shen_LBstrcontentsRB
                                                                                                                                                                                                                                                  !appl_19 <- kl_Parse_shen_LBstrcRB `pseq` kl_shen_hdtl kl_Parse_shen_LBstrcRB
                                                                                                                                                                                                                                                  !appl_20 <- kl_Parse_shen_LBstrcontentsRB `pseq` kl_shen_hdtl kl_Parse_shen_LBstrcontentsRB
                                                                                                                                                                                                                                                  !appl_21 <- appl_19 `pseq` (appl_20 `pseq` klCons appl_19 appl_20)
                                                                                                                                                                                                                                                  appl_18 `pseq` (appl_21 `pseq` kl_shen_pair appl_18 appl_21)) (do kl_fail))))
                                                                                                                                          !appl_22 <- kl_Parse_shen_LBstrcRB `pseq` kl_shen_LBstrcontentsRB kl_Parse_shen_LBstrcRB
                                                                                                                                          appl_22 `pseq` applyWrapper appl_14 [appl_22]) (do kl_fail))))
                                         !appl_23 <- kl_V1303 `pseq` kl_shen_LBstrcRB kl_V1303
                                         !appl_24 <- appl_23 `pseq` applyWrapper appl_10 [appl_23]
                                         appl_24 `pseq` applyWrapper appl_0 [appl_24]

kl_shen_LBbyteRB :: Types.KLValue ->
                    Types.KLContext Types.Env Types.KLValue
kl_shen_LBbyteRB (!kl_V1304) = do !appl_0 <- kl_V1304 `pseq` hd kl_V1304
                                  !kl_if_1 <- appl_0 `pseq` consP appl_0
                                  klIf kl_if_1 (do let !appl_2 = ApplC (Func "lambda" (Context (\(!kl_Parse_Byte) -> do !appl_3 <- kl_V1304 `pseq` hd kl_V1304
                                                                                                                        !appl_4 <- appl_3 `pseq` tl appl_3
                                                                                                                        !appl_5 <- kl_V1304 `pseq` kl_shen_hdtl kl_V1304
                                                                                                                        !appl_6 <- appl_4 `pseq` (appl_5 `pseq` kl_shen_pair appl_4 appl_5)
                                                                                                                        !appl_7 <- appl_6 `pseq` hd appl_6
                                                                                                                        !appl_8 <- kl_Parse_Byte `pseq` nToString kl_Parse_Byte
                                                                                                                        appl_7 `pseq` (appl_8 `pseq` kl_shen_pair appl_7 appl_8))))
                                                   !appl_9 <- kl_V1304 `pseq` hd kl_V1304
                                                   !appl_10 <- appl_9 `pseq` hd appl_9
                                                   appl_10 `pseq` applyWrapper appl_2 [appl_10]) (do kl_fail)

kl_shen_LBstrcRB :: Types.KLValue ->
                    Types.KLContext Types.Env Types.KLValue
kl_shen_LBstrcRB (!kl_V1305) = do !appl_0 <- kl_V1305 `pseq` hd kl_V1305
                                  !kl_if_1 <- appl_0 `pseq` consP appl_0
                                  klIf kl_if_1 (do let !appl_2 = ApplC (Func "lambda" (Context (\(!kl_Parse_Byte) -> do !appl_3 <- kl_Parse_Byte `pseq` eq kl_Parse_Byte (Types.Atom (Types.N (Types.KI 34)))
                                                                                                                        !kl_if_4 <- appl_3 `pseq` kl_not appl_3
                                                                                                                        klIf kl_if_4 (do !appl_5 <- kl_V1305 `pseq` hd kl_V1305
                                                                                                                                         !appl_6 <- appl_5 `pseq` tl appl_5
                                                                                                                                         !appl_7 <- kl_V1305 `pseq` kl_shen_hdtl kl_V1305
                                                                                                                                         !appl_8 <- appl_6 `pseq` (appl_7 `pseq` kl_shen_pair appl_6 appl_7)
                                                                                                                                         !appl_9 <- appl_8 `pseq` hd appl_8
                                                                                                                                         !appl_10 <- kl_Parse_Byte `pseq` nToString kl_Parse_Byte
                                                                                                                                         appl_9 `pseq` (appl_10 `pseq` kl_shen_pair appl_9 appl_10)) (do kl_fail))))
                                                   !appl_11 <- kl_V1305 `pseq` hd kl_V1305
                                                   !appl_12 <- appl_11 `pseq` hd appl_11
                                                   appl_12 `pseq` applyWrapper appl_2 [appl_12]) (do kl_fail)

kl_shen_LBnumberRB :: Types.KLValue ->
                      Types.KLContext Types.Env Types.KLValue
kl_shen_LBnumberRB (!kl_V1306) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_1 <- kl_fail
                                                                                                        !kl_if_2 <- kl_YaccParse `pseq` (appl_1 `pseq` eq kl_YaccParse appl_1)
                                                                                                        klIf kl_if_2 (do let !appl_3 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_4 <- kl_fail
                                                                                                                                                                                             !kl_if_5 <- kl_YaccParse `pseq` (appl_4 `pseq` eq kl_YaccParse appl_4)
                                                                                                                                                                                             klIf kl_if_5 (do let !appl_6 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_7 <- kl_fail
                                                                                                                                                                                                                                                                                  !kl_if_8 <- kl_YaccParse `pseq` (appl_7 `pseq` eq kl_YaccParse appl_7)
                                                                                                                                                                                                                                                                                  klIf kl_if_8 (do let !appl_9 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_10 <- kl_fail
                                                                                                                                                                                                                                                                                                                                                                       !kl_if_11 <- kl_YaccParse `pseq` (appl_10 `pseq` eq kl_YaccParse appl_10)
                                                                                                                                                                                                                                                                                                                                                                       klIf kl_if_11 (do let !appl_12 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_13 <- kl_fail
                                                                                                                                                                                                                                                                                                                                                                                                                                                              !kl_if_14 <- kl_YaccParse `pseq` (appl_13 `pseq` eq kl_YaccParse appl_13)
                                                                                                                                                                                                                                                                                                                                                                                                                                                              klIf kl_if_14 (do let !appl_15 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBdigitsRB) -> do !appl_16 <- kl_fail
appl_17 <- appl_16 `pseq` (kl_Parse_shen_LBdigitsRB `pseq` eq appl_16 kl_Parse_shen_LBdigitsRB)
kl_if_18 <- appl_17 `pseq` kl_not appl_17
klIf kl_if_18 (do !appl_19 <- kl_Parse_shen_LBdigitsRB `pseq` hd kl_Parse_shen_LBdigitsRB
appl_20 <- kl_Parse_shen_LBdigitsRB `pseq` kl_shen_hdtl kl_Parse_shen_LBdigitsRB
appl_21 <- appl_20 `pseq` kl_reverse appl_20
appl_22 <- appl_21 `pseq` kl_shen_pre appl_21 (Types.Atom (Types.N (Types.KI 0)))
appl_19 `pseq` (appl_22 `pseq` kl_shen_pair appl_19 appl_22)) (do kl_fail))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                !appl_23 <- kl_V1306 `pseq` kl_shen_LBdigitsRB kl_V1306
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                appl_23 `pseq` applyWrapper appl_15 [appl_23]) (do return kl_YaccParse))))
                                                                                                                                                                                                                                                                                                                                                                                         let !appl_24 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBpredigitsRB) -> do !appl_25 <- kl_fail
                                                                                                                                                                                                                                                                                                                                                                                                                                                                             !appl_26 <- appl_25 `pseq` (kl_Parse_shen_LBpredigitsRB `pseq` eq appl_25 kl_Parse_shen_LBpredigitsRB)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                             !kl_if_27 <- appl_26 `pseq` kl_not appl_26
                                                                                                                                                                                                                                                                                                                                                                                                                                                                             klIf kl_if_27 (do let !appl_28 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBstopRB) -> do !appl_29 <- kl_fail
appl_30 <- appl_29 `pseq` (kl_Parse_shen_LBstopRB `pseq` eq appl_29 kl_Parse_shen_LBstopRB)
kl_if_31 <- appl_30 `pseq` kl_not appl_30
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              klIf kl_if_31 (do let !appl_32 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBpostdigitsRB) -> do !appl_33 <- kl_fail
appl_34 <- appl_33 `pseq` (kl_Parse_shen_LBpostdigitsRB `pseq` eq appl_33 kl_Parse_shen_LBpostdigitsRB)
kl_if_35 <- appl_34 `pseq` kl_not appl_34
klIf kl_if_35 (do !appl_36 <- kl_Parse_shen_LBpostdigitsRB `pseq` hd kl_Parse_shen_LBpostdigitsRB
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       !appl_37 <- kl_Parse_shen_LBpredigitsRB `pseq` kl_shen_hdtl kl_Parse_shen_LBpredigitsRB
appl_38 <- appl_37 `pseq` kl_reverse appl_37
appl_39 <- appl_38 `pseq` kl_shen_pre appl_38 (Types.Atom (Types.N (Types.KI 0)))
appl_40 <- kl_Parse_shen_LBpostdigitsRB `pseq` kl_shen_hdtl kl_Parse_shen_LBpostdigitsRB
appl_41 <- appl_40 `pseq` kl_shen_post appl_40 (Types.Atom (Types.N (Types.KI 1)))
appl_42 <- appl_39 `pseq` (appl_41 `pseq` add appl_39 appl_41)
appl_36 `pseq` (appl_42 `pseq` kl_shen_pair appl_36 appl_42)) (do kl_fail))))
appl_43 <- kl_Parse_shen_LBstopRB `pseq` kl_shen_LBpostdigitsRB kl_Parse_shen_LBstopRB
appl_43 `pseq` applyWrapper appl_32 [appl_43]) (do kl_fail))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               !appl_44 <- kl_Parse_shen_LBpredigitsRB `pseq` kl_shen_LBstopRB kl_Parse_shen_LBpredigitsRB
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               appl_44 `pseq` applyWrapper appl_28 [appl_44]) (do kl_fail))))
                                                                                                                                                                                                                                                                                                                                                                                         !appl_45 <- kl_V1306 `pseq` kl_shen_LBpredigitsRB kl_V1306
                                                                                                                                                                                                                                                                                                                                                                                         !appl_46 <- appl_45 `pseq` applyWrapper appl_24 [appl_45]
                                                                                                                                                                                                                                                                                                                                                                                         appl_46 `pseq` applyWrapper appl_12 [appl_46]) (do return kl_YaccParse))))
                                                                                                                                                                                                                                                                                                   let !appl_47 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBdigitsRB) -> do !appl_48 <- kl_fail
                                                                                                                                                                                                                                                                                                                                                                                    !appl_49 <- appl_48 `pseq` (kl_Parse_shen_LBdigitsRB `pseq` eq appl_48 kl_Parse_shen_LBdigitsRB)
                                                                                                                                                                                                                                                                                                                                                                                    !kl_if_50 <- appl_49 `pseq` kl_not appl_49
                                                                                                                                                                                                                                                                                                                                                                                    klIf kl_if_50 (do let !appl_51 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBERB) -> do !appl_52 <- kl_fail
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  !appl_53 <- appl_52 `pseq` (kl_Parse_shen_LBERB `pseq` eq appl_52 kl_Parse_shen_LBERB)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  !kl_if_54 <- appl_53 `pseq` kl_not appl_53
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  klIf kl_if_54 (do let !appl_55 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBlog10RB) -> do !appl_56 <- kl_fail
appl_57 <- appl_56 `pseq` (kl_Parse_shen_LBlog10RB `pseq` eq appl_56 kl_Parse_shen_LBlog10RB)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    !kl_if_58 <- appl_57 `pseq` kl_not appl_57
klIf kl_if_58 (do !appl_59 <- kl_Parse_shen_LBlog10RB `pseq` hd kl_Parse_shen_LBlog10RB
appl_60 <- kl_Parse_shen_LBlog10RB `pseq` kl_shen_hdtl kl_Parse_shen_LBlog10RB
appl_61 <- appl_60 `pseq` kl_shen_expt (Types.Atom (Types.N (Types.KI 10))) appl_60
appl_62 <- kl_Parse_shen_LBdigitsRB `pseq` kl_shen_hdtl kl_Parse_shen_LBdigitsRB
appl_63 <- appl_62 `pseq` kl_reverse appl_62
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      !appl_64 <- appl_63 `pseq` kl_shen_pre appl_63 (Types.Atom (Types.N (Types.KI 0)))
appl_65 <- appl_61 `pseq` (appl_64 `pseq` multiply appl_61 appl_64)
appl_59 `pseq` (appl_65 `pseq` kl_shen_pair appl_59 appl_65)) (do kl_fail))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    !appl_66 <- kl_Parse_shen_LBERB `pseq` kl_shen_LBlog10RB kl_Parse_shen_LBERB
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    appl_66 `pseq` applyWrapper appl_55 [appl_66]) (do kl_fail))))
                                                                                                                                                                                                                                                                                                                                                                                                      !appl_67 <- kl_Parse_shen_LBdigitsRB `pseq` kl_shen_LBERB kl_Parse_shen_LBdigitsRB
                                                                                                                                                                                                                                                                                                                                                                                                      appl_67 `pseq` applyWrapper appl_51 [appl_67]) (do kl_fail))))
                                                                                                                                                                                                                                                                                                   !appl_68 <- kl_V1306 `pseq` kl_shen_LBdigitsRB kl_V1306
                                                                                                                                                                                                                                                                                                   !appl_69 <- appl_68 `pseq` applyWrapper appl_47 [appl_68]
                                                                                                                                                                                                                                                                                                   appl_69 `pseq` applyWrapper appl_9 [appl_69]) (do return kl_YaccParse))))
                                                                                                                                                                                                              let !appl_70 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBpredigitsRB) -> do !appl_71 <- kl_fail
                                                                                                                                                                                                                                                                                                  !appl_72 <- appl_71 `pseq` (kl_Parse_shen_LBpredigitsRB `pseq` eq appl_71 kl_Parse_shen_LBpredigitsRB)
                                                                                                                                                                                                                                                                                                  !kl_if_73 <- appl_72 `pseq` kl_not appl_72
                                                                                                                                                                                                                                                                                                  klIf kl_if_73 (do let !appl_74 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBstopRB) -> do !appl_75 <- kl_fail
                                                                                                                                                                                                                                                                                                                                                                                                   !appl_76 <- appl_75 `pseq` (kl_Parse_shen_LBstopRB `pseq` eq appl_75 kl_Parse_shen_LBstopRB)
                                                                                                                                                                                                                                                                                                                                                                                                   !kl_if_77 <- appl_76 `pseq` kl_not appl_76
                                                                                                                                                                                                                                                                                                                                                                                                   klIf kl_if_77 (do let !appl_78 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBpostdigitsRB) -> do !appl_79 <- kl_fail
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          !appl_80 <- appl_79 `pseq` (kl_Parse_shen_LBpostdigitsRB `pseq` eq appl_79 kl_Parse_shen_LBpostdigitsRB)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          !kl_if_81 <- appl_80 `pseq` kl_not appl_80
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          klIf kl_if_81 (do let !appl_82 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBERB) -> do !appl_83 <- kl_fail
appl_84 <- appl_83 `pseq` (kl_Parse_shen_LBERB `pseq` eq appl_83 kl_Parse_shen_LBERB)
kl_if_85 <- appl_84 `pseq` kl_not appl_84
klIf kl_if_85 (do let !appl_86 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBlog10RB) -> do !appl_87 <- kl_fail
appl_88 <- appl_87 `pseq` (kl_Parse_shen_LBlog10RB `pseq` eq appl_87 kl_Parse_shen_LBlog10RB)
kl_if_89 <- appl_88 `pseq` kl_not appl_88
klIf kl_if_89 (do !appl_90 <- kl_Parse_shen_LBlog10RB `pseq` hd kl_Parse_shen_LBlog10RB
appl_91 <- kl_Parse_shen_LBlog10RB `pseq` kl_shen_hdtl kl_Parse_shen_LBlog10RB
appl_92 <- appl_91 `pseq` kl_shen_expt (Types.Atom (Types.N (Types.KI 10))) appl_91
appl_93 <- kl_Parse_shen_LBpredigitsRB `pseq` kl_shen_hdtl kl_Parse_shen_LBpredigitsRB
appl_94 <- appl_93 `pseq` kl_reverse appl_93
appl_95 <- appl_94 `pseq` kl_shen_pre appl_94 (Types.Atom (Types.N (Types.KI 0)))
appl_96 <- kl_Parse_shen_LBpostdigitsRB `pseq` kl_shen_hdtl kl_Parse_shen_LBpostdigitsRB
appl_97 <- appl_96 `pseq` kl_shen_post appl_96 (Types.Atom (Types.N (Types.KI 1)))
appl_98 <- appl_95 `pseq` (appl_97 `pseq` add appl_95 appl_97)
appl_99 <- appl_92 `pseq` (appl_98 `pseq` multiply appl_92 appl_98)
appl_90 `pseq` (appl_99 `pseq` kl_shen_pair appl_90 appl_99)) (do kl_fail))))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          !appl_100 <- kl_Parse_shen_LBERB `pseq` kl_shen_LBlog10RB kl_Parse_shen_LBERB
appl_100 `pseq` applyWrapper appl_86 [appl_100]) (do kl_fail))))
appl_101 <- kl_Parse_shen_LBpostdigitsRB `pseq` kl_shen_LBERB kl_Parse_shen_LBpostdigitsRB
appl_101 `pseq` applyWrapper appl_82 [appl_101]) (do kl_fail))))
                                                                                                                                                                                                                                                                                                                                                                                                                     !appl_102 <- kl_Parse_shen_LBstopRB `pseq` kl_shen_LBpostdigitsRB kl_Parse_shen_LBstopRB
                                                                                                                                                                                                                                                                                                                                                                                                                     appl_102 `pseq` applyWrapper appl_78 [appl_102]) (do kl_fail))))
                                                                                                                                                                                                                                                                                                                    !appl_103 <- kl_Parse_shen_LBpredigitsRB `pseq` kl_shen_LBstopRB kl_Parse_shen_LBpredigitsRB
                                                                                                                                                                                                                                                                                                                    appl_103 `pseq` applyWrapper appl_74 [appl_103]) (do kl_fail))))
                                                                                                                                                                                                              !appl_104 <- kl_V1306 `pseq` kl_shen_LBpredigitsRB kl_V1306
                                                                                                                                                                                                              !appl_105 <- appl_104 `pseq` applyWrapper appl_70 [appl_104]
                                                                                                                                                                                                              appl_105 `pseq` applyWrapper appl_6 [appl_105]) (do return kl_YaccParse))))
                                                                                                                         let !appl_106 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBplusRB) -> do !appl_107 <- kl_fail
                                                                                                                                                                                                         !appl_108 <- appl_107 `pseq` (kl_Parse_shen_LBplusRB `pseq` eq appl_107 kl_Parse_shen_LBplusRB)
                                                                                                                                                                                                         !kl_if_109 <- appl_108 `pseq` kl_not appl_108
                                                                                                                                                                                                         klIf kl_if_109 (do let !appl_110 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBnumberRB) -> do !appl_111 <- kl_fail
                                                                                                                                                                                                                                                                                                              !appl_112 <- appl_111 `pseq` (kl_Parse_shen_LBnumberRB `pseq` eq appl_111 kl_Parse_shen_LBnumberRB)
                                                                                                                                                                                                                                                                                                              !kl_if_113 <- appl_112 `pseq` kl_not appl_112
                                                                                                                                                                                                                                                                                                              klIf kl_if_113 (do !appl_114 <- kl_Parse_shen_LBnumberRB `pseq` hd kl_Parse_shen_LBnumberRB
                                                                                                                                                                                                                                                                                                                                 !appl_115 <- kl_Parse_shen_LBnumberRB `pseq` kl_shen_hdtl kl_Parse_shen_LBnumberRB
                                                                                                                                                                                                                                                                                                                                 appl_114 `pseq` (appl_115 `pseq` kl_shen_pair appl_114 appl_115)) (do kl_fail))))
                                                                                                                                                                                                                            !appl_116 <- kl_Parse_shen_LBplusRB `pseq` kl_shen_LBnumberRB kl_Parse_shen_LBplusRB
                                                                                                                                                                                                                            appl_116 `pseq` applyWrapper appl_110 [appl_116]) (do kl_fail))))
                                                                                                                         !appl_117 <- kl_V1306 `pseq` kl_shen_LBplusRB kl_V1306
                                                                                                                         !appl_118 <- appl_117 `pseq` applyWrapper appl_106 [appl_117]
                                                                                                                         appl_118 `pseq` applyWrapper appl_3 [appl_118]) (do return kl_YaccParse))))
                                    let !appl_119 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBminusRB) -> do !appl_120 <- kl_fail
                                                                                                                     !appl_121 <- appl_120 `pseq` (kl_Parse_shen_LBminusRB `pseq` eq appl_120 kl_Parse_shen_LBminusRB)
                                                                                                                     !kl_if_122 <- appl_121 `pseq` kl_not appl_121
                                                                                                                     klIf kl_if_122 (do let !appl_123 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBnumberRB) -> do !appl_124 <- kl_fail
                                                                                                                                                                                                                          !appl_125 <- appl_124 `pseq` (kl_Parse_shen_LBnumberRB `pseq` eq appl_124 kl_Parse_shen_LBnumberRB)
                                                                                                                                                                                                                          !kl_if_126 <- appl_125 `pseq` kl_not appl_125
                                                                                                                                                                                                                          klIf kl_if_126 (do !appl_127 <- kl_Parse_shen_LBnumberRB `pseq` hd kl_Parse_shen_LBnumberRB
                                                                                                                                                                                                                                             !appl_128 <- kl_Parse_shen_LBnumberRB `pseq` kl_shen_hdtl kl_Parse_shen_LBnumberRB
                                                                                                                                                                                                                                             !appl_129 <- appl_128 `pseq` Primitives.subtract (Types.Atom (Types.N (Types.KI 0))) appl_128
                                                                                                                                                                                                                                             appl_127 `pseq` (appl_129 `pseq` kl_shen_pair appl_127 appl_129)) (do kl_fail))))
                                                                                                                                        !appl_130 <- kl_Parse_shen_LBminusRB `pseq` kl_shen_LBnumberRB kl_Parse_shen_LBminusRB
                                                                                                                                        appl_130 `pseq` applyWrapper appl_123 [appl_130]) (do kl_fail))))
                                    !appl_131 <- kl_V1306 `pseq` kl_shen_LBminusRB kl_V1306
                                    !appl_132 <- appl_131 `pseq` applyWrapper appl_119 [appl_131]
                                    appl_132 `pseq` applyWrapper appl_0 [appl_132]

kl_shen_LBERB :: Types.KLValue ->
                 Types.KLContext Types.Env Types.KLValue
kl_shen_LBERB (!kl_V1307) = do !appl_0 <- kl_V1307 `pseq` hd kl_V1307
                               !kl_if_1 <- appl_0 `pseq` consP appl_0
                               !kl_if_2 <- klIf kl_if_1 (do !appl_3 <- kl_V1307 `pseq` hd kl_V1307
                                                            !appl_4 <- appl_3 `pseq` hd appl_3
                                                            appl_4 `pseq` eq (Types.Atom (Types.N (Types.KI 101))) appl_4) (do return (Atom (B False)))
                               klIf kl_if_2 (do !appl_5 <- kl_V1307 `pseq` hd kl_V1307
                                                !appl_6 <- appl_5 `pseq` tl appl_5
                                                !appl_7 <- kl_V1307 `pseq` kl_shen_hdtl kl_V1307
                                                !appl_8 <- appl_6 `pseq` (appl_7 `pseq` kl_shen_pair appl_6 appl_7)
                                                !appl_9 <- appl_8 `pseq` hd appl_8
                                                appl_9 `pseq` kl_shen_pair appl_9 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail)

kl_shen_LBlog10RB :: Types.KLValue ->
                     Types.KLContext Types.Env Types.KLValue
kl_shen_LBlog10RB (!kl_V1308) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_1 <- kl_fail
                                                                                                       !kl_if_2 <- kl_YaccParse `pseq` (appl_1 `pseq` eq kl_YaccParse appl_1)
                                                                                                       klIf kl_if_2 (do let !appl_3 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBdigitsRB) -> do !appl_4 <- kl_fail
                                                                                                                                                                                                        !appl_5 <- appl_4 `pseq` (kl_Parse_shen_LBdigitsRB `pseq` eq appl_4 kl_Parse_shen_LBdigitsRB)
                                                                                                                                                                                                        !kl_if_6 <- appl_5 `pseq` kl_not appl_5
                                                                                                                                                                                                        klIf kl_if_6 (do !appl_7 <- kl_Parse_shen_LBdigitsRB `pseq` hd kl_Parse_shen_LBdigitsRB
                                                                                                                                                                                                                         !appl_8 <- kl_Parse_shen_LBdigitsRB `pseq` kl_shen_hdtl kl_Parse_shen_LBdigitsRB
                                                                                                                                                                                                                         !appl_9 <- appl_8 `pseq` kl_reverse appl_8
                                                                                                                                                                                                                         !appl_10 <- appl_9 `pseq` kl_shen_pre appl_9 (Types.Atom (Types.N (Types.KI 0)))
                                                                                                                                                                                                                         appl_7 `pseq` (appl_10 `pseq` kl_shen_pair appl_7 appl_10)) (do kl_fail))))
                                                                                                                        !appl_11 <- kl_V1308 `pseq` kl_shen_LBdigitsRB kl_V1308
                                                                                                                        appl_11 `pseq` applyWrapper appl_3 [appl_11]) (do return kl_YaccParse))))
                                   let !appl_12 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBminusRB) -> do !appl_13 <- kl_fail
                                                                                                                   !appl_14 <- appl_13 `pseq` (kl_Parse_shen_LBminusRB `pseq` eq appl_13 kl_Parse_shen_LBminusRB)
                                                                                                                   !kl_if_15 <- appl_14 `pseq` kl_not appl_14
                                                                                                                   klIf kl_if_15 (do let !appl_16 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBdigitsRB) -> do !appl_17 <- kl_fail
                                                                                                                                                                                                                      !appl_18 <- appl_17 `pseq` (kl_Parse_shen_LBdigitsRB `pseq` eq appl_17 kl_Parse_shen_LBdigitsRB)
                                                                                                                                                                                                                      !kl_if_19 <- appl_18 `pseq` kl_not appl_18
                                                                                                                                                                                                                      klIf kl_if_19 (do !appl_20 <- kl_Parse_shen_LBdigitsRB `pseq` hd kl_Parse_shen_LBdigitsRB
                                                                                                                                                                                                                                        !appl_21 <- kl_Parse_shen_LBdigitsRB `pseq` kl_shen_hdtl kl_Parse_shen_LBdigitsRB
                                                                                                                                                                                                                                        !appl_22 <- appl_21 `pseq` kl_reverse appl_21
                                                                                                                                                                                                                                        !appl_23 <- appl_22 `pseq` kl_shen_pre appl_22 (Types.Atom (Types.N (Types.KI 0)))
                                                                                                                                                                                                                                        !appl_24 <- appl_23 `pseq` Primitives.subtract (Types.Atom (Types.N (Types.KI 0))) appl_23
                                                                                                                                                                                                                                        appl_20 `pseq` (appl_24 `pseq` kl_shen_pair appl_20 appl_24)) (do kl_fail))))
                                                                                                                                     !appl_25 <- kl_Parse_shen_LBminusRB `pseq` kl_shen_LBdigitsRB kl_Parse_shen_LBminusRB
                                                                                                                                     appl_25 `pseq` applyWrapper appl_16 [appl_25]) (do kl_fail))))
                                   !appl_26 <- kl_V1308 `pseq` kl_shen_LBminusRB kl_V1308
                                   !appl_27 <- appl_26 `pseq` applyWrapper appl_12 [appl_26]
                                   appl_27 `pseq` applyWrapper appl_0 [appl_27]

kl_shen_LBplusRB :: Types.KLValue ->
                    Types.KLContext Types.Env Types.KLValue
kl_shen_LBplusRB (!kl_V1309) = do !appl_0 <- kl_V1309 `pseq` hd kl_V1309
                                  !kl_if_1 <- appl_0 `pseq` consP appl_0
                                  klIf kl_if_1 (do let !appl_2 = ApplC (Func "lambda" (Context (\(!kl_Parse_Byte) -> do !kl_if_3 <- kl_Parse_Byte `pseq` eq kl_Parse_Byte (Types.Atom (Types.N (Types.KI 43)))
                                                                                                                        klIf kl_if_3 (do !appl_4 <- kl_V1309 `pseq` hd kl_V1309
                                                                                                                                         !appl_5 <- appl_4 `pseq` tl appl_4
                                                                                                                                         !appl_6 <- kl_V1309 `pseq` kl_shen_hdtl kl_V1309
                                                                                                                                         !appl_7 <- appl_5 `pseq` (appl_6 `pseq` kl_shen_pair appl_5 appl_6)
                                                                                                                                         !appl_8 <- appl_7 `pseq` hd appl_7
                                                                                                                                         appl_8 `pseq` (kl_Parse_Byte `pseq` kl_shen_pair appl_8 kl_Parse_Byte)) (do kl_fail))))
                                                   !appl_9 <- kl_V1309 `pseq` hd kl_V1309
                                                   !appl_10 <- appl_9 `pseq` hd appl_9
                                                   appl_10 `pseq` applyWrapper appl_2 [appl_10]) (do kl_fail)

kl_shen_LBstopRB :: Types.KLValue ->
                    Types.KLContext Types.Env Types.KLValue
kl_shen_LBstopRB (!kl_V1310) = do !appl_0 <- kl_V1310 `pseq` hd kl_V1310
                                  !kl_if_1 <- appl_0 `pseq` consP appl_0
                                  klIf kl_if_1 (do let !appl_2 = ApplC (Func "lambda" (Context (\(!kl_Parse_Byte) -> do !kl_if_3 <- kl_Parse_Byte `pseq` eq kl_Parse_Byte (Types.Atom (Types.N (Types.KI 46)))
                                                                                                                        klIf kl_if_3 (do !appl_4 <- kl_V1310 `pseq` hd kl_V1310
                                                                                                                                         !appl_5 <- appl_4 `pseq` tl appl_4
                                                                                                                                         !appl_6 <- kl_V1310 `pseq` kl_shen_hdtl kl_V1310
                                                                                                                                         !appl_7 <- appl_5 `pseq` (appl_6 `pseq` kl_shen_pair appl_5 appl_6)
                                                                                                                                         !appl_8 <- appl_7 `pseq` hd appl_7
                                                                                                                                         appl_8 `pseq` (kl_Parse_Byte `pseq` kl_shen_pair appl_8 kl_Parse_Byte)) (do kl_fail))))
                                                   !appl_9 <- kl_V1310 `pseq` hd kl_V1310
                                                   !appl_10 <- appl_9 `pseq` hd appl_9
                                                   appl_10 `pseq` applyWrapper appl_2 [appl_10]) (do kl_fail)

kl_shen_LBpredigitsRB :: Types.KLValue ->
                         Types.KLContext Types.Env Types.KLValue
kl_shen_LBpredigitsRB (!kl_V1311) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_1 <- kl_fail
                                                                                                           !kl_if_2 <- kl_YaccParse `pseq` (appl_1 `pseq` eq kl_YaccParse appl_1)
                                                                                                           klIf kl_if_2 (do let !appl_3 = ApplC (Func "lambda" (Context (\(!kl_Parse_LBeRB) -> do !appl_4 <- kl_fail
                                                                                                                                                                                                  !appl_5 <- appl_4 `pseq` (kl_Parse_LBeRB `pseq` eq appl_4 kl_Parse_LBeRB)
                                                                                                                                                                                                  !kl_if_6 <- appl_5 `pseq` kl_not appl_5
                                                                                                                                                                                                  klIf kl_if_6 (do !appl_7 <- kl_Parse_LBeRB `pseq` hd kl_Parse_LBeRB
                                                                                                                                                                                                                   let !appl_8 = List []
                                                                                                                                                                                                                   appl_7 `pseq` (appl_8 `pseq` kl_shen_pair appl_7 appl_8)) (do kl_fail))))
                                                                                                                            !appl_9 <- kl_V1311 `pseq` kl_LBeRB kl_V1311
                                                                                                                            appl_9 `pseq` applyWrapper appl_3 [appl_9]) (do return kl_YaccParse))))
                                       let !appl_10 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBdigitsRB) -> do !appl_11 <- kl_fail
                                                                                                                        !appl_12 <- appl_11 `pseq` (kl_Parse_shen_LBdigitsRB `pseq` eq appl_11 kl_Parse_shen_LBdigitsRB)
                                                                                                                        !kl_if_13 <- appl_12 `pseq` kl_not appl_12
                                                                                                                        klIf kl_if_13 (do !appl_14 <- kl_Parse_shen_LBdigitsRB `pseq` hd kl_Parse_shen_LBdigitsRB
                                                                                                                                          !appl_15 <- kl_Parse_shen_LBdigitsRB `pseq` kl_shen_hdtl kl_Parse_shen_LBdigitsRB
                                                                                                                                          appl_14 `pseq` (appl_15 `pseq` kl_shen_pair appl_14 appl_15)) (do kl_fail))))
                                       !appl_16 <- kl_V1311 `pseq` kl_shen_LBdigitsRB kl_V1311
                                       !appl_17 <- appl_16 `pseq` applyWrapper appl_10 [appl_16]
                                       appl_17 `pseq` applyWrapper appl_0 [appl_17]

kl_shen_LBpostdigitsRB :: Types.KLValue ->
                          Types.KLContext Types.Env Types.KLValue
kl_shen_LBpostdigitsRB (!kl_V1312) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBdigitsRB) -> do !appl_1 <- kl_fail
                                                                                                                        !appl_2 <- appl_1 `pseq` (kl_Parse_shen_LBdigitsRB `pseq` eq appl_1 kl_Parse_shen_LBdigitsRB)
                                                                                                                        !kl_if_3 <- appl_2 `pseq` kl_not appl_2
                                                                                                                        klIf kl_if_3 (do !appl_4 <- kl_Parse_shen_LBdigitsRB `pseq` hd kl_Parse_shen_LBdigitsRB
                                                                                                                                         !appl_5 <- kl_Parse_shen_LBdigitsRB `pseq` kl_shen_hdtl kl_Parse_shen_LBdigitsRB
                                                                                                                                         appl_4 `pseq` (appl_5 `pseq` kl_shen_pair appl_4 appl_5)) (do kl_fail))))
                                        !appl_6 <- kl_V1312 `pseq` kl_shen_LBdigitsRB kl_V1312
                                        appl_6 `pseq` applyWrapper appl_0 [appl_6]

kl_shen_LBdigitsRB :: Types.KLValue ->
                      Types.KLContext Types.Env Types.KLValue
kl_shen_LBdigitsRB (!kl_V1313) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_1 <- kl_fail
                                                                                                        !kl_if_2 <- kl_YaccParse `pseq` (appl_1 `pseq` eq kl_YaccParse appl_1)
                                                                                                        klIf kl_if_2 (do let !appl_3 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBdigitRB) -> do !appl_4 <- kl_fail
                                                                                                                                                                                                        !appl_5 <- appl_4 `pseq` (kl_Parse_shen_LBdigitRB `pseq` eq appl_4 kl_Parse_shen_LBdigitRB)
                                                                                                                                                                                                        !kl_if_6 <- appl_5 `pseq` kl_not appl_5
                                                                                                                                                                                                        klIf kl_if_6 (do !appl_7 <- kl_Parse_shen_LBdigitRB `pseq` hd kl_Parse_shen_LBdigitRB
                                                                                                                                                                                                                         !appl_8 <- kl_Parse_shen_LBdigitRB `pseq` kl_shen_hdtl kl_Parse_shen_LBdigitRB
                                                                                                                                                                                                                         let !appl_9 = List []
                                                                                                                                                                                                                         !appl_10 <- appl_8 `pseq` (appl_9 `pseq` klCons appl_8 appl_9)
                                                                                                                                                                                                                         appl_7 `pseq` (appl_10 `pseq` kl_shen_pair appl_7 appl_10)) (do kl_fail))))
                                                                                                                         !appl_11 <- kl_V1313 `pseq` kl_shen_LBdigitRB kl_V1313
                                                                                                                         appl_11 `pseq` applyWrapper appl_3 [appl_11]) (do return kl_YaccParse))))
                                    let !appl_12 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBdigitRB) -> do !appl_13 <- kl_fail
                                                                                                                    !appl_14 <- appl_13 `pseq` (kl_Parse_shen_LBdigitRB `pseq` eq appl_13 kl_Parse_shen_LBdigitRB)
                                                                                                                    !kl_if_15 <- appl_14 `pseq` kl_not appl_14
                                                                                                                    klIf kl_if_15 (do let !appl_16 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBdigitsRB) -> do !appl_17 <- kl_fail
                                                                                                                                                                                                                       !appl_18 <- appl_17 `pseq` (kl_Parse_shen_LBdigitsRB `pseq` eq appl_17 kl_Parse_shen_LBdigitsRB)
                                                                                                                                                                                                                       !kl_if_19 <- appl_18 `pseq` kl_not appl_18
                                                                                                                                                                                                                       klIf kl_if_19 (do !appl_20 <- kl_Parse_shen_LBdigitsRB `pseq` hd kl_Parse_shen_LBdigitsRB
                                                                                                                                                                                                                                         !appl_21 <- kl_Parse_shen_LBdigitRB `pseq` kl_shen_hdtl kl_Parse_shen_LBdigitRB
                                                                                                                                                                                                                                         !appl_22 <- kl_Parse_shen_LBdigitsRB `pseq` kl_shen_hdtl kl_Parse_shen_LBdigitsRB
                                                                                                                                                                                                                                         !appl_23 <- appl_21 `pseq` (appl_22 `pseq` klCons appl_21 appl_22)
                                                                                                                                                                                                                                         appl_20 `pseq` (appl_23 `pseq` kl_shen_pair appl_20 appl_23)) (do kl_fail))))
                                                                                                                                      !appl_24 <- kl_Parse_shen_LBdigitRB `pseq` kl_shen_LBdigitsRB kl_Parse_shen_LBdigitRB
                                                                                                                                      appl_24 `pseq` applyWrapper appl_16 [appl_24]) (do kl_fail))))
                                    !appl_25 <- kl_V1313 `pseq` kl_shen_LBdigitRB kl_V1313
                                    !appl_26 <- appl_25 `pseq` applyWrapper appl_12 [appl_25]
                                    appl_26 `pseq` applyWrapper appl_0 [appl_26]

kl_shen_LBdigitRB :: Types.KLValue ->
                     Types.KLContext Types.Env Types.KLValue
kl_shen_LBdigitRB (!kl_V1314) = do !appl_0 <- kl_V1314 `pseq` hd kl_V1314
                                   !kl_if_1 <- appl_0 `pseq` consP appl_0
                                   klIf kl_if_1 (do let !appl_2 = ApplC (Func "lambda" (Context (\(!kl_Parse_X) -> do !kl_if_3 <- kl_Parse_X `pseq` kl_shen_numbyteP kl_Parse_X
                                                                                                                      klIf kl_if_3 (do !appl_4 <- kl_V1314 `pseq` hd kl_V1314
                                                                                                                                       !appl_5 <- appl_4 `pseq` tl appl_4
                                                                                                                                       !appl_6 <- kl_V1314 `pseq` kl_shen_hdtl kl_V1314
                                                                                                                                       !appl_7 <- appl_5 `pseq` (appl_6 `pseq` kl_shen_pair appl_5 appl_6)
                                                                                                                                       !appl_8 <- appl_7 `pseq` hd appl_7
                                                                                                                                       !appl_9 <- kl_Parse_X `pseq` kl_shen_byte_RBdigit kl_Parse_X
                                                                                                                                       appl_8 `pseq` (appl_9 `pseq` kl_shen_pair appl_8 appl_9)) (do kl_fail))))
                                                    !appl_10 <- kl_V1314 `pseq` hd kl_V1314
                                                    !appl_11 <- appl_10 `pseq` hd appl_10
                                                    appl_11 `pseq` applyWrapper appl_2 [appl_11]) (do kl_fail)

kl_shen_byte_RBdigit :: Types.KLValue ->
                        Types.KLContext Types.Env Types.KLValue
kl_shen_byte_RBdigit (!kl_V1315) = do !kl_if_0 <- kl_V1315 `pseq` eq (Types.Atom (Types.N (Types.KI 48))) kl_V1315
                                      klIf kl_if_0 (do return (Types.Atom (Types.N (Types.KI 0)))) (do !kl_if_1 <- kl_V1315 `pseq` eq (Types.Atom (Types.N (Types.KI 49))) kl_V1315
                                                                                                       klIf kl_if_1 (do return (Types.Atom (Types.N (Types.KI 1)))) (do !kl_if_2 <- kl_V1315 `pseq` eq (Types.Atom (Types.N (Types.KI 50))) kl_V1315
                                                                                                                                                                        klIf kl_if_2 (do return (Types.Atom (Types.N (Types.KI 2)))) (do !kl_if_3 <- kl_V1315 `pseq` eq (Types.Atom (Types.N (Types.KI 51))) kl_V1315
                                                                                                                                                                                                                                         klIf kl_if_3 (do return (Types.Atom (Types.N (Types.KI 3)))) (do !kl_if_4 <- kl_V1315 `pseq` eq (Types.Atom (Types.N (Types.KI 52))) kl_V1315
                                                                                                                                                                                                                                                                                                          klIf kl_if_4 (do return (Types.Atom (Types.N (Types.KI 4)))) (do !kl_if_5 <- kl_V1315 `pseq` eq (Types.Atom (Types.N (Types.KI 53))) kl_V1315
                                                                                                                                                                                                                                                                                                                                                                           klIf kl_if_5 (do return (Types.Atom (Types.N (Types.KI 5)))) (do !kl_if_6 <- kl_V1315 `pseq` eq (Types.Atom (Types.N (Types.KI 54))) kl_V1315
                                                                                                                                                                                                                                                                                                                                                                                                                                            klIf kl_if_6 (do return (Types.Atom (Types.N (Types.KI 6)))) (do !kl_if_7 <- kl_V1315 `pseq` eq (Types.Atom (Types.N (Types.KI 55))) kl_V1315
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             klIf kl_if_7 (do return (Types.Atom (Types.N (Types.KI 7)))) (do !kl_if_8 <- kl_V1315 `pseq` eq (Types.Atom (Types.N (Types.KI 56))) kl_V1315
klIf kl_if_8 (do return (Types.Atom (Types.N (Types.KI 8)))) (do !kl_if_9 <- kl_V1315 `pseq` eq (Types.Atom (Types.N (Types.KI 57))) kl_V1315
klIf kl_if_9 (do return (Types.Atom (Types.N (Types.KI 9)))) (do klIf (Atom (B True)) (do let !aw_10 = Types.Atom (Types.UnboundSym "shen.f_error")
applyWrapper aw_10 [ApplC (wrapNamed "shen.byte->digit" kl_shen_byte_RBdigit)]) (do return (List []))))))))))))

kl_shen_pre :: Types.KLValue ->
               Types.KLValue -> Types.KLContext Types.Env Types.KLValue
kl_shen_pre (!kl_V1318) (!kl_V1319) = do let !appl_0 = List []
                                         !kl_if_1 <- appl_0 `pseq` (kl_V1318 `pseq` eq appl_0 kl_V1318)
                                         klIf kl_if_1 (do return (Types.Atom (Types.N (Types.KI 0)))) (do !kl_if_2 <- kl_V1318 `pseq` consP kl_V1318
                                                                                                          klIf kl_if_2 (do !appl_3 <- kl_V1319 `pseq` kl_shen_expt (Types.Atom (Types.N (Types.KI 10))) kl_V1319
                                                                                                                           !appl_4 <- kl_V1318 `pseq` hd kl_V1318
                                                                                                                           !appl_5 <- appl_3 `pseq` (appl_4 `pseq` multiply appl_3 appl_4)
                                                                                                                           !appl_6 <- kl_V1318 `pseq` tl kl_V1318
                                                                                                                           !appl_7 <- kl_V1319 `pseq` add kl_V1319 (Types.Atom (Types.N (Types.KI 1)))
                                                                                                                           !appl_8 <- appl_6 `pseq` (appl_7 `pseq` kl_shen_pre appl_6 appl_7)
                                                                                                                           appl_5 `pseq` (appl_8 `pseq` add appl_5 appl_8)) (do klIf (Atom (B True)) (do let !aw_9 = Types.Atom (Types.UnboundSym "shen.f_error")
                                                                                                                                                                                                         applyWrapper aw_9 [ApplC (wrapNamed "shen.pre" kl_shen_pre)]) (do return (List []))))

kl_shen_post :: Types.KLValue ->
                Types.KLValue -> Types.KLContext Types.Env Types.KLValue
kl_shen_post (!kl_V1322) (!kl_V1323) = do let !appl_0 = List []
                                          !kl_if_1 <- appl_0 `pseq` (kl_V1322 `pseq` eq appl_0 kl_V1322)
                                          klIf kl_if_1 (do return (Types.Atom (Types.N (Types.KI 0)))) (do !kl_if_2 <- kl_V1322 `pseq` consP kl_V1322
                                                                                                           klIf kl_if_2 (do !appl_3 <- kl_V1323 `pseq` Primitives.subtract (Types.Atom (Types.N (Types.KI 0))) kl_V1323
                                                                                                                            !appl_4 <- appl_3 `pseq` kl_shen_expt (Types.Atom (Types.N (Types.KI 10))) appl_3
                                                                                                                            !appl_5 <- kl_V1322 `pseq` hd kl_V1322
                                                                                                                            !appl_6 <- appl_4 `pseq` (appl_5 `pseq` multiply appl_4 appl_5)
                                                                                                                            !appl_7 <- kl_V1322 `pseq` tl kl_V1322
                                                                                                                            !appl_8 <- kl_V1323 `pseq` add kl_V1323 (Types.Atom (Types.N (Types.KI 1)))
                                                                                                                            !appl_9 <- appl_7 `pseq` (appl_8 `pseq` kl_shen_post appl_7 appl_8)
                                                                                                                            appl_6 `pseq` (appl_9 `pseq` add appl_6 appl_9)) (do klIf (Atom (B True)) (do let !aw_10 = Types.Atom (Types.UnboundSym "shen.f_error")
                                                                                                                                                                                                          applyWrapper aw_10 [ApplC (wrapNamed "shen.post" kl_shen_post)]) (do return (List []))))

kl_shen_expt :: Types.KLValue ->
                Types.KLValue -> Types.KLContext Types.Env Types.KLValue
kl_shen_expt (!kl_V1326) (!kl_V1327) = do !kl_if_0 <- kl_V1327 `pseq` eq (Types.Atom (Types.N (Types.KI 0))) kl_V1327
                                          klIf kl_if_0 (do return (Types.Atom (Types.N (Types.KI 1)))) (do !kl_if_1 <- kl_V1327 `pseq` greaterThan kl_V1327 (Types.Atom (Types.N (Types.KI 0)))
                                                                                                           klIf kl_if_1 (do !appl_2 <- kl_V1327 `pseq` Primitives.subtract kl_V1327 (Types.Atom (Types.N (Types.KI 1)))
                                                                                                                            !appl_3 <- kl_V1326 `pseq` (appl_2 `pseq` kl_shen_expt kl_V1326 appl_2)
                                                                                                                            kl_V1326 `pseq` (appl_3 `pseq` multiply kl_V1326 appl_3)) (do klIf (Atom (B True)) (do !appl_4 <- kl_V1327 `pseq` add kl_V1327 (Types.Atom (Types.N (Types.KI 1)))
                                                                                                                                                                                                                   !appl_5 <- kl_V1326 `pseq` (appl_4 `pseq` kl_shen_expt kl_V1326 appl_4)
                                                                                                                                                                                                                   !appl_6 <- appl_5 `pseq` (kl_V1326 `pseq` divide appl_5 kl_V1326)
                                                                                                                                                                                                                   appl_6 `pseq` multiply (Types.Atom (Types.N (Types.KI 1))) appl_6) (do return (List []))))

kl_shen_LBst_input1RB :: Types.KLValue ->
                         Types.KLContext Types.Env Types.KLValue
kl_shen_LBst_input1RB (!kl_V1328) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBst_inputRB) -> do !appl_1 <- kl_fail
                                                                                                                         !appl_2 <- appl_1 `pseq` (kl_Parse_shen_LBst_inputRB `pseq` eq appl_1 kl_Parse_shen_LBst_inputRB)
                                                                                                                         !kl_if_3 <- appl_2 `pseq` kl_not appl_2
                                                                                                                         klIf kl_if_3 (do !appl_4 <- kl_Parse_shen_LBst_inputRB `pseq` hd kl_Parse_shen_LBst_inputRB
                                                                                                                                          !appl_5 <- kl_Parse_shen_LBst_inputRB `pseq` kl_shen_hdtl kl_Parse_shen_LBst_inputRB
                                                                                                                                          appl_4 `pseq` (appl_5 `pseq` kl_shen_pair appl_4 appl_5)) (do kl_fail))))
                                       !appl_6 <- kl_V1328 `pseq` kl_shen_LBst_inputRB kl_V1328
                                       appl_6 `pseq` applyWrapper appl_0 [appl_6]

kl_shen_LBst_input2RB :: Types.KLValue ->
                         Types.KLContext Types.Env Types.KLValue
kl_shen_LBst_input2RB (!kl_V1329) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBst_inputRB) -> do !appl_1 <- kl_fail
                                                                                                                         !appl_2 <- appl_1 `pseq` (kl_Parse_shen_LBst_inputRB `pseq` eq appl_1 kl_Parse_shen_LBst_inputRB)
                                                                                                                         !kl_if_3 <- appl_2 `pseq` kl_not appl_2
                                                                                                                         klIf kl_if_3 (do !appl_4 <- kl_Parse_shen_LBst_inputRB `pseq` hd kl_Parse_shen_LBst_inputRB
                                                                                                                                          !appl_5 <- kl_Parse_shen_LBst_inputRB `pseq` kl_shen_hdtl kl_Parse_shen_LBst_inputRB
                                                                                                                                          appl_4 `pseq` (appl_5 `pseq` kl_shen_pair appl_4 appl_5)) (do kl_fail))))
                                       !appl_6 <- kl_V1329 `pseq` kl_shen_LBst_inputRB kl_V1329
                                       appl_6 `pseq` applyWrapper appl_0 [appl_6]

kl_shen_LBcommentRB :: Types.KLValue ->
                       Types.KLContext Types.Env Types.KLValue
kl_shen_LBcommentRB (!kl_V1330) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_1 <- kl_fail
                                                                                                         !kl_if_2 <- kl_YaccParse `pseq` (appl_1 `pseq` eq kl_YaccParse appl_1)
                                                                                                         klIf kl_if_2 (do let !appl_3 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBmultilineRB) -> do !appl_4 <- kl_fail
                                                                                                                                                                                                             !appl_5 <- appl_4 `pseq` (kl_Parse_shen_LBmultilineRB `pseq` eq appl_4 kl_Parse_shen_LBmultilineRB)
                                                                                                                                                                                                             !kl_if_6 <- appl_5 `pseq` kl_not appl_5
                                                                                                                                                                                                             klIf kl_if_6 (do !appl_7 <- kl_Parse_shen_LBmultilineRB `pseq` hd kl_Parse_shen_LBmultilineRB
                                                                                                                                                                                                                              appl_7 `pseq` kl_shen_pair appl_7 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail))))
                                                                                                                          !appl_8 <- kl_V1330 `pseq` kl_shen_LBmultilineRB kl_V1330
                                                                                                                          appl_8 `pseq` applyWrapper appl_3 [appl_8]) (do return kl_YaccParse))))
                                     let !appl_9 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBsinglelineRB) -> do !appl_10 <- kl_fail
                                                                                                                         !appl_11 <- appl_10 `pseq` (kl_Parse_shen_LBsinglelineRB `pseq` eq appl_10 kl_Parse_shen_LBsinglelineRB)
                                                                                                                         !kl_if_12 <- appl_11 `pseq` kl_not appl_11
                                                                                                                         klIf kl_if_12 (do !appl_13 <- kl_Parse_shen_LBsinglelineRB `pseq` hd kl_Parse_shen_LBsinglelineRB
                                                                                                                                           appl_13 `pseq` kl_shen_pair appl_13 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail))))
                                     !appl_14 <- kl_V1330 `pseq` kl_shen_LBsinglelineRB kl_V1330
                                     !appl_15 <- appl_14 `pseq` applyWrapper appl_9 [appl_14]
                                     appl_15 `pseq` applyWrapper appl_0 [appl_15]

kl_shen_LBsinglelineRB :: Types.KLValue ->
                          Types.KLContext Types.Env Types.KLValue
kl_shen_LBsinglelineRB (!kl_V1331) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBbackslashRB) -> do !appl_1 <- kl_fail
                                                                                                                           !appl_2 <- appl_1 `pseq` (kl_Parse_shen_LBbackslashRB `pseq` eq appl_1 kl_Parse_shen_LBbackslashRB)
                                                                                                                           !kl_if_3 <- appl_2 `pseq` kl_not appl_2
                                                                                                                           klIf kl_if_3 (do let !appl_4 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBbackslashRB) -> do !appl_5 <- kl_fail
                                                                                                                                                                                                                               !appl_6 <- appl_5 `pseq` (kl_Parse_shen_LBbackslashRB `pseq` eq appl_5 kl_Parse_shen_LBbackslashRB)
                                                                                                                                                                                                                               !kl_if_7 <- appl_6 `pseq` kl_not appl_6
                                                                                                                                                                                                                               klIf kl_if_7 (do let !appl_8 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBanysingleRB) -> do !appl_9 <- kl_fail
                                                                                                                                                                                                                                                                                                                                   !appl_10 <- appl_9 `pseq` (kl_Parse_shen_LBanysingleRB `pseq` eq appl_9 kl_Parse_shen_LBanysingleRB)
                                                                                                                                                                                                                                                                                                                                   !kl_if_11 <- appl_10 `pseq` kl_not appl_10
                                                                                                                                                                                                                                                                                                                                   klIf kl_if_11 (do let !appl_12 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBreturnRB) -> do !appl_13 <- kl_fail
                                                                                                                                                                                                                                                                                                                                                                                                                                      !appl_14 <- appl_13 `pseq` (kl_Parse_shen_LBreturnRB `pseq` eq appl_13 kl_Parse_shen_LBreturnRB)
                                                                                                                                                                                                                                                                                                                                                                                                                                      !kl_if_15 <- appl_14 `pseq` kl_not appl_14
                                                                                                                                                                                                                                                                                                                                                                                                                                      klIf kl_if_15 (do !appl_16 <- kl_Parse_shen_LBreturnRB `pseq` hd kl_Parse_shen_LBreturnRB
                                                                                                                                                                                                                                                                                                                                                                                                                                                        appl_16 `pseq` kl_shen_pair appl_16 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail))))
                                                                                                                                                                                                                                                                                                                                                     !appl_17 <- kl_Parse_shen_LBanysingleRB `pseq` kl_shen_LBreturnRB kl_Parse_shen_LBanysingleRB
                                                                                                                                                                                                                                                                                                                                                     appl_17 `pseq` applyWrapper appl_12 [appl_17]) (do kl_fail))))
                                                                                                                                                                                                                                                !appl_18 <- kl_Parse_shen_LBbackslashRB `pseq` kl_shen_LBanysingleRB kl_Parse_shen_LBbackslashRB
                                                                                                                                                                                                                                                appl_18 `pseq` applyWrapper appl_8 [appl_18]) (do kl_fail))))
                                                                                                                                            !appl_19 <- kl_Parse_shen_LBbackslashRB `pseq` kl_shen_LBbackslashRB kl_Parse_shen_LBbackslashRB
                                                                                                                                            appl_19 `pseq` applyWrapper appl_4 [appl_19]) (do kl_fail))))
                                        !appl_20 <- kl_V1331 `pseq` kl_shen_LBbackslashRB kl_V1331
                                        appl_20 `pseq` applyWrapper appl_0 [appl_20]

kl_shen_LBbackslashRB :: Types.KLValue ->
                         Types.KLContext Types.Env Types.KLValue
kl_shen_LBbackslashRB (!kl_V1332) = do !appl_0 <- kl_V1332 `pseq` hd kl_V1332
                                       !kl_if_1 <- appl_0 `pseq` consP appl_0
                                       !kl_if_2 <- klIf kl_if_1 (do !appl_3 <- kl_V1332 `pseq` hd kl_V1332
                                                                    !appl_4 <- appl_3 `pseq` hd appl_3
                                                                    appl_4 `pseq` eq (Types.Atom (Types.N (Types.KI 92))) appl_4) (do return (Atom (B False)))
                                       klIf kl_if_2 (do !appl_5 <- kl_V1332 `pseq` hd kl_V1332
                                                        !appl_6 <- appl_5 `pseq` tl appl_5
                                                        !appl_7 <- kl_V1332 `pseq` kl_shen_hdtl kl_V1332
                                                        !appl_8 <- appl_6 `pseq` (appl_7 `pseq` kl_shen_pair appl_6 appl_7)
                                                        !appl_9 <- appl_8 `pseq` hd appl_8
                                                        appl_9 `pseq` kl_shen_pair appl_9 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail)

kl_shen_LBanysingleRB :: Types.KLValue ->
                         Types.KLContext Types.Env Types.KLValue
kl_shen_LBanysingleRB (!kl_V1333) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_1 <- kl_fail
                                                                                                           !kl_if_2 <- kl_YaccParse `pseq` (appl_1 `pseq` eq kl_YaccParse appl_1)
                                                                                                           klIf kl_if_2 (do let !appl_3 = ApplC (Func "lambda" (Context (\(!kl_Parse_LBeRB) -> do !appl_4 <- kl_fail
                                                                                                                                                                                                  !appl_5 <- appl_4 `pseq` (kl_Parse_LBeRB `pseq` eq appl_4 kl_Parse_LBeRB)
                                                                                                                                                                                                  !kl_if_6 <- appl_5 `pseq` kl_not appl_5
                                                                                                                                                                                                  klIf kl_if_6 (do !appl_7 <- kl_Parse_LBeRB `pseq` hd kl_Parse_LBeRB
                                                                                                                                                                                                                   appl_7 `pseq` kl_shen_pair appl_7 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail))))
                                                                                                                            !appl_8 <- kl_V1333 `pseq` kl_LBeRB kl_V1333
                                                                                                                            appl_8 `pseq` applyWrapper appl_3 [appl_8]) (do return kl_YaccParse))))
                                       let !appl_9 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBnon_returnRB) -> do !appl_10 <- kl_fail
                                                                                                                           !appl_11 <- appl_10 `pseq` (kl_Parse_shen_LBnon_returnRB `pseq` eq appl_10 kl_Parse_shen_LBnon_returnRB)
                                                                                                                           !kl_if_12 <- appl_11 `pseq` kl_not appl_11
                                                                                                                           klIf kl_if_12 (do let !appl_13 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBanysingleRB) -> do !appl_14 <- kl_fail
                                                                                                                                                                                                                                 !appl_15 <- appl_14 `pseq` (kl_Parse_shen_LBanysingleRB `pseq` eq appl_14 kl_Parse_shen_LBanysingleRB)
                                                                                                                                                                                                                                 !kl_if_16 <- appl_15 `pseq` kl_not appl_15
                                                                                                                                                                                                                                 klIf kl_if_16 (do !appl_17 <- kl_Parse_shen_LBanysingleRB `pseq` hd kl_Parse_shen_LBanysingleRB
                                                                                                                                                                                                                                                   appl_17 `pseq` kl_shen_pair appl_17 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail))))
                                                                                                                                             !appl_18 <- kl_Parse_shen_LBnon_returnRB `pseq` kl_shen_LBanysingleRB kl_Parse_shen_LBnon_returnRB
                                                                                                                                             appl_18 `pseq` applyWrapper appl_13 [appl_18]) (do kl_fail))))
                                       !appl_19 <- kl_V1333 `pseq` kl_shen_LBnon_returnRB kl_V1333
                                       !appl_20 <- appl_19 `pseq` applyWrapper appl_9 [appl_19]
                                       appl_20 `pseq` applyWrapper appl_0 [appl_20]

kl_shen_LBnon_returnRB :: Types.KLValue ->
                          Types.KLContext Types.Env Types.KLValue
kl_shen_LBnon_returnRB (!kl_V1334) = do !appl_0 <- kl_V1334 `pseq` hd kl_V1334
                                        !kl_if_1 <- appl_0 `pseq` consP appl_0
                                        klIf kl_if_1 (do let !appl_2 = ApplC (Func "lambda" (Context (\(!kl_Parse_X) -> do let !appl_3 = List []
                                                                                                                           !appl_4 <- appl_3 `pseq` klCons (Types.Atom (Types.N (Types.KI 13))) appl_3
                                                                                                                           !appl_5 <- appl_4 `pseq` klCons (Types.Atom (Types.N (Types.KI 10))) appl_4
                                                                                                                           !appl_6 <- kl_Parse_X `pseq` (appl_5 `pseq` kl_elementP kl_Parse_X appl_5)
                                                                                                                           !kl_if_7 <- appl_6 `pseq` kl_not appl_6
                                                                                                                           klIf kl_if_7 (do !appl_8 <- kl_V1334 `pseq` hd kl_V1334
                                                                                                                                            !appl_9 <- appl_8 `pseq` tl appl_8
                                                                                                                                            !appl_10 <- kl_V1334 `pseq` kl_shen_hdtl kl_V1334
                                                                                                                                            !appl_11 <- appl_9 `pseq` (appl_10 `pseq` kl_shen_pair appl_9 appl_10)
                                                                                                                                            !appl_12 <- appl_11 `pseq` hd appl_11
                                                                                                                                            appl_12 `pseq` kl_shen_pair appl_12 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail))))
                                                         !appl_13 <- kl_V1334 `pseq` hd kl_V1334
                                                         !appl_14 <- appl_13 `pseq` hd appl_13
                                                         appl_14 `pseq` applyWrapper appl_2 [appl_14]) (do kl_fail)

kl_shen_LBreturnRB :: Types.KLValue ->
                      Types.KLContext Types.Env Types.KLValue
kl_shen_LBreturnRB (!kl_V1335) = do !appl_0 <- kl_V1335 `pseq` hd kl_V1335
                                    !kl_if_1 <- appl_0 `pseq` consP appl_0
                                    klIf kl_if_1 (do let !appl_2 = ApplC (Func "lambda" (Context (\(!kl_Parse_X) -> do let !appl_3 = List []
                                                                                                                       !appl_4 <- appl_3 `pseq` klCons (Types.Atom (Types.N (Types.KI 13))) appl_3
                                                                                                                       !appl_5 <- appl_4 `pseq` klCons (Types.Atom (Types.N (Types.KI 10))) appl_4
                                                                                                                       !kl_if_6 <- kl_Parse_X `pseq` (appl_5 `pseq` kl_elementP kl_Parse_X appl_5)
                                                                                                                       klIf kl_if_6 (do !appl_7 <- kl_V1335 `pseq` hd kl_V1335
                                                                                                                                        !appl_8 <- appl_7 `pseq` tl appl_7
                                                                                                                                        !appl_9 <- kl_V1335 `pseq` kl_shen_hdtl kl_V1335
                                                                                                                                        !appl_10 <- appl_8 `pseq` (appl_9 `pseq` kl_shen_pair appl_8 appl_9)
                                                                                                                                        !appl_11 <- appl_10 `pseq` hd appl_10
                                                                                                                                        appl_11 `pseq` kl_shen_pair appl_11 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail))))
                                                     !appl_12 <- kl_V1335 `pseq` hd kl_V1335
                                                     !appl_13 <- appl_12 `pseq` hd appl_12
                                                     appl_13 `pseq` applyWrapper appl_2 [appl_13]) (do kl_fail)

kl_shen_LBmultilineRB :: Types.KLValue ->
                         Types.KLContext Types.Env Types.KLValue
kl_shen_LBmultilineRB (!kl_V1336) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBbackslashRB) -> do !appl_1 <- kl_fail
                                                                                                                          !appl_2 <- appl_1 `pseq` (kl_Parse_shen_LBbackslashRB `pseq` eq appl_1 kl_Parse_shen_LBbackslashRB)
                                                                                                                          !kl_if_3 <- appl_2 `pseq` kl_not appl_2
                                                                                                                          klIf kl_if_3 (do let !appl_4 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBtimesRB) -> do !appl_5 <- kl_fail
                                                                                                                                                                                                                          !appl_6 <- appl_5 `pseq` (kl_Parse_shen_LBtimesRB `pseq` eq appl_5 kl_Parse_shen_LBtimesRB)
                                                                                                                                                                                                                          !kl_if_7 <- appl_6 `pseq` kl_not appl_6
                                                                                                                                                                                                                          klIf kl_if_7 (do let !appl_8 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBanymultiRB) -> do !appl_9 <- kl_fail
                                                                                                                                                                                                                                                                                                                             !appl_10 <- appl_9 `pseq` (kl_Parse_shen_LBanymultiRB `pseq` eq appl_9 kl_Parse_shen_LBanymultiRB)
                                                                                                                                                                                                                                                                                                                             !kl_if_11 <- appl_10 `pseq` kl_not appl_10
                                                                                                                                                                                                                                                                                                                             klIf kl_if_11 (do !appl_12 <- kl_Parse_shen_LBanymultiRB `pseq` hd kl_Parse_shen_LBanymultiRB
                                                                                                                                                                                                                                                                                                                                               appl_12 `pseq` kl_shen_pair appl_12 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail))))
                                                                                                                                                                                                                                           !appl_13 <- kl_Parse_shen_LBtimesRB `pseq` kl_shen_LBanymultiRB kl_Parse_shen_LBtimesRB
                                                                                                                                                                                                                                           appl_13 `pseq` applyWrapper appl_8 [appl_13]) (do kl_fail))))
                                                                                                                                           !appl_14 <- kl_Parse_shen_LBbackslashRB `pseq` kl_shen_LBtimesRB kl_Parse_shen_LBbackslashRB
                                                                                                                                           appl_14 `pseq` applyWrapper appl_4 [appl_14]) (do kl_fail))))
                                       !appl_15 <- kl_V1336 `pseq` kl_shen_LBbackslashRB kl_V1336
                                       appl_15 `pseq` applyWrapper appl_0 [appl_15]

kl_shen_LBtimesRB :: Types.KLValue ->
                     Types.KLContext Types.Env Types.KLValue
kl_shen_LBtimesRB (!kl_V1337) = do !appl_0 <- kl_V1337 `pseq` hd kl_V1337
                                   !kl_if_1 <- appl_0 `pseq` consP appl_0
                                   !kl_if_2 <- klIf kl_if_1 (do !appl_3 <- kl_V1337 `pseq` hd kl_V1337
                                                                !appl_4 <- appl_3 `pseq` hd appl_3
                                                                appl_4 `pseq` eq (Types.Atom (Types.N (Types.KI 42))) appl_4) (do return (Atom (B False)))
                                   klIf kl_if_2 (do !appl_5 <- kl_V1337 `pseq` hd kl_V1337
                                                    !appl_6 <- appl_5 `pseq` tl appl_5
                                                    !appl_7 <- kl_V1337 `pseq` kl_shen_hdtl kl_V1337
                                                    !appl_8 <- appl_6 `pseq` (appl_7 `pseq` kl_shen_pair appl_6 appl_7)
                                                    !appl_9 <- appl_8 `pseq` hd appl_8
                                                    appl_9 `pseq` kl_shen_pair appl_9 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail)

kl_shen_LBanymultiRB :: Types.KLValue ->
                        Types.KLContext Types.Env Types.KLValue
kl_shen_LBanymultiRB (!kl_V1338) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_1 <- kl_fail
                                                                                                          !kl_if_2 <- kl_YaccParse `pseq` (appl_1 `pseq` eq kl_YaccParse appl_1)
                                                                                                          klIf kl_if_2 (do let !appl_3 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_4 <- kl_fail
                                                                                                                                                                                               !kl_if_5 <- kl_YaccParse `pseq` (appl_4 `pseq` eq kl_YaccParse appl_4)
                                                                                                                                                                                               klIf kl_if_5 (do !appl_6 <- kl_V1338 `pseq` hd kl_V1338
                                                                                                                                                                                                                !kl_if_7 <- appl_6 `pseq` consP appl_6
                                                                                                                                                                                                                klIf kl_if_7 (do let !appl_8 = ApplC (Func "lambda" (Context (\(!kl_Parse_X) -> do let !appl_9 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBanymultiRB) -> do !appl_10 <- kl_fail
                                                                                                                                                                                                                                                                                                                                                                                     !appl_11 <- appl_10 `pseq` (kl_Parse_shen_LBanymultiRB `pseq` eq appl_10 kl_Parse_shen_LBanymultiRB)
                                                                                                                                                                                                                                                                                                                                                                                     !kl_if_12 <- appl_11 `pseq` kl_not appl_11
                                                                                                                                                                                                                                                                                                                                                                                     klIf kl_if_12 (do !appl_13 <- kl_Parse_shen_LBanymultiRB `pseq` hd kl_Parse_shen_LBanymultiRB
                                                                                                                                                                                                                                                                                                                                                                                                       appl_13 `pseq` kl_shen_pair appl_13 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail))))
                                                                                                                                                                                                                                                                                                   !appl_14 <- kl_V1338 `pseq` hd kl_V1338
                                                                                                                                                                                                                                                                                                   !appl_15 <- appl_14 `pseq` tl appl_14
                                                                                                                                                                                                                                                                                                   !appl_16 <- kl_V1338 `pseq` kl_shen_hdtl kl_V1338
                                                                                                                                                                                                                                                                                                   !appl_17 <- appl_15 `pseq` (appl_16 `pseq` kl_shen_pair appl_15 appl_16)
                                                                                                                                                                                                                                                                                                   !appl_18 <- appl_17 `pseq` kl_shen_LBanymultiRB appl_17
                                                                                                                                                                                                                                                                                                   appl_18 `pseq` applyWrapper appl_9 [appl_18])))
                                                                                                                                                                                                                                 !appl_19 <- kl_V1338 `pseq` hd kl_V1338
                                                                                                                                                                                                                                 !appl_20 <- appl_19 `pseq` hd appl_19
                                                                                                                                                                                                                                 appl_20 `pseq` applyWrapper appl_8 [appl_20]) (do kl_fail)) (do return kl_YaccParse))))
                                                                                                                           let !appl_21 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBtimesRB) -> do !appl_22 <- kl_fail
                                                                                                                                                                                                           !appl_23 <- appl_22 `pseq` (kl_Parse_shen_LBtimesRB `pseq` eq appl_22 kl_Parse_shen_LBtimesRB)
                                                                                                                                                                                                           !kl_if_24 <- appl_23 `pseq` kl_not appl_23
                                                                                                                                                                                                           klIf kl_if_24 (do let !appl_25 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBbackslashRB) -> do !appl_26 <- kl_fail
                                                                                                                                                                                                                                                                                                                 !appl_27 <- appl_26 `pseq` (kl_Parse_shen_LBbackslashRB `pseq` eq appl_26 kl_Parse_shen_LBbackslashRB)
                                                                                                                                                                                                                                                                                                                 !kl_if_28 <- appl_27 `pseq` kl_not appl_27
                                                                                                                                                                                                                                                                                                                 klIf kl_if_28 (do !appl_29 <- kl_Parse_shen_LBbackslashRB `pseq` hd kl_Parse_shen_LBbackslashRB
                                                                                                                                                                                                                                                                                                                                   appl_29 `pseq` kl_shen_pair appl_29 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail))))
                                                                                                                                                                                                                             !appl_30 <- kl_Parse_shen_LBtimesRB `pseq` kl_shen_LBbackslashRB kl_Parse_shen_LBtimesRB
                                                                                                                                                                                                                             appl_30 `pseq` applyWrapper appl_25 [appl_30]) (do kl_fail))))
                                                                                                                           !appl_31 <- kl_V1338 `pseq` kl_shen_LBtimesRB kl_V1338
                                                                                                                           !appl_32 <- appl_31 `pseq` applyWrapper appl_21 [appl_31]
                                                                                                                           appl_32 `pseq` applyWrapper appl_3 [appl_32]) (do return kl_YaccParse))))
                                      let !appl_33 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBcommentRB) -> do !appl_34 <- kl_fail
                                                                                                                        !appl_35 <- appl_34 `pseq` (kl_Parse_shen_LBcommentRB `pseq` eq appl_34 kl_Parse_shen_LBcommentRB)
                                                                                                                        !kl_if_36 <- appl_35 `pseq` kl_not appl_35
                                                                                                                        klIf kl_if_36 (do let !appl_37 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBanymultiRB) -> do !appl_38 <- kl_fail
                                                                                                                                                                                                                             !appl_39 <- appl_38 `pseq` (kl_Parse_shen_LBanymultiRB `pseq` eq appl_38 kl_Parse_shen_LBanymultiRB)
                                                                                                                                                                                                                             !kl_if_40 <- appl_39 `pseq` kl_not appl_39
                                                                                                                                                                                                                             klIf kl_if_40 (do !appl_41 <- kl_Parse_shen_LBanymultiRB `pseq` hd kl_Parse_shen_LBanymultiRB
                                                                                                                                                                                                                                               appl_41 `pseq` kl_shen_pair appl_41 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail))))
                                                                                                                                          !appl_42 <- kl_Parse_shen_LBcommentRB `pseq` kl_shen_LBanymultiRB kl_Parse_shen_LBcommentRB
                                                                                                                                          appl_42 `pseq` applyWrapper appl_37 [appl_42]) (do kl_fail))))
                                      !appl_43 <- kl_V1338 `pseq` kl_shen_LBcommentRB kl_V1338
                                      !appl_44 <- appl_43 `pseq` applyWrapper appl_33 [appl_43]
                                      appl_44 `pseq` applyWrapper appl_0 [appl_44]

kl_shen_LBwhitespacesRB :: Types.KLValue ->
                           Types.KLContext Types.Env Types.KLValue
kl_shen_LBwhitespacesRB (!kl_V1339) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_YaccParse) -> do !appl_1 <- kl_fail
                                                                                                             !kl_if_2 <- kl_YaccParse `pseq` (appl_1 `pseq` eq kl_YaccParse appl_1)
                                                                                                             klIf kl_if_2 (do let !appl_3 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBwhitespaceRB) -> do !appl_4 <- kl_fail
                                                                                                                                                                                                                  !appl_5 <- appl_4 `pseq` (kl_Parse_shen_LBwhitespaceRB `pseq` eq appl_4 kl_Parse_shen_LBwhitespaceRB)
                                                                                                                                                                                                                  !kl_if_6 <- appl_5 `pseq` kl_not appl_5
                                                                                                                                                                                                                  klIf kl_if_6 (do !appl_7 <- kl_Parse_shen_LBwhitespaceRB `pseq` hd kl_Parse_shen_LBwhitespaceRB
                                                                                                                                                                                                                                   appl_7 `pseq` kl_shen_pair appl_7 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail))))
                                                                                                                              !appl_8 <- kl_V1339 `pseq` kl_shen_LBwhitespaceRB kl_V1339
                                                                                                                              appl_8 `pseq` applyWrapper appl_3 [appl_8]) (do return kl_YaccParse))))
                                         let !appl_9 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBwhitespaceRB) -> do !appl_10 <- kl_fail
                                                                                                                             !appl_11 <- appl_10 `pseq` (kl_Parse_shen_LBwhitespaceRB `pseq` eq appl_10 kl_Parse_shen_LBwhitespaceRB)
                                                                                                                             !kl_if_12 <- appl_11 `pseq` kl_not appl_11
                                                                                                                             klIf kl_if_12 (do let !appl_13 = ApplC (Func "lambda" (Context (\(!kl_Parse_shen_LBwhitespacesRB) -> do !appl_14 <- kl_fail
                                                                                                                                                                                                                                     !appl_15 <- appl_14 `pseq` (kl_Parse_shen_LBwhitespacesRB `pseq` eq appl_14 kl_Parse_shen_LBwhitespacesRB)
                                                                                                                                                                                                                                     !kl_if_16 <- appl_15 `pseq` kl_not appl_15
                                                                                                                                                                                                                                     klIf kl_if_16 (do !appl_17 <- kl_Parse_shen_LBwhitespacesRB `pseq` hd kl_Parse_shen_LBwhitespacesRB
                                                                                                                                                                                                                                                       appl_17 `pseq` kl_shen_pair appl_17 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail))))
                                                                                                                                               !appl_18 <- kl_Parse_shen_LBwhitespaceRB `pseq` kl_shen_LBwhitespacesRB kl_Parse_shen_LBwhitespaceRB
                                                                                                                                               appl_18 `pseq` applyWrapper appl_13 [appl_18]) (do kl_fail))))
                                         !appl_19 <- kl_V1339 `pseq` kl_shen_LBwhitespaceRB kl_V1339
                                         !appl_20 <- appl_19 `pseq` applyWrapper appl_9 [appl_19]
                                         appl_20 `pseq` applyWrapper appl_0 [appl_20]

kl_shen_LBwhitespaceRB :: Types.KLValue ->
                          Types.KLContext Types.Env Types.KLValue
kl_shen_LBwhitespaceRB (!kl_V1340) = do !appl_0 <- kl_V1340 `pseq` hd kl_V1340
                                        !kl_if_1 <- appl_0 `pseq` consP appl_0
                                        klIf kl_if_1 (do let !appl_2 = ApplC (Func "lambda" (Context (\(!kl_Parse_X) -> do let !appl_3 = ApplC (Func "lambda" (Context (\(!kl_Parse_Case) -> do !kl_if_4 <- kl_Parse_Case `pseq` eq kl_Parse_Case (Types.Atom (Types.N (Types.KI 32)))
                                                                                                                                                                                                klIf kl_if_4 (do return (Atom (B True))) (do !kl_if_5 <- kl_Parse_Case `pseq` eq kl_Parse_Case (Types.Atom (Types.N (Types.KI 13)))
                                                                                                                                                                                                                                             klIf kl_if_5 (do return (Atom (B True))) (do !kl_if_6 <- kl_Parse_Case `pseq` eq kl_Parse_Case (Types.Atom (Types.N (Types.KI 10)))
                                                                                                                                                                                                                                                                                          klIf kl_if_6 (do return (Atom (B True))) (do kl_Parse_Case `pseq` eq kl_Parse_Case (Types.Atom (Types.N (Types.KI 9)))))))))
                                                                                                                           !kl_if_7 <- kl_Parse_X `pseq` applyWrapper appl_3 [kl_Parse_X]
                                                                                                                           klIf kl_if_7 (do !appl_8 <- kl_V1340 `pseq` hd kl_V1340
                                                                                                                                            !appl_9 <- appl_8 `pseq` tl appl_8
                                                                                                                                            !appl_10 <- kl_V1340 `pseq` kl_shen_hdtl kl_V1340
                                                                                                                                            !appl_11 <- appl_9 `pseq` (appl_10 `pseq` kl_shen_pair appl_9 appl_10)
                                                                                                                                            !appl_12 <- appl_11 `pseq` hd appl_11
                                                                                                                                            appl_12 `pseq` kl_shen_pair appl_12 (Types.Atom (Types.UnboundSym "shen.skip"))) (do kl_fail))))
                                                         !appl_13 <- kl_V1340 `pseq` hd kl_V1340
                                                         !appl_14 <- appl_13 `pseq` hd appl_13
                                                         appl_14 `pseq` applyWrapper appl_2 [appl_14]) (do kl_fail)

kl_shen_cons_form :: Types.KLValue ->
                     Types.KLContext Types.Env Types.KLValue
kl_shen_cons_form (!kl_V1341) = do let !appl_0 = List []
                                   !kl_if_1 <- appl_0 `pseq` (kl_V1341 `pseq` eq appl_0 kl_V1341)
                                   klIf kl_if_1 (do return (List [])) (do !kl_if_2 <- kl_V1341 `pseq` consP kl_V1341
                                                                          !kl_if_3 <- klIf kl_if_2 (do !appl_4 <- kl_V1341 `pseq` tl kl_V1341
                                                                                                       !kl_if_5 <- appl_4 `pseq` consP appl_4
                                                                                                       klIf kl_if_5 (do !appl_6 <- kl_V1341 `pseq` tl kl_V1341
                                                                                                                        !appl_7 <- appl_6 `pseq` tl appl_6
                                                                                                                        !kl_if_8 <- appl_7 `pseq` consP appl_7
                                                                                                                        klIf kl_if_8 (do let !appl_9 = List []
                                                                                                                                         !appl_10 <- kl_V1341 `pseq` tl kl_V1341
                                                                                                                                         !appl_11 <- appl_10 `pseq` tl appl_10
                                                                                                                                         !appl_12 <- appl_11 `pseq` tl appl_11
                                                                                                                                         !kl_if_13 <- appl_9 `pseq` (appl_12 `pseq` eq appl_9 appl_12)
                                                                                                                                         klIf kl_if_13 (do !appl_14 <- kl_V1341 `pseq` tl kl_V1341
                                                                                                                                                           !appl_15 <- appl_14 `pseq` hd appl_14
                                                                                                                                                           appl_15 `pseq` eq appl_15 (Types.Atom (Types.UnboundSym "bar!"))) (do return (Atom (B False)))) (do return (Atom (B False)))) (do return (Atom (B False)))) (do return (Atom (B False)))
                                                                          klIf kl_if_3 (do !appl_16 <- kl_V1341 `pseq` hd kl_V1341
                                                                                           !appl_17 <- kl_V1341 `pseq` tl kl_V1341
                                                                                           !appl_18 <- appl_17 `pseq` tl appl_17
                                                                                           !appl_19 <- appl_16 `pseq` (appl_18 `pseq` klCons appl_16 appl_18)
                                                                                           appl_19 `pseq` klCons (ApplC (wrapNamed "cons" klCons)) appl_19) (do !kl_if_20 <- kl_V1341 `pseq` consP kl_V1341
                                                                                                                                                                klIf kl_if_20 (do !appl_21 <- kl_V1341 `pseq` hd kl_V1341
                                                                                                                                                                                  !appl_22 <- kl_V1341 `pseq` tl kl_V1341
                                                                                                                                                                                  !appl_23 <- appl_22 `pseq` kl_shen_cons_form appl_22
                                                                                                                                                                                  let !appl_24 = List []
                                                                                                                                                                                  !appl_25 <- appl_23 `pseq` (appl_24 `pseq` klCons appl_23 appl_24)
                                                                                                                                                                                  !appl_26 <- appl_21 `pseq` (appl_25 `pseq` klCons appl_21 appl_25)
                                                                                                                                                                                  appl_26 `pseq` klCons (ApplC (wrapNamed "cons" klCons)) appl_26) (do klIf (Atom (B True)) (do let !aw_27 = Types.Atom (Types.UnboundSym "shen.f_error")
                                                                                                                                                                                                                                                                                applyWrapper aw_27 [ApplC (wrapNamed "shen.cons_form" kl_shen_cons_form)]) (do return (List [])))))

kl_shen_package_macro :: Types.KLValue ->
                         Types.KLValue -> Types.KLContext Types.Env Types.KLValue
kl_shen_package_macro (!kl_V1344) (!kl_V1345) = do !kl_if_0 <- kl_V1344 `pseq` consP kl_V1344
                                                   !kl_if_1 <- klIf kl_if_0 (do !appl_2 <- kl_V1344 `pseq` hd kl_V1344
                                                                                !kl_if_3 <- appl_2 `pseq` eq (Types.Atom (Types.UnboundSym "$")) appl_2
                                                                                klIf kl_if_3 (do !appl_4 <- kl_V1344 `pseq` tl kl_V1344
                                                                                                 !kl_if_5 <- appl_4 `pseq` consP appl_4
                                                                                                 klIf kl_if_5 (do let !appl_6 = List []
                                                                                                                  !appl_7 <- kl_V1344 `pseq` tl kl_V1344
                                                                                                                  !appl_8 <- appl_7 `pseq` tl appl_7
                                                                                                                  appl_6 `pseq` (appl_8 `pseq` eq appl_6 appl_8)) (do return (Atom (B False)))) (do return (Atom (B False)))) (do return (Atom (B False)))
                                                   klIf kl_if_1 (do !appl_9 <- kl_V1344 `pseq` tl kl_V1344
                                                                    !appl_10 <- appl_9 `pseq` hd appl_9
                                                                    !appl_11 <- appl_10 `pseq` kl_explode appl_10
                                                                    appl_11 `pseq` (kl_V1345 `pseq` kl_append appl_11 kl_V1345)) (do !kl_if_12 <- kl_V1344 `pseq` consP kl_V1344
                                                                                                                                     !kl_if_13 <- klIf kl_if_12 (do !appl_14 <- kl_V1344 `pseq` hd kl_V1344
                                                                                                                                                                    !kl_if_15 <- appl_14 `pseq` eq (Types.Atom (Types.UnboundSym "package")) appl_14
                                                                                                                                                                    klIf kl_if_15 (do !appl_16 <- kl_V1344 `pseq` tl kl_V1344
                                                                                                                                                                                      !kl_if_17 <- appl_16 `pseq` consP appl_16
                                                                                                                                                                                      klIf kl_if_17 (do !appl_18 <- kl_V1344 `pseq` tl kl_V1344
                                                                                                                                                                                                        !appl_19 <- appl_18 `pseq` hd appl_18
                                                                                                                                                                                                        !kl_if_20 <- appl_19 `pseq` eq (Types.Atom (Types.UnboundSym "null")) appl_19
                                                                                                                                                                                                        klIf kl_if_20 (do !appl_21 <- kl_V1344 `pseq` tl kl_V1344
                                                                                                                                                                                                                          !appl_22 <- appl_21 `pseq` tl appl_21
                                                                                                                                                                                                                          appl_22 `pseq` consP appl_22) (do return (Atom (B False)))) (do return (Atom (B False)))) (do return (Atom (B False)))) (do return (Atom (B False)))
                                                                                                                                     klIf kl_if_13 (do !appl_23 <- kl_V1344 `pseq` tl kl_V1344
                                                                                                                                                       !appl_24 <- appl_23 `pseq` tl appl_23
                                                                                                                                                       !appl_25 <- appl_24 `pseq` tl appl_24
                                                                                                                                                       appl_25 `pseq` (kl_V1345 `pseq` kl_append appl_25 kl_V1345)) (do !kl_if_26 <- kl_V1344 `pseq` consP kl_V1344
                                                                                                                                                                                                                        !kl_if_27 <- klIf kl_if_26 (do !appl_28 <- kl_V1344 `pseq` hd kl_V1344
                                                                                                                                                                                                                                                       !kl_if_29 <- appl_28 `pseq` eq (Types.Atom (Types.UnboundSym "package")) appl_28
                                                                                                                                                                                                                                                       klIf kl_if_29 (do !appl_30 <- kl_V1344 `pseq` tl kl_V1344
                                                                                                                                                                                                                                                                         !kl_if_31 <- appl_30 `pseq` consP appl_30
                                                                                                                                                                                                                                                                         klIf kl_if_31 (do !appl_32 <- kl_V1344 `pseq` tl kl_V1344
                                                                                                                                                                                                                                                                                           !appl_33 <- appl_32 `pseq` tl appl_32
                                                                                                                                                                                                                                                                                           appl_33 `pseq` consP appl_33) (do return (Atom (B False)))) (do return (Atom (B False)))) (do return (Atom (B False)))
                                                                                                                                                                                                                        klIf kl_if_27 (do let !appl_34 = ApplC (Func "lambda" (Context (\(!kl_ListofExceptions) -> do let !appl_35 = ApplC (Func "lambda" (Context (\(!kl_Record) -> do let !appl_36 = ApplC (Func "lambda" (Context (\(!kl_PackageNameDot) -> do !appl_37 <- kl_V1344 `pseq` tl kl_V1344
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  !appl_38 <- appl_37 `pseq` tl appl_37
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  !appl_39 <- appl_38 `pseq` tl appl_38
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  !appl_40 <- kl_PackageNameDot `pseq` (kl_ListofExceptions `pseq` (appl_39 `pseq` kl_shen_packageh kl_PackageNameDot kl_ListofExceptions appl_39))
                                                                                                                                                                                                                                                                                                                                                                                                                                                                  appl_40 `pseq` (kl_V1345 `pseq` kl_append appl_40 kl_V1345))))
                                                                                                                                                                                                                                                                                                                                                                                        !appl_41 <- kl_V1344 `pseq` tl kl_V1344
                                                                                                                                                                                                                                                                                                                                                                                        !appl_42 <- appl_41 `pseq` hd appl_41
                                                                                                                                                                                                                                                                                                                                                                                        !appl_43 <- appl_42 `pseq` str appl_42
                                                                                                                                                                                                                                                                                                                                                                                        !appl_44 <- appl_43 `pseq` cn appl_43 (Types.Atom (Types.Str "."))
                                                                                                                                                                                                                                                                                                                                                                                        !appl_45 <- appl_44 `pseq` intern appl_44
                                                                                                                                                                                                                                                                                                                                                                                        appl_45 `pseq` applyWrapper appl_36 [appl_45])))
                                                                                                                                                                                                                                                                                                                      !appl_46 <- kl_V1344 `pseq` tl kl_V1344
                                                                                                                                                                                                                                                                                                                      !appl_47 <- appl_46 `pseq` hd appl_46
                                                                                                                                                                                                                                                                                                                      !appl_48 <- kl_ListofExceptions `pseq` (appl_47 `pseq` kl_shen_record_exceptions kl_ListofExceptions appl_47)
                                                                                                                                                                                                                                                                                                                      appl_48 `pseq` applyWrapper appl_35 [appl_48])))
                                                                                                                                                                                                                                          !appl_49 <- kl_V1344 `pseq` tl kl_V1344
                                                                                                                                                                                                                                          !appl_50 <- appl_49 `pseq` tl appl_49
                                                                                                                                                                                                                                          !appl_51 <- appl_50 `pseq` hd appl_50
                                                                                                                                                                                                                                          !appl_52 <- appl_51 `pseq` kl_shen_eval_without_macros appl_51
                                                                                                                                                                                                                                          appl_52 `pseq` applyWrapper appl_34 [appl_52]) (do klIf (Atom (B True)) (do kl_V1344 `pseq` (kl_V1345 `pseq` klCons kl_V1344 kl_V1345)) (do return (List [])))))

kl_shen_record_exceptions :: Types.KLValue ->
                             Types.KLValue -> Types.KLContext Types.Env Types.KLValue
kl_shen_record_exceptions (!kl_V1346) (!kl_V1347) = do let !appl_0 = ApplC (Func "lambda" (Context (\(!kl_CurrExceptions) -> do let !appl_1 = ApplC (Func "lambda" (Context (\(!kl_AllExceptions) -> do !appl_2 <- value (Types.Atom (Types.UnboundSym "*property-vector*"))
                                                                                                                                                                                                        kl_V1347 `pseq` (kl_AllExceptions `pseq` (appl_2 `pseq` kl_put kl_V1347 (Types.Atom (Types.UnboundSym "shen.external-symbols")) kl_AllExceptions appl_2)))))
                                                                                                                                !appl_3 <- kl_V1346 `pseq` (kl_CurrExceptions `pseq` kl_union kl_V1346 kl_CurrExceptions)
                                                                                                                                appl_3 `pseq` applyWrapper appl_1 [appl_3])))
                                                       !appl_4 <- (do !appl_5 <- value (Types.Atom (Types.UnboundSym "*property-vector*"))
                                                                      kl_V1347 `pseq` (appl_5 `pseq` kl_get kl_V1347 (Types.Atom (Types.UnboundSym "shen.external-symbols")) appl_5)) `catchError` (\(!kl_E) -> do return (List []))
                                                       appl_4 `pseq` applyWrapper appl_0 [appl_4]

kl_shen_packageh :: Types.KLValue ->
                    Types.KLValue ->
                    Types.KLValue -> Types.KLContext Types.Env Types.KLValue
kl_shen_packageh (!kl_V1356) (!kl_V1357) (!kl_V1358) = do !kl_if_0 <- kl_V1358 `pseq` consP kl_V1358
                                                          klIf kl_if_0 (do !appl_1 <- kl_V1358 `pseq` hd kl_V1358
                                                                           !appl_2 <- kl_V1356 `pseq` (kl_V1357 `pseq` (appl_1 `pseq` kl_shen_packageh kl_V1356 kl_V1357 appl_1))
                                                                           !appl_3 <- kl_V1358 `pseq` tl kl_V1358
                                                                           !appl_4 <- kl_V1356 `pseq` (kl_V1357 `pseq` (appl_3 `pseq` kl_shen_packageh kl_V1356 kl_V1357 appl_3))
                                                                           appl_2 `pseq` (appl_4 `pseq` klCons appl_2 appl_4)) (do !kl_if_5 <- kl_V1358 `pseq` kl_shen_sysfuncP kl_V1358
                                                                                                                                   !kl_if_6 <- klIf kl_if_5 (do return (Atom (B True))) (do !kl_if_7 <- kl_V1358 `pseq` kl_variableP kl_V1358
                                                                                                                                                                                            klIf kl_if_7 (do return (Atom (B True))) (do !kl_if_8 <- kl_V1358 `pseq` (kl_V1357 `pseq` kl_elementP kl_V1358 kl_V1357)
                                                                                                                                                                                                                                         klIf kl_if_8 (do return (Atom (B True))) (do !kl_if_9 <- kl_V1358 `pseq` kl_shen_doubleunderlineP kl_V1358
                                                                                                                                                                                                                                                                                      klIf kl_if_9 (do return (Atom (B True))) (do kl_V1358 `pseq` kl_shen_singleunderlineP kl_V1358))))
                                                                                                                                   klIf kl_if_6 (do return kl_V1358) (do !kl_if_10 <- kl_V1358 `pseq` kl_symbolP kl_V1358
                                                                                                                                                                         !kl_if_11 <- klIf kl_if_10 (do let !appl_12 = List []
                                                                                                                                                                                                        !appl_13 <- appl_12 `pseq` klCons (Types.Atom (Types.Str ".")) appl_12
                                                                                                                                                                                                        !appl_14 <- appl_13 `pseq` klCons (Types.Atom (Types.Str "n")) appl_13
                                                                                                                                                                                                        !appl_15 <- appl_14 `pseq` klCons (Types.Atom (Types.Str "e")) appl_14
                                                                                                                                                                                                        !appl_16 <- appl_15 `pseq` klCons (Types.Atom (Types.Str "h")) appl_15
                                                                                                                                                                                                        !appl_17 <- appl_16 `pseq` klCons (Types.Atom (Types.Str "s")) appl_16
                                                                                                                                                                                                        !appl_18 <- kl_V1358 `pseq` kl_explode kl_V1358
                                                                                                                                                                                                        !appl_19 <- appl_17 `pseq` (appl_18 `pseq` kl_shen_prefixP appl_17 appl_18)
                                                                                                                                                                                                        appl_19 `pseq` kl_not appl_19) (do return (Atom (B False)))
                                                                                                                                                                         klIf kl_if_11 (do kl_V1356 `pseq` (kl_V1358 `pseq` kl_concat kl_V1356 kl_V1358)) (do klIf (Atom (B True)) (do return kl_V1358) (do return (List [])))))

expr5 :: Types.KLContext Types.Env Types.KLValue
expr5 = do (return $ List [])
